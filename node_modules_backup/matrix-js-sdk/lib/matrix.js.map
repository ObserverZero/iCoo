{"version":3,"file":"matrix.js","names":["cryptoStoreFactory","MemoryCryptoStore","setCryptoStoreFactory","fac","amendClientOpts","opts","store","MemoryStore","localStorage","global","scheduler","MatrixScheduler","cryptoStore","createClient","MatrixClient","createRoomWidgetClient","widgetApi","capabilities","roomId","RoomWidgetClient"],"sources":["../src/matrix.ts"],"sourcesContent":["/*\nCopyright 2015-2022 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { WidgetApi } from \"matrix-widget-api\";\n\nimport { MemoryCryptoStore } from \"./crypto/store/memory-crypto-store\";\nimport { MemoryStore } from \"./store/memory\";\nimport { MatrixScheduler } from \"./scheduler\";\nimport { MatrixClient, ICreateClientOpts } from \"./client\";\nimport { RoomWidgetClient, ICapabilities } from \"./embedded\";\nimport { CryptoStore } from \"./crypto/store/base\";\n\nexport * from \"./client\";\nexport * from \"./embedded\";\nexport * from \"./http-api\";\nexport * from \"./autodiscovery\";\nexport * from \"./sync-accumulator\";\nexport * from \"./errors\";\nexport * from \"./models/beacon\";\nexport * from \"./models/event\";\nexport * from \"./models/room\";\nexport * from \"./models/event-timeline\";\nexport * from \"./models/event-timeline-set\";\nexport * from \"./models/room-member\";\nexport * from \"./models/room-state\";\nexport * from \"./models/user\";\nexport * from \"./scheduler\";\nexport * from \"./filter\";\nexport * from \"./timeline-window\";\nexport * from \"./interactive-auth\";\nexport * from \"./service-types\";\nexport * from \"./store/memory\";\nexport * from \"./store/indexeddb\";\nexport * from \"./crypto/store/memory-crypto-store\";\nexport * from \"./crypto/store/indexeddb-crypto-store\";\nexport * from \"./content-repo\";\nexport * from './@types/event';\nexport * from './@types/PushRules';\nexport * from './@types/partials';\nexport * from './@types/requests';\nexport * from './@types/search';\nexport * from './models/room-summary';\nexport * as ContentHelpers from \"./content-helpers\";\nexport type { ICryptoCallbacks } from \"./crypto\"; // used to be located here\nexport { createNewMatrixCall } from \"./webrtc/call\";\nexport type { MatrixCall } from \"./webrtc/call\";\nexport {\n    GroupCallEvent,\n    GroupCallIntent,\n    GroupCallState,\n    GroupCallType,\n} from \"./webrtc/groupCall\";\nexport type { GroupCall } from \"./webrtc/groupCall\";\n\nlet cryptoStoreFactory = (): CryptoStore => new MemoryCryptoStore;\n\n/**\n * Configure a different factory to be used for creating crypto stores\n *\n * @param {Function} fac  a function which will return a new\n *    {@link module:crypto.store.base~CryptoStore}.\n */\nexport function setCryptoStoreFactory(fac: () => CryptoStore): void {\n    cryptoStoreFactory = fac;\n}\n\nfunction amendClientOpts(opts: ICreateClientOpts): ICreateClientOpts {\n    opts.store = opts.store ?? new MemoryStore({\n        localStorage: global.localStorage,\n    });\n    opts.scheduler = opts.scheduler ?? new MatrixScheduler();\n    opts.cryptoStore = opts.cryptoStore ?? cryptoStoreFactory();\n\n    return opts;\n}\n\n/**\n * Construct a Matrix Client. Similar to {@link module:client.MatrixClient}\n * except that the 'request', 'store' and 'scheduler' dependencies are satisfied.\n * @param {Object} opts The configuration options for this client. These configuration\n * options will be passed directly to {@link module:client.MatrixClient}.\n * @param {Object} opts.store If not set, defaults to\n * {@link module:store/memory.MemoryStore}.\n * @param {Object} opts.scheduler If not set, defaults to\n * {@link module:scheduler~MatrixScheduler}.\n *\n * @param {module:crypto.store.base~CryptoStore=} opts.cryptoStore\n *    crypto store implementation. Calls the factory supplied to\n *    {@link setCryptoStoreFactory} if unspecified; or if no factory has been\n *    specified, uses a default implementation (indexeddb in the browser,\n *    in-memory otherwise).\n *\n * @return {MatrixClient} A new matrix client.\n * @see {@link module:client.MatrixClient} for the full list of options for\n * <code>opts</code>.\n */\nexport function createClient(opts: ICreateClientOpts): MatrixClient {\n    return new MatrixClient(amendClientOpts(opts));\n}\n\nexport function createRoomWidgetClient(\n    widgetApi: WidgetApi,\n    capabilities: ICapabilities,\n    roomId: string,\n    opts: ICreateClientOpts,\n): MatrixClient {\n    return new RoomWidgetClient(widgetApi, capabilities, roomId, amendClientOpts(opts));\n}\n"],"mappings":"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"}
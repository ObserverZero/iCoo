{"ast":null,"code":"import { defineStore } from 'pinia';\nimport sdk, { EventType } from 'matrix-js-sdk';\nconst client = sdk.createClient({\n  baseUrl: \"https://matrix.org\",\n  accessToken: \"syt_b2JzZXJ2ZXJ6ZXJv_qbsSNMdGRZpXMsNvXJeX_3OODDh\",\n  userId: \"@observerzero:matrix.org\"\n});\nclient.startClient();\nfunction getAllRooms() {\n  const rooms = client.getRooms();\n  return rooms;\n}\nasync function getARoom(roomId) {\n  const room = await client.getRoom(roomId);\n  return room;\n}\nfunction getAllRoomNames() {\n  const rooms = getAllRooms();\n  const roomNames = rooms.map(room => room.name);\n  roomNames.forEach(roomName => console.log(roomName));\n  return roomNames;\n}\nfunction getAllRoomTypes() {\n  const rooms = getAllRooms();\n  const roomTypes = rooms.map(room => room.name);\n  rooTypes.forEach(roomName => console.log(roomName));\n  return roomNames;\n}\nfunction login() {\n  client.loginWithPassword('username', 'password').then(function () {\n    console.log('Logged in!');\n  });\n}\n\n//TODO - Add a setter for creating a room\n//TODO - Refactor for returning objects instead of arrays\n\nexport const useMatrixClient = defineStore('matrix-client', {\n  state: () => {\n    return {\n      client: client,\n      getAllRooms: getAllRooms,\n      getARoom: getARoom,\n      getAllRoomNames: getAllRoomNames,\n      getAllRoomTypes: getAllRoomTypes\n    };\n  },\n  getters: {\n    getRoom: state => roomId => {\n      return state.getARoom(roomId);\n    },\n    getRooms: state => () => {\n      return state.getAllRooms();\n    },\n    getRoomNames: state => () => {\n      return state.getAllRoomNames();\n    },\n    getAllRoomTypes: state => () => {\n      return state.getAllRoomTypes();\n    }\n  }\n});","map":{"version":3,"names":["defineStore","sdk","EventType","client","createClient","baseUrl","accessToken","userId","startClient","getAllRooms","rooms","getRooms","getARoom","roomId","room","getRoom","getAllRoomNames","roomNames","map","name","forEach","roomName","console","log","getAllRoomTypes","roomTypes","rooTypes","login","loginWithPassword","then","useMatrixClient","state","getters","getRoomNames"],"sources":["/Users/observerzero/Project/Dev/icoo/src/stores/MatrixClient.js"],"sourcesContent":["import { defineStore } from 'pinia';\nimport sdk, {EventType} from 'matrix-js-sdk';\n\nconst client = sdk.createClient({\n  baseUrl: \"https://matrix.org\",\n  accessToken: \"syt_b2JzZXJ2ZXJ6ZXJv_qbsSNMdGRZpXMsNvXJeX_3OODDh\",\n  userId: \"@observerzero:matrix.org\"\n});\n\nclient.startClient();\n\nfunction getAllRooms() {\n  const rooms = client.getRooms();\n  return rooms;\n}\n\nasync function getARoom(roomId) {\n  const room = await client.getRoom(roomId);\n  return room;\n}\n\nfunction getAllRoomNames() {\n  const rooms = getAllRooms();\n  const roomNames = rooms.map(room => room.name);\n  roomNames.forEach(roomName => console.log(roomName))\n  return roomNames;\n}\n\nfunction getAllRoomTypes() {\n  const rooms = getAllRooms();\n  const roomTypes = rooms.map(room => room.name);\n  rooTypes.forEach(roomName => console.log(roomName))\n  return roomNames;\n}\n\nfunction login() {\n  client.loginWithPassword('username', 'password').then(function() {\n    console.log('Logged in!')\n  })\n}\n\n//TODO - Add a setter for creating a room\n//TODO - Refactor for returning objects instead of arrays\n\nexport const useMatrixClient = defineStore('matrix-client', {\n  state: () => {\n    return ({\n      client: client,\n      getAllRooms: getAllRooms,\n      getARoom: getARoom,\n      getAllRoomNames: getAllRoomNames,\n      getAllRoomTypes: getAllRoomTypes,\n    });\n  },\n  getters: {\n    getRoom: (state) => (roomId) => {\n      return state.getARoom(roomId);\n    },\n    getRooms: (state) => () => {\n      return state.getAllRooms();\n    },\n    getRoomNames: (state) => () => {\n      return state.getAllRoomNames();\n    },\n    getAllRoomTypes: (state) => () => {\n      return state.getAllRoomTypes();\n    },\n  }\n})\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,OAAOC,GAAG,IAAGC,SAAS,QAAO,eAAe;AAE5C,MAAMC,MAAM,GAAGF,GAAG,CAACG,YAAY,CAAC;EAC9BC,OAAO,EAAE,oBAAoB;EAC7BC,WAAW,EAAE,kDAAkD;EAC/DC,MAAM,EAAE;AACV,CAAC,CAAC;AAEFJ,MAAM,CAACK,WAAW,EAAE;AAEpB,SAASC,WAAW,GAAG;EACrB,MAAMC,KAAK,GAAGP,MAAM,CAACQ,QAAQ,EAAE;EAC/B,OAAOD,KAAK;AACd;AAEA,eAAeE,QAAQ,CAACC,MAAM,EAAE;EAC9B,MAAMC,IAAI,GAAG,MAAMX,MAAM,CAACY,OAAO,CAACF,MAAM,CAAC;EACzC,OAAOC,IAAI;AACb;AAEA,SAASE,eAAe,GAAG;EACzB,MAAMN,KAAK,GAAGD,WAAW,EAAE;EAC3B,MAAMQ,SAAS,GAAGP,KAAK,CAACQ,GAAG,CAACJ,IAAI,IAAIA,IAAI,CAACK,IAAI,CAAC;EAC9CF,SAAS,CAACG,OAAO,CAACC,QAAQ,IAAIC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC,CAAC;EACpD,OAAOJ,SAAS;AAClB;AAEA,SAASO,eAAe,GAAG;EACzB,MAAMd,KAAK,GAAGD,WAAW,EAAE;EAC3B,MAAMgB,SAAS,GAAGf,KAAK,CAACQ,GAAG,CAACJ,IAAI,IAAIA,IAAI,CAACK,IAAI,CAAC;EAC9CO,QAAQ,CAACN,OAAO,CAACC,QAAQ,IAAIC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC,CAAC;EACnD,OAAOJ,SAAS;AAClB;AAEA,SAASU,KAAK,GAAG;EACfxB,MAAM,CAACyB,iBAAiB,CAAC,UAAU,EAAE,UAAU,CAAC,CAACC,IAAI,CAAC,YAAW;IAC/DP,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;EAC3B,CAAC,CAAC;AACJ;;AAEA;AACA;;AAEA,OAAO,MAAMO,eAAe,GAAG9B,WAAW,CAAC,eAAe,EAAE;EAC1D+B,KAAK,EAAE,MAAM;IACX,OAAQ;MACN5B,MAAM,EAAEA,MAAM;MACdM,WAAW,EAAEA,WAAW;MACxBG,QAAQ,EAAEA,QAAQ;MAClBI,eAAe,EAAEA,eAAe;MAChCQ,eAAe,EAAEA;IACnB,CAAC;EACH,CAAC;EACDQ,OAAO,EAAE;IACPjB,OAAO,EAAGgB,KAAK,IAAMlB,MAAM,IAAK;MAC9B,OAAOkB,KAAK,CAACnB,QAAQ,CAACC,MAAM,CAAC;IAC/B,CAAC;IACDF,QAAQ,EAAGoB,KAAK,IAAK,MAAM;MACzB,OAAOA,KAAK,CAACtB,WAAW,EAAE;IAC5B,CAAC;IACDwB,YAAY,EAAGF,KAAK,IAAK,MAAM;MAC7B,OAAOA,KAAK,CAACf,eAAe,EAAE;IAChC,CAAC;IACDQ,eAAe,EAAGO,KAAK,IAAK,MAAM;MAChC,OAAOA,KAAK,CAACP,eAAe,EAAE;IAChC;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
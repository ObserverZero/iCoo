{"ast":null,"code":"/* eslint-disable vue/no-unused-components */\nimport { IonItem, IonCardHeader, IonCardContent, IonList, IonButton, IonButtons, IonCardTitle, IonChip, IonAvatar, IonCard, IonLabel } from '@ionic/vue';\nimport { useMatrixClient } from '@/stores/MatrixClient.js';\nlet client = useMatrixClient();\nexport default {\n  name: \"ChatItem\",\n  props: {\n    message: String\n  },\n  components: {\n    IonCardContent,\n    IonAvatar,\n    IonItem,\n    IonCard,\n    IonLabel,\n    IonCardHeader,\n    IonChip\n  },\n  methods: {\n    cancel() {\n      this.$refs.modal.$el.dismiss(null, 'cancel');\n    },\n    confirm() {\n      const name = this.$refs.input.$el.value;\n      this.$refs.modal.$el.dismiss(name, 'confirm');\n    },\n    onWillDismiss(ev) {\n      if (ev.detail.role === 'confirm') {\n        this.message = `Hello, ${ev.detail.data}!`;\n      }\n    },\n    async openModal(topic) {\n      let thaTopic = topic;\n      const modal = await modalController.create({\n        component: ChatModal,\n        componentProps: {\n          message: thaTopic\n        }\n      });\n      await modal.present();\n      const {\n        data,\n        role\n      } = await modal.onWillDismiss();\n      if (role === 'confirm') {\n        console.log(\"sure thing\");\n      }\n    },\n    async fetchData() {\n      const id = \"!\" + this.$route.params.id + \":matrix.org\";\n      setInterval(async () => {\n        try {\n          content = await client.getChatContent(this.groupId);\n        } catch (_unused) {\n          return;\n        }\n      }, 2000);\n    }\n  }\n};","map":{"version":3,"mappings":"AAgBA;AACA,SACEA,OAAO,EACPC,aAAa,EACbC,cAAc,EACdC,OAAO,EACPC,SAAS,EACTC,UAAU,EACVC,YAAY,EACZC,OAAO,EACPC,SAAS,EACTC,OAAO,EACPC,QAAQ,QACH,YAAY;AACnB,SAAQC,eAAe,QAAO,0BAA0B;AAExD,IAAIC,MAAK,GAAID,eAAe,EAAC;AAE7B,eAAe;EACbE,IAAI,EAAE,UAAU;EAChBC,KAAK,EAAE;IACLC,OAAO,EAAEC;EACX,CAAC;EACDC,UAAU,EAAE;IACVf,cAAc;IACdM,SAAS;IACTR,OAAO;IACPS,OAAO;IACPC,QAAQ;IACRT,aAAa;IACbM;EACF,CAAC;EACDW,OAAO,EAAE;IACPC,MAAM,GAAG;MACP,IAAI,CAACC,KAAK,CAACC,KAAK,CAACC,GAAG,CAACC,OAAO,CAAC,IAAI,EAAE,QAAQ,CAAC;IAC9C,CAAC;IACDC,OAAO,GAAG;MACR,MAAMX,IAAG,GAAI,IAAI,CAACO,KAAK,CAACK,KAAK,CAACH,GAAG,CAACI,KAAK;MACvC,IAAI,CAACN,KAAK,CAACC,KAAK,CAACC,GAAG,CAACC,OAAO,CAACV,IAAI,EAAE,SAAS,CAAC;IAC/C,CAAC;IACDc,aAAa,CAACC,EAAE,EAAE;MAChB,IAAIA,EAAE,CAACC,MAAM,CAACC,IAAG,KAAM,SAAS,EAAE;QAChC,IAAI,CAACf,OAAM,GAAK,UAASa,EAAE,CAACC,MAAM,CAACE,IAAK,GAAE;MAC5C;IACF,CAAC;IAED,MAAMC,SAAS,CAACC,KAAK,EAAE;MACrB,IAAIC,QAAO,GAAID,KAAK;MACpB,MAAMZ,KAAI,GAAI,MAAMc,eAAe,CAACC,MAAM,CAAC;QACzCC,SAAS,EAAEC,SAAS;QACpBC,cAAc,EAAE;UACdxB,OAAO,EAAEmB;QACX;MACF,CAAC,CAAC;MACF,MAAMb,KAAK,CAACmB,OAAO,EAAE;MAErB,MAAM;QAACT,IAAI;QAAED;MAAI,IAAI,MAAMT,KAAK,CAACM,aAAa,EAAE;MAEhD,IAAIG,IAAG,KAAM,SAAS,EAAE;QACtBW,OAAO,CAACC,GAAG,CAAC,YAAY;MAC1B;IACF,CAAC;IAED,MAAMC,SAAS,GAAG;MAChB,MAAMC,EAAC,GAAI,GAAE,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACF,EAAC,GAAI,aAAa;MACtDG,WAAW,CAAC,YAAY;QACtB,IAAI;UACFC,OAAM,GAAI,MAAMpC,MAAM,CAACqC,cAAc,CAAC,IAAI,CAACC,OAAO;QACpD,EAAE,gBAAM;UACN;QACF;MACF,CAAC,EAAE,IAAI,CAAC;IACV;EACF;AACF","names":["IonItem","IonCardHeader","IonCardContent","IonList","IonButton","IonButtons","IonCardTitle","IonChip","IonAvatar","IonCard","IonLabel","useMatrixClient","client","name","props","message","String","components","methods","cancel","$refs","modal","$el","dismiss","confirm","input","value","onWillDismiss","ev","detail","role","data","openModal","topic","thaTopic","modalController","create","component","ChatModal","componentProps","present","console","log","fetchData","id","$route","params","setInterval","content","getChatContent","groupId"],"sourceRoot":"","sources":["/Users/observerzero/Project/Dev/icoo/src/components/ChatItem.vue"],"sourcesContent":["<template>\n  <IonCard>\n    <IonCardHeader>\n      <IonItem>\n        <IonAvatar>\n          <img alt=\"Person\" src=\"../../public/assets/banners/hacker_soft_colors.png\"/>\n        </IonAvatar>\n        <IonLabel>\n          Dis guys name\n        </IonLabel>\n      </IonItem>\n    </IonCardHeader>\n    <IonCardContent>{{ message }}</IonCardContent>\n  </IonCard>\n</template>\n<script>\n/* eslint-disable vue/no-unused-components */\nimport {\n  IonItem,\n  IonCardHeader,\n  IonCardContent,\n  IonList,\n  IonButton,\n  IonButtons,\n  IonCardTitle,\n  IonChip,\n  IonAvatar, \n  IonCard, \n  IonLabel,\n} from '@ionic/vue';\nimport {useMatrixClient} from '@/stores/MatrixClient.js';\n\nlet client = useMatrixClient()\n\nexport default {\n  name: \"ChatItem\",\n  props: {\n    message: String,\n  },\n  components: {\n    IonCardContent,\n    IonAvatar,\n    IonItem,\n    IonCard,\n    IonLabel,\n    IonCardHeader,\n    IonChip,\n  },\n  methods: {\n    cancel() {\n      this.$refs.modal.$el.dismiss(null, 'cancel');\n    },\n    confirm() {\n      const name = this.$refs.input.$el.value;\n      this.$refs.modal.$el.dismiss(name, 'confirm');\n    },\n    onWillDismiss(ev) {\n      if (ev.detail.role === 'confirm') {\n        this.message = `Hello, ${ev.detail.data}!`;\n      }\n    },\n\n    async openModal(topic) {\n      let thaTopic = topic;\n      const modal = await modalController.create({\n        component: ChatModal,\n        componentProps: {\n          message: thaTopic,\n        }\n      });\n      await modal.present();\n\n      const {data, role} = await modal.onWillDismiss();\n\n      if (role === 'confirm') {\n        console.log(\"sure thing\")\n      }\n    },\n\n    async fetchData() {\n      const id = \"!\" + this.$route.params.id + \":matrix.org\";\n      setInterval(async () => {\n        try {\n          content = await client.getChatContent(this.groupId)\n        } catch {\n          return\n        }\n      }, 2000);\n    },\n  },\n}\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache) {\n  const _component_IonTitle = _resolveComponent(\"IonTitle\");\n  const _component_IonToolbar = _resolveComponent(\"IonToolbar\");\n  const _component_IonHeader = _resolveComponent(\"IonHeader\");\n  const _component_CalendarItem = _resolveComponent(\"CalendarItem\");\n  const _component_IonList = _resolveComponent(\"IonList\");\n  const _component_IonContent = _resolveComponent(\"IonContent\");\n  const _component_IonPage = _resolveComponent(\"IonPage\");\n  return _openBlock(), _createBlock(_component_IonPage, null, {\n    default: _withCtx(() => [_createVNode(_component_IonHeader, null, {\n      default: _withCtx(() => [_createVNode(_component_IonToolbar, null, {\n        default: _withCtx(() => [_createVNode(_component_IonTitle, null, {\n          default: _withCtx(() => [_createTextVNode(\"Calendar\")]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_IonContent, {\n      fullscreen: true\n    }, {\n      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.roomNamesAndIds, (value, name) => {\n        return _openBlock(), _createBlock(_component_IonList, {\n          key: name\n        }, {\n          default: _withCtx(() => [_createVNode(_component_CalendarItem, {\n            name: value.name,\n            id: value.id\n          }, null, 8 /* PROPS */, [\"name\", \"id\"])]),\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */);\n      }), 128 /* KEYED_FRAGMENT */))]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"mappings":";;;;;;;;;uBACEA,aAaUC;sBAZR,MAIY,CAJZC,aAIYC;wBAHV,MAEa,CAFbD,aAEaE;0BADX,MAA6B,CAA7BF,aAA6BG;4BAAnB,MAAQ,kBAAR,UAAQ;;;;;;;;QAGtBH,aAMaI;MANAC,UAAU,EAAE;IAAI;wBAElB,MAAwC,oBAAjDC,oBAEUC,6BAFuBC,oBAAe,GAA/BC,KAAK,EAAEC,IAAI;6BAA5BZ,aAEUa;UAFyCC,GAAG,EAAEF;QAAI;4BAC1D,MAA+D,CAA/DV,aAA+Da;YAAhDH,IAAI,EAAED,KAAK,CAACC,IAAI;YAAGI,EAAE,EAAEL,KAAK,CAACK","names":["_createBlock","_component_IonPage","_createVNode","_component_IonHeader","_component_IonToolbar","_component_IonTitle","_component_IonContent","fullscreen","_createElementBlock","_Fragment","_ctx","value","name","_component_IonList","key","_component_CalendarItem","id"],"sourceRoot":"","sources":["/Users/observerzero/Project/Dev/icoo/src/views/Calendar.vue"],"sourcesContent":["<template>\n  <IonPage>\n    <IonHeader>\n      <IonToolbar>\n        <IonTitle>Calendar</IonTitle>\n      </IonToolbar>\n    </IonHeader>\n    <IonContent :fullscreen=\"true\">\n\n      <IonList v-for=\"(value, name) in roomNamesAndIds\" :key=\"name\">\n        <CalendarItem :name=\"value.name\" :id=\"value.id\"></CalendarItem>\n      </IonList>\n\n    </IonContent>\n  </IonPage>\n</template>\n\n<script lang=\"js\">\nimport { defineComponent, reactive } from 'vue';\nimport { IonPage, IonHeader, IonToolbar, IonTitle, IonContent, IonList } from '@ionic/vue';\nimport { useMatrixClient } from '../stores/MatrixClient.js';\nimport CalendarItem from \"@/components/CalendarItem.vue\";\n\nconst client = useMatrixClient()\nlet roomNamesAndIds = reactive({})\n\nsetInterval(() => {\n  Object.assign(roomNamesAndIds, client.getAllRoomNamesAndIds())\n}, 10000)\n\nexport default defineComponent({\n  name: 'CalendarPage',\n  components: {CalendarItem, IonHeader, IonToolbar, IonTitle, IonContent, IonPage },\n  data() {\n    return {\n      roomNamesAndIds: roomNamesAndIds,\n    }\n  },\n  methods: {\n      cancel() {\n        this.$refs.modal.$el.dismiss(null, 'cancel');\n      },\n      confirm() {\n        const name = this.$refs.input.$el.value;\n        this.$refs.modal.$el.dismiss(name, 'confirm');\n      },\n    },\n});\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
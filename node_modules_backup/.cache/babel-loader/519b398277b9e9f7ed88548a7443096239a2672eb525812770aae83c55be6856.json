{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { defineStore } from 'pinia';\nimport sdk, { EventType } from 'matrix-js-sdk';\nlet roomNamesAndIdsAsObject = {};\nconst accessToken = \"syt_b2JzZXJ2ZXJ6ZXJv_qbsSNMdGRZpXMsNvXJeX_3OODDh\";\nconst userId = \"@observerzero:matrix.org\";\nconst baseUrl = 'https://matrix.org';\nconst client = sdk.createClient({\n  baseUrl: baseUrl,\n  accessToken: accessToken,\n  userId: userId\n});\nclient.startClient();\nfunction getRoomTopic(roomId) {\n  fetch(`${baseUrl}/_matrix/client/r0/rooms/${encodeURIComponent(roomId)}/state/m.room.topic`, {\n    headers: {\n      'Authorization': `Bearer ${accessToken}`\n    }\n  }).then(response => {\n    if (!response.ok) {\n      throw new Error(`HTTP error ${response.status}`);\n    }\n    return response.json();\n  }).then(json => {\n    const topic = json.topic;\n    console.log(`Room topic: ${topic}`);\n  }).catch(error => {\n    console.error(`Error getting room: ${error}`);\n  });\n}\nfunction login() {\n  client.loginWithPassword('username', 'password').then(function () {\n    console.log('Logged in!');\n  });\n}\nfunction returnRoomNamesFromRoomObject(rooms) {\n  const roomNames = rooms.map(room => room.name);\n  return roomNames;\n}\nfunction returnRoomIdsFromRoomObject(rooms) {\n  const roomIds = rooms.map(room => room.roomId);\n  return roomIds;\n}\nfunction returnRoomMembersFromRoomObject(rooms) {\n  const roomMembers = rooms.map(room => room.type);\n  return roomMembers;\n}\nfunction getGroups() {\n  let rooms = client.getRooms();\n  let roomNames = returnRoomNamesFromRoomObject(rooms);\n  let roomIds = returnRoomIdsFromRoomObject(rooms);\n  let roomMembers = returnRoomMembersFromRoomObject(rooms);\n  let roomProduct = [];\n  for (let i = 0; i < roomNames.length; i++) {\n    roomProduct.push({\n      name: roomNames[i],\n      id: roomIds[i],\n      members: roomMembers[i]\n    });\n  }\n  Object.assign(roomNamesAndIdsAsObject, roomProduct);\n  console.log(roomNamesAndIdsAsObject);\n  return roomNamesAndIdsAsObject;\n}\nfunction createGroup(groupName) {\n  client.createRoom({\n    name: groupName,\n    visibility: 'private'\n  }).then(response => {\n    console.log(`Room created: ${response.room_id}`);\n  }).catch(error => {\n    console.error(`Error creating room: ${error}`);\n  });\n}\n\n//TODO - Add a getter to get a room's timeline\n//TODO - Add a getter to get a room's type\n\nexport const useMatrixClient = defineStore('matrix-client', {\n  state: () => {\n    return {\n      client: client,\n      getGroups: getGroups,\n      createGroup: createGroup\n    };\n  },\n  getters: {\n    getRooms: state => () => {\n      return state.getRooms();\n    },\n    getRoomNamesAndIds: state => () => {\n      return state.getGroups();\n    }\n  },\n  setters: {\n    createGroup: state => groupName => {\n      return state.createGroup(groupName);\n    }\n  }\n});","map":{"version":3,"names":["defineStore","sdk","EventType","roomNamesAndIdsAsObject","accessToken","userId","baseUrl","client","createClient","startClient","getRoomTopic","roomId","fetch","encodeURIComponent","headers","then","response","ok","Error","status","json","topic","console","log","catch","error","login","loginWithPassword","returnRoomNamesFromRoomObject","rooms","roomNames","map","room","name","returnRoomIdsFromRoomObject","roomIds","returnRoomMembersFromRoomObject","roomMembers","type","getGroups","getRooms","roomProduct","i","length","push","id","members","Object","assign","createGroup","groupName","createRoom","visibility","room_id","useMatrixClient","state","getters","getRoomNamesAndIds","setters"],"sources":["/Users/observerzero/Project/Dev/icoo/src/stores/MatrixClient.js"],"sourcesContent":["import { defineStore } from 'pinia';\nimport sdk, {EventType} from 'matrix-js-sdk';\n\nlet roomNamesAndIdsAsObject = {};\nconst accessToken = \"syt_b2JzZXJ2ZXJ6ZXJv_qbsSNMdGRZpXMsNvXJeX_3OODDh\"\nconst userId = \"@observerzero:matrix.org\";\nconst baseUrl = 'https://matrix.org'\n\nconst client = sdk.createClient({\n  baseUrl: baseUrl,\n  accessToken: accessToken,\n  userId: userId,\n});\n\nclient.startClient();\n\nfunction getRoomTopic(roomId) {\n  fetch(`${baseUrl}/_matrix/client/r0/rooms/${encodeURIComponent(roomId)}/state/m.room.topic`, {\n    headers: {\n      'Authorization': `Bearer ${accessToken}`\n    }\n  }).then((response) => {\n    if (!response.ok) {\n      throw new Error(`HTTP error ${response.status}`);\n    }\n    return response.json();\n  }).then((json) => {\n    const topic = json.topic;\n    console.log(`Room topic: ${topic}`);\n  }).catch((error) => {\n    console.error(`Error getting room: ${error}`);\n  });\n}\n\nfunction login() {\n  client.loginWithPassword('username', 'password').then(function() {\n    console.log('Logged in!')\n  })\n}\n\nfunction returnRoomNamesFromRoomObject(rooms) {\n  const roomNames = rooms.map(room => room.name);\n  return roomNames;\n}\n\nfunction returnRoomIdsFromRoomObject(rooms) {\n  const roomIds = rooms.map(room => room.roomId);\n  return roomIds;\n}\n\nfunction returnRoomMembersFromRoomObject(rooms) {\n  const roomMembers = rooms.map(room => room.type);\n  return roomMembers;\n}\n\nfunction getGroups() {\n  let rooms = client.getRooms()\n  let roomNames = returnRoomNamesFromRoomObject(rooms)\n  let roomIds = returnRoomIdsFromRoomObject(rooms);\n  let roomMembers = returnRoomMembersFromRoomObject(rooms);\n  let roomProduct = [];\n  for (let i = 0; i < roomNames.length; i++) {\n    roomProduct.push({\n      name: roomNames[i],\n      id: roomIds[i],\n      members: roomMembers[i],\n    })\n  }\n  Object.assign(roomNamesAndIdsAsObject, roomProduct)\n  console.log(roomNamesAndIdsAsObject)\n  return roomNamesAndIdsAsObject;\n}\n\nfunction createGroup(groupName) {\n  client.createRoom({\n    name: groupName,\n    visibility: 'private',\n  }).then((response) => {\n    console.log(`Room created: ${response.room_id}`);\n  }).catch((error) => {\n    console.error(`Error creating room: ${error}`);\n  });\n}\n\n//TODO - Add a getter to get a room's timeline\n//TODO - Add a getter to get a room's type\n\nexport const useMatrixClient = defineStore('matrix-client', {\n  state: () => {\n    return ({\n      client: client,\n      getGroups: getGroups,\n      createGroup: createGroup,\n    });\n  },\n  getters: {\n    getRooms: (state) => () => {\n      return state.getRooms();\n    },\n    getRoomNamesAndIds: (state) => () => {\n      return state.getGroups();\n    },\n  },\n  setters: {\n    createGroup: (state) => (groupName) => {\n      return state.createGroup(groupName);\n    },\n  }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
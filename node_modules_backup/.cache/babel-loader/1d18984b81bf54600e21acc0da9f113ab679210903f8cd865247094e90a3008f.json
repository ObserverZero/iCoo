{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineStore } from 'pinia';\nimport sdk, { EventType } from 'matrix-js-sdk';\nlet roomNamesAndIdsAsObject = {};\nconst client = sdk.createClient({\n  baseUrl: \"https://matrix.org\",\n  accessToken: \"syt_b2JzZXJ2ZXJ6ZXJv_qbsSNMdGRZpXMsNvXJeX_3OODDh\",\n  userId: \"@observerzero:matrix.org\"\n});\nclient.startClient();\nfunction login() {\n  client.loginWithPassword('username', 'password').then(function () {\n    console.log('Logged in!');\n  });\n}\nfunction returnRoomNamesFromRoomObject(rooms) {\n  const roomNames = rooms.map(room => room.name);\n  return roomNames;\n}\nfunction returnRoomIdsFromRoomObject(rooms) {\n  const roomIds = rooms.map(room => room.roomId);\n  return roomIds;\n}\nfunction getAllRoomNamesAndIds() {\n  let rooms = client.getRooms();\n  let roomNames = returnRoomNamesFromRoomObject(rooms);\n  let roomIds = returnRoomIdsFromRoomObject(rooms);\n  let roomNamesAndIds = [];\n  for (let i = 0; i < roomNames.length; i++) {\n    roomNamesAndIds.push({\n      name: roomNames[i],\n      id: roomIds[i]\n    });\n  }\n  Object.assign(roomNamesAndIdsAsObject, roomNamesAndIds);\n  return roomNamesAndIdsAsObject;\n}\n\n//TODO - Add a setter for creating a room\n//TODO - Refactor for returning objects instead of arrays\n//TODO - Add a function to get a room's timeline\n//TODO - Add a function to get a room's type\n\nexport const useMatrixClient = defineStore('matrix-client', {\n  state: () => {\n    return {\n      client: client,\n      getAllRoomNamesAndIds: getAllRoomNamesAndIds\n    };\n  },\n  getters: {\n    getRooms: state => () => {\n      return state.getRooms();\n    },\n    getRoomNamesAndIds: state => () => {\n      return state.getAllRoomNamesAndIds();\n    }\n  }\n});","map":{"version":3,"names":["defineStore","sdk","EventType","roomNamesAndIdsAsObject","client","createClient","baseUrl","accessToken","userId","startClient","login","loginWithPassword","then","console","log","returnRoomNamesFromRoomObject","rooms","roomNames","map","room","name","returnRoomIdsFromRoomObject","roomIds","roomId","getAllRoomNamesAndIds","getRooms","roomNamesAndIds","i","length","push","id","Object","assign","useMatrixClient","state","getters","getRoomNamesAndIds"],"sources":["/Users/observerzero/Project/Dev/icoo/src/stores/MatrixClient.js"],"sourcesContent":["import { defineStore } from 'pinia';\nimport sdk, {EventType} from 'matrix-js-sdk';\n\nlet roomNamesAndIdsAsObject = {};\n\nconst client = sdk.createClient({\n  baseUrl: \"https://matrix.org\",\n  accessToken: \"syt_b2JzZXJ2ZXJ6ZXJv_qbsSNMdGRZpXMsNvXJeX_3OODDh\",\n  userId: \"@observerzero:matrix.org\"\n});\n\nclient.startClient();\n\nfunction login() {\n  client.loginWithPassword('username', 'password').then(function() {\n    console.log('Logged in!')\n  })\n}\n\nfunction returnRoomNamesFromRoomObject(rooms) {\n  const roomNames = rooms.map(room => room.name);\n  return roomNames;\n}\n\nfunction returnRoomIdsFromRoomObject(rooms) {\n  const roomIds = rooms.map(room => room.roomId);\n  return roomIds;\n}\n\nfunction getAllRoomNamesAndIds() {\n  let rooms = client.getRooms()\n  let roomNames = returnRoomNamesFromRoomObject(rooms)\n  let roomIds = returnRoomIdsFromRoomObject(rooms);\n  let roomNamesAndIds = [];\n  for (let i = 0; i < roomNames.length; i++) {\n    roomNamesAndIds.push({name: roomNames[i], id: roomIds[i]})\n  }\n  Object.assign(roomNamesAndIdsAsObject, roomNamesAndIds)\n  return roomNamesAndIdsAsObject;\n}\n\n//TODO - Add a setter for creating a room\n//TODO - Refactor for returning objects instead of arrays\n//TODO - Add a function to get a room's timeline\n//TODO - Add a function to get a room's type\n\nexport const useMatrixClient = defineStore('matrix-client', {\n  state: () => {\n    return ({\n      client: client,\n      getAllRoomNamesAndIds: getAllRoomNamesAndIds,\n    });\n  },\n  getters: {\n    getRooms: (state) => () => {\n      return state.getRooms();\n    },\n    getRoomNamesAndIds: (state) => () => {\n      return state.getAllRoomNamesAndIds();\n    },\n  },\n})\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,OAAOC,GAAG,IAAGC,SAAS,QAAO,eAAe;AAE5C,IAAIC,uBAAuB,GAAG,CAAC,CAAC;AAEhC,MAAMC,MAAM,GAAGH,GAAG,CAACI,YAAY,CAAC;EAC9BC,OAAO,EAAE,oBAAoB;EAC7BC,WAAW,EAAE,kDAAkD;EAC/DC,MAAM,EAAE;AACV,CAAC,CAAC;AAEFJ,MAAM,CAACK,WAAW,EAAE;AAEpB,SAASC,KAAK,GAAG;EACfN,MAAM,CAACO,iBAAiB,CAAC,UAAU,EAAE,UAAU,CAAC,CAACC,IAAI,CAAC,YAAW;IAC/DC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;EAC3B,CAAC,CAAC;AACJ;AAEA,SAASC,6BAA6B,CAACC,KAAK,EAAE;EAC5C,MAAMC,SAAS,GAAGD,KAAK,CAACE,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC;EAC9C,OAAOH,SAAS;AAClB;AAEA,SAASI,2BAA2B,CAACL,KAAK,EAAE;EAC1C,MAAMM,OAAO,GAAGN,KAAK,CAACE,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACI,MAAM,CAAC;EAC9C,OAAOD,OAAO;AAChB;AAEA,SAASE,qBAAqB,GAAG;EAC/B,IAAIR,KAAK,GAAGZ,MAAM,CAACqB,QAAQ,EAAE;EAC7B,IAAIR,SAAS,GAAGF,6BAA6B,CAACC,KAAK,CAAC;EACpD,IAAIM,OAAO,GAAGD,2BAA2B,CAACL,KAAK,CAAC;EAChD,IAAIU,eAAe,GAAG,EAAE;EACxB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,SAAS,CAACW,MAAM,EAAED,CAAC,EAAE,EAAE;IACzCD,eAAe,CAACG,IAAI,CAAC;MAACT,IAAI,EAAEH,SAAS,CAACU,CAAC,CAAC;MAAEG,EAAE,EAAER,OAAO,CAACK,CAAC;IAAC,CAAC,CAAC;EAC5D;EACAI,MAAM,CAACC,MAAM,CAAC7B,uBAAuB,EAAEuB,eAAe,CAAC;EACvD,OAAOvB,uBAAuB;AAChC;;AAEA;AACA;AACA;AACA;;AAEA,OAAO,MAAM8B,eAAe,GAAGjC,WAAW,CAAC,eAAe,EAAE;EAC1DkC,KAAK,EAAE,MAAM;IACX,OAAQ;MACN9B,MAAM,EAAEA,MAAM;MACdoB,qBAAqB,EAAEA;IACzB,CAAC;EACH,CAAC;EACDW,OAAO,EAAE;IACPV,QAAQ,EAAGS,KAAK,IAAK,MAAM;MACzB,OAAOA,KAAK,CAACT,QAAQ,EAAE;IACzB,CAAC;IACDW,kBAAkB,EAAGF,KAAK,IAAK,MAAM;MACnC,OAAOA,KAAK,CAACV,qBAAqB,EAAE;IACtC;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
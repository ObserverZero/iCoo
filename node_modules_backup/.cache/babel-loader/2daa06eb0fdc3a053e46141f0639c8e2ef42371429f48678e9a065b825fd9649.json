{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { defineStore } from 'pinia';\nimport sdk, { EventType } from 'matrix-js-sdk';\nconst loginCreds = {\n  accessToken: \"syt_b2JzZXJ2ZXJ6ZXJv_qbsSNMdGRZpXMsNvXJeX_3OODDh\",\n  userId: \"@observerzero:matrix.org\",\n  baseUrl: 'https://matrix.org'\n};\nconst client = sdk.createClient({\n  baseUrl: loginCreds.baseUrl,\n  accessToken: loginCreds.accessToken,\n  userId: loginCreds.userId\n});\nfunction createUser(username, password) {\n  // TODO: Add a room for the user that handles additional user information, such as hashtags, description, images,\n  // TODO - friends lists, following, memberships, etc.\n}\nfunction getHandleFromUserId() {\n  return loginCreds.userId.replace(/:.*/, '');\n}\nfunction getHandleFromRoomId(id) {\n  return id.replace(/:.*/, '');\n}\nclient.startClient();\nfunction login() {\n  client.loginWithPassword('username', 'password').then(function () {\n    console.log('Logged in!');\n  });\n}\nfunction getIdentifiedListOfGroups(ids) {\n  Object.entries(ids => {\n    console.log(ids.id);\n  });\n}\n\n// GETTERS\n\nfunction getRoomTopic(roomId) {\n  let room = client.getRoom(roomId);\n  let topic = room.currentState.getStateEvents('m.room.topic', '');\n  try {\n    return topic.event.content.topic;\n  } catch (error) {\n    return 'We do nothing!';\n  }\n}\nfunction getRoomTopicFromRoomObject(room) {\n  let topic = room.currentState.getStateEvents('m.room.topic', '');\n  try {\n    return topic.event.content.topic;\n  } catch (error) {\n    return 'We do nothing!';\n  }\n}\nfunction getRoomType(roomId) {\n  let room = client.getRoom(roomId);\n  let type = room.currentState.getStateEvents('m.room.create', '');\n  try {\n    return type.event.content.type;\n  } catch (error) {\n    return 'no type for you!!';\n  }\n}\nfunction returnRoomNamesFromRoomObject(rooms) {\n  const roomNames = rooms.map(room => room.name);\n  return roomNames;\n}\nfunction returnRoomIdsFromRoomObject(rooms) {\n  const roomIds = rooms.map(room => room.roomId);\n  return roomIds;\n}\nfunction returnRoomTypeFromRoomObject(rooms) {\n  const roomTypes = rooms.map(room => getRoomType(room.id));\n}\nfunction getRoomById(roomId) {\n  const room = client.getRoom(roomId);\n  const name = room.name;\n  const topic = getRoomTopicFromRoomObject(room);\n  const group = {\n    name: name,\n    topic: topic\n  };\n  return group;\n}\nfunction isParent() {\n  return;\n}\nfunction isChild() {\n  return;\n}\nasync function getOwnProfile() {\n  let responseFromServer = await client.getProfileInfo(loginCreds.userId);\n  responseFromServer.handle = getHandleFromUserId();\n  return responseFromServer;\n}\nasync function getRoomTimeline(roomId) {\n  let room = client.getRoom(roomId);\n  room.timeline.forEach(t => {\n    console.log(JSON.stringify(t.event.content));\n  });\n}\nfunction returnIdOfChildrenInSpace(spaceId) {\n  let space = client.getRoom(spaceId);\n  let childrenMap = space.relations.room.currentState.events;\n  let roomArray = [];\n  roomArray = Array.from(childrenMap, function (entry) {\n    return {\n      key: entry[0],\n      value: entry[1]\n    };\n  });\n  roomArray.forEach(room => {\n    if (room.key === 'm.space.child') {\n      console.log(room);\n    }\n  });\n  let arrayOfChildrenIdsAsObject = {};\n  // Object.assign(arrayOfChildrenIdsAsObject, arrayOfChildrenIds)\n  // console.log(JSON.stringify(arrayOfChildrenIdsAsObject) + 'is the list')\n}\n\nfunction produceHrefAddressesForGroups(rooms) {\n  const roomIds = rooms.map(room => {\n    let id = room.roomId.replace(/:.*/, '');\n    id = id.replace(/!/, '');\n    id = \"/tabs/group/\" + id;\n    return id;\n  });\n  // roomIds.forEach(roomId => console.log(roomId))\n  return roomIds;\n}\nfunction getGroups() {\n  let rooms = client.getRooms();\n  let roomNamesAndIdsAsObject = {};\n  let roomNames = returnRoomNamesFromRoomObject(rooms);\n  let roomIds = returnRoomIdsFromRoomObject(rooms);\n  let hrefs = produceHrefAddressesForGroups(rooms);\n  let roomHandles = roomIds.map(roomId => getHandleFromRoomId(roomId));\n  let roomTopics = rooms.map(room => getRoomTopicFromRoomObject(room));\n  let roomTypes = roomIds.map(roomId => getRoomType(roomId));\n  let roomProduct = [];\n  for (let i = 0; i < roomNames.length; i++) {\n    roomProduct.push({\n      name: roomNames[i],\n      id: roomIds[i],\n      topic: roomTopics[i],\n      type: roomTypes[i],\n      handle: roomHandles[i],\n      href: hrefs[i]\n    });\n  }\n  Object.assign(roomNamesAndIdsAsObject, roomProduct);\n  // console.log(rooms)\n  return roomNamesAndIdsAsObject;\n}\n\n// SETTERS\n\n// TODO: add type for space or room\nfunction createGroup(groupName, topic, type) {\n  client.createRoom({\n    name: groupName,\n    visibility: 'private',\n    topic: topic,\n    creation_content: {\n      type: 'm.space'\n    }\n  }).then(response => {\n    // console.log(type)\n    // console.log(`Room created: ${response.room_id}`)\n    //client.sendStateEvent(response.room_id, 'm.room.create', {room_type: 'm.space'})\n  }).catch(error => {\n    console.error(`Error creating room: ${error}`);\n  });\n}\nfunction createRealGroup(groupName, topic, type) {\n  // TODO: add rooms that identify group as parent and canonical parent, and add child identifier on the space.\n  // TODO - power levels will hopefully isolate the rooms as necessary to the space.\n}\nfunction joinGroup(groupId) {\n  client.joinRoom(groupId).then(response => {\n    console.log(`Joined room: ${response.room_id}`);\n  }).catch(error => {\n    console.error(`Error joining room: ${error}`);\n  });\n}\nasync function getRoomState() {\n  let shortlist = [];\n  let shortlistObject = {};\n  let response = await client.roomState(\"!OGEhHVWSdvArJzumhm:matrix.org\").then(response => {\n    for (let i = 0; i < 100; i++) {\n      shortlist.push(response[i].sender);\n      Object.assign(shortlistObject, shortlist);\n    }\n    return shortlistObject;\n  });\n  // console.log(response)\n  return response;\n}\nfunction sendMessage(roomId, message) {\n  const content = {\n    body: \"A hobbit trying to scale mount everest\",\n    msgtype: \"m.text\"\n  };\n  client.sendEvent(\"roomId\", \"m.room.message\", content, \"\", (err, res) => {\n    console.log(err);\n  });\n}\nfunction updateTimeline(roomId) {\n  client.on(\"Room.timeline\", function (event, room, toStartOfTimeline) {\n    if (toStartOfTimeline) {\n      var messageToAppend = room.timeline[room.timeline.length - 1];\n      console.log(messageToAppend);\n      console.log(\"wow\");\n    }\n  });\n}\nasync function getMembersOfRoom(roomId) {\n  let room = await client.getRoom(roomId);\n  let members = room.getMembers();\n  console.log(members);\n  return members;\n}\n\n// TODO - Add a getter to get a room's timeline\n// TODO - Get a filter to get a group's associated groups\n// TODO -\n// TODO: Ranking functionality of group membership to curate what appears on top\n// TODO - of the list on group profile. Use the \"suggested\" value of space children\n// TODO - to determine whether the rooms are considered important. Canonical parent\n// TODO - is also useful\n\nexport const useMatrixClient = defineStore('matrix-client', {\n  state: () => {\n    return {\n      client,\n      getGroups,\n      getOwnProfile,\n      createGroup,\n      getMembersOfRoom,\n      returnIdOfChildrenInSpace,\n      getRoomById,\n      getRoomTimeline,\n      login\n    };\n  },\n  getters: {\n    getRooms: state => () => {\n      return state.getRooms();\n    },\n    updateTimeline: state => () => {\n      return updateTimeline();\n    },\n    getRoomState: state => () => {\n      return getRoomState();\n    }\n  },\n  setters: {\n    createGroup: state => groupName => {\n      return state.createGroup(groupName);\n    },\n    login: state => () => {\n      return state.login();\n    }\n  }\n});","map":{"version":3,"names":["defineStore","sdk","EventType","loginCreds","accessToken","userId","baseUrl","client","createClient","createUser","username","password","getHandleFromUserId","replace","getHandleFromRoomId","id","startClient","login","loginWithPassword","then","console","log","getIdentifiedListOfGroups","ids","Object","entries","getRoomTopic","roomId","room","getRoom","topic","currentState","getStateEvents","event","content","error","getRoomTopicFromRoomObject","getRoomType","type","returnRoomNamesFromRoomObject","rooms","roomNames","map","name","returnRoomIdsFromRoomObject","roomIds","returnRoomTypeFromRoomObject","roomTypes","getRoomById","group","isParent","isChild","getOwnProfile","responseFromServer","getProfileInfo","handle","getRoomTimeline","timeline","forEach","t","JSON","stringify","returnIdOfChildrenInSpace","spaceId","space","childrenMap","relations","events","roomArray","Array","from","entry","key","value","arrayOfChildrenIdsAsObject","produceHrefAddressesForGroups","getGroups","getRooms","roomNamesAndIdsAsObject","hrefs","roomHandles","roomTopics","roomProduct","i","length","push","href","assign","createGroup","groupName","createRoom","visibility","creation_content","response","catch","createRealGroup","joinGroup","groupId","joinRoom","room_id","getRoomState","shortlist","shortlistObject","roomState","sender","sendMessage","message","body","msgtype","sendEvent","err","res","updateTimeline","on","toStartOfTimeline","messageToAppend","getMembersOfRoom","members","getMembers","useMatrixClient","state","getters","setters"],"sources":["/Users/observerzero/Project/Dev/icoo/src/stores/MatrixClient.js"],"sourcesContent":["import {defineStore} from 'pinia'\nimport sdk, {EventType} from 'matrix-js-sdk'\n\nconst loginCreds = {\n  accessToken: \"syt_b2JzZXJ2ZXJ6ZXJv_qbsSNMdGRZpXMsNvXJeX_3OODDh\",\n  userId: \"@observerzero:matrix.org\",\n  baseUrl: 'https://matrix.org'\n}\nconst client = sdk.createClient({\n  baseUrl: loginCreds.baseUrl,\n  accessToken: loginCreds.accessToken,\n  userId: loginCreds.userId,\n})\n\nfunction createUser(username, password) {\n  // TODO: Add a room for the user that handles additional user information, such as hashtags, description, images,\n  // TODO - friends lists, following, memberships, etc.\n}\n\nfunction getHandleFromUserId() {\n  return loginCreds.userId.replace(/:.*/, '')\n}\n\nfunction getHandleFromRoomId(id) {\n  return id.replace(/:.*/, '')\n}\n\nclient.startClient()\n\nfunction login() {\n  client.loginWithPassword('username', 'password').then(function () {\n    console.log('Logged in!')\n  })\n}\n\nfunction getIdentifiedListOfGroups(ids) {\n  Object.entries(ids => {\n    console.log(ids.id)\n  })\n}\n\n// GETTERS\n\nfunction getRoomTopic(roomId) {\n  let room = client.getRoom(roomId)\n  let topic = room.currentState.getStateEvents('m.room.topic', '')\n  try {\n    return topic.event.content.topic\n  } catch (error) {\n    return 'We do nothing!'\n  }\n}\n\nfunction getRoomTopicFromRoomObject(room) {\n  let topic = room.currentState.getStateEvents('m.room.topic', '')\n  try {\n    return topic.event.content.topic\n  } catch (error) {\n    return 'We do nothing!'\n  }\n}\n\nfunction getRoomType(roomId) {\n  let room = client.getRoom(roomId)\n  let type = room.currentState.getStateEvents('m.room.create', '')\n  try {\n    return type.event.content.type\n  } catch (error) {\n    return 'no type for you!!'\n  }\n}\n\nfunction returnRoomNamesFromRoomObject(rooms) {\n  const roomNames = rooms.map(room => room.name)\n  return roomNames\n}\n\nfunction returnRoomIdsFromRoomObject(rooms) {\n  const roomIds = rooms.map(room => room.roomId)\n  return roomIds\n}\n\nfunction returnRoomTypeFromRoomObject(rooms) {\n  const roomTypes = rooms.map(room => getRoomType(room.id))\n}\n\nfunction getRoomById(roomId) {\n  const room = client.getRoom(roomId)\n  const name = room.name\n  const topic = getRoomTopicFromRoomObject(room)\n  const group = {\n    name: name,\n    topic: topic,\n  }\n  return group\n}\n\nfunction isParent() {\n  return\n}\n\nfunction isChild() {\n  return\n}\n\nasync function getOwnProfile() {\n  let responseFromServer = await client.getProfileInfo(loginCreds.userId)\n  responseFromServer.handle = getHandleFromUserId()\n  return responseFromServer\n}\n\nasync function getRoomTimeline(roomId) {\n  let room = client.getRoom(roomId)\n  room.timeline.forEach(t => {\n    console.log(JSON.stringify(t.event.content));\n  });\n}\n\nfunction returnIdOfChildrenInSpace(spaceId) {\n  let space = client.getRoom(spaceId)\n  let childrenMap = space.relations.room.currentState.events\n  let roomArray = []\n  roomArray = Array.from(childrenMap, function (entry) {\n    return {key: entry[0], value: entry[1]};\n  });\n  roomArray.forEach(room => {\n    if (room.key === 'm.space.child') {\n      console.log(room)\n    }\n  })\n  let arrayOfChildrenIdsAsObject = {}\n  // Object.assign(arrayOfChildrenIdsAsObject, arrayOfChildrenIds)\n  // console.log(JSON.stringify(arrayOfChildrenIdsAsObject) + 'is the list')\n}\n\nfunction produceHrefAddressesForGroups(rooms) {\n  const roomIds = rooms.map(room => {\n    let id = room.roomId.replace(/:.*/, '')\n    id = id.replace(/!/, '')\n    id = \"/tabs/group/\" + id\n    return id\n  })\n  // roomIds.forEach(roomId => console.log(roomId))\n  return roomIds\n}\n\nfunction getGroups() {\n  let rooms = client.getRooms()\n  let roomNamesAndIdsAsObject = {}\n  let roomNames = returnRoomNamesFromRoomObject(rooms)\n  let roomIds = returnRoomIdsFromRoomObject(rooms)\n  let hrefs = produceHrefAddressesForGroups(rooms)\n  let roomHandles = roomIds.map(roomId => getHandleFromRoomId(roomId))\n  let roomTopics = rooms.map(room => getRoomTopicFromRoomObject(room))\n  let roomTypes = roomIds.map(roomId => getRoomType(roomId))\n  let roomProduct = []\n  for (let i = 0; i < roomNames.length; i++) {\n    roomProduct.push({\n      name: roomNames[i],\n      id: roomIds[i],\n      topic: roomTopics[i],\n      type: roomTypes[i],\n      handle: roomHandles[i],\n      href: hrefs[i],\n    })\n  }\n  Object.assign(roomNamesAndIdsAsObject, roomProduct)\n  // console.log(rooms)\n  return roomNamesAndIdsAsObject\n}\n\n// SETTERS\n\n// TODO: add type for space or room\nfunction createGroup(groupName, topic, type) {\n  client.createRoom({\n    name: groupName,\n    visibility: 'private',\n    topic: topic,\n    creation_content: {\n      type: 'm.space',\n    }\n  }).then((response) => {\n    // console.log(type)\n    // console.log(`Room created: ${response.room_id}`)\n    //client.sendStateEvent(response.room_id, 'm.room.create', {room_type: 'm.space'})\n  }).catch((error) => {\n    console.error(`Error creating room: ${error}`)\n  })\n}\n\nfunction createRealGroup(groupName, topic, type) {\n  // TODO: add rooms that identify group as parent and canonical parent, and add child identifier on the space.\n  // TODO - power levels will hopefully isolate the rooms as necessary to the space.\n}\n\nfunction joinGroup(groupId) {\n  client.joinRoom(groupId).then((response) => {\n    console.log(`Joined room: ${response.room_id}`)\n  }).catch((error) => {\n    console.error(`Error joining room: ${error}`)\n  })\n}\n\nasync function getRoomState() {\n  let shortlist = []\n  let shortlistObject = {}\n  let response = await client.roomState(\"!OGEhHVWSdvArJzumhm:matrix.org\")\n    .then((response) => {\n      for (let i = 0; i < 100; i++) {\n        shortlist.push(response[i].sender)\n        Object.assign(shortlistObject, shortlist)\n      }\n      return shortlistObject\n    })\n  // console.log(response)\n  return response\n}\n\nfunction sendMessage(roomId, message) {\n  const content = {\n    body: \"A hobbit trying to scale mount everest\",\n    msgtype: \"m.text\",\n  }\n  client.sendEvent(\"roomId\", \"m.room.message\", content, \"\", (err, res) => {\n    console.log(err)\n  })\n}\n\nfunction updateTimeline(roomId) {\n  client.on(\"Room.timeline\", function (event, room, toStartOfTimeline) {\n    if (toStartOfTimeline) {\n      var messageToAppend = room.timeline[room.timeline.length - 1]\n      console.log(messageToAppend)\n      console.log(\"wow\")\n    }\n  })\n}\n\nasync function getMembersOfRoom(roomId) {\n  let room = await client.getRoom(roomId)\n  let members = room.getMembers()\n  console.log(members)\n  return members\n}\n\n// TODO - Add a getter to get a room's timeline\n// TODO - Get a filter to get a group's associated groups\n// TODO -\n// TODO: Ranking functionality of group membership to curate what appears on top\n// TODO - of the list on group profile. Use the \"suggested\" value of space children\n// TODO - to determine whether the rooms are considered important. Canonical parent\n// TODO - is also useful\n\nexport const useMatrixClient = defineStore('matrix-client', {\n  state: () => {\n    return ({\n      client,\n      getGroups,\n      getOwnProfile,\n      createGroup,\n      getMembersOfRoom,\n      returnIdOfChildrenInSpace,\n      getRoomById,\n      getRoomTimeline,\n      login,\n    })\n  },\n  getters: {\n    getRooms: (state) => () => {\n      return state.getRooms()\n    },\n    updateTimeline: (state) => () => {\n      return updateTimeline()\n    },\n    getRoomState: (state) => () => {\n      return getRoomState()\n    },\n  },\n  setters: {\n    createGroup: (state) => (groupName) => {\n      return state.createGroup(groupName)\n    },\n    login: (state) => () => {\n      return state.login()\n    }\n  }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
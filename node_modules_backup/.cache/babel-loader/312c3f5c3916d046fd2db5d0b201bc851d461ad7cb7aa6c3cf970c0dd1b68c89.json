{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_IonCardSubtitle = _resolveComponent(\"IonCardSubtitle\");\n  const _component_IonCardTitle = _resolveComponent(\"IonCardTitle\");\n  const _component_IonCardHeader = _resolveComponent(\"IonCardHeader\");\n  const _component_IonCard = _resolveComponent(\"IonCard\");\n  const _component_ChatItem = _resolveComponent(\"ChatItem\");\n  const _component_IonIcon = _resolveComponent(\"IonIcon\");\n  const _component_IonFabButton = _resolveComponent(\"IonFabButton\");\n  const _component_IonFab = _resolveComponent(\"IonFab\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [$props.messages.children == undefined ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_IonCard, null, {\n    default: _withCtx(() => [_createVNode(_component_IonCardHeader, null, {\n      default: _withCtx(() => [_createVNode(_component_IonCardSubtitle, null, {\n        default: _withCtx(() => [_createTextVNode(\"Start a conversation\")]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_IonCardTitle, null, {\n        default: _withCtx(() => [_createTextVNode(\"Send a message to get started\")]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  })])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.messages.children, value => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: value\n    }, [_createVNode(_component_ChatItem, {\n      message: value\n    }, null, 8 /* PROPS */, [\"message\"])]);\n  }), 128 /* KEYED_FRAGMENT */))])), _createVNode(_component_IonFab, {\n    slot: \"fixed\",\n    vertical: \"bottom\",\n    horizontal: \"end\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_IonFabButton, {\n      color: \"dark\",\n      onClick: $options.openModal\n    }, {\n      default: _withCtx(() => [_createVNode(_component_IonIcon, {\n        icon: $data.chatbox\n      }, null, 8 /* PROPS */, [\"icon\"])]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])]),\n    _: 1 /* STABLE */\n  })], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;6DAEaA,eAAQ,CAACC,QAAQ,IAAIC,SAAS,kBAAzCC,oBAOM,oBANJC,aAKUC;sBAJR,MAGgB,CAHhBD,aAGgBE;wBAFd,MAAuD,CAAvDF,aAAuDG;0BAAtC,MAAoB,kBAApB,sBAAoB;;UACrCH,aAA0DI;0BAA5C,MAA6B,kBAA7B,+BAA6B;;;;;;;;yBAIjDL,oBAII,uCAHJA,oBAEMM,6BAFeT,eAAQ,CAACC,QAAQ,EAA1BS,KAAK;yBAAjBP,oBAEM;MAFyCQ,GAAG,EAAED;IAAK,IACvDN,aAA4BQ;MAAjBC,OAAO,EAAEH;IAAK;qCAI3BN,aAISU;IAJDC,IAAI,EAAC,OAAO;IAACC,QAAQ,EAAC,QAAQ;IAACC,UAAU,EAAC;;sBAChD,MAEe,CAFfb,aAEec;MAFDC,KAAK,EAAC,MAAM;MAAEC,OAAK,EAAEC;;wBACjC,MAAmC,CAAnCjB,aAAmCkB;QAAzBC,IAAI,EAAEC;MAAO","names":["$props","children","undefined","_createElementBlock","_createVNode","_component_IonCard","_component_IonCardHeader","_component_IonCardSubtitle","_component_IonCardTitle","_Fragment","value","key","_component_ChatItem","message","_component_IonFab","slot","vertical","horizontal","_component_IonFabButton","color","onClick","$options","_component_IonIcon","icon","$data"],"sourceRoot":"","sources":["/Users/observerzero/Project/Dev/icoo/src/components/Group/ChatSpace.vue"],"sourcesContent":["<template ref=\"chatSpace\">\n\n  <div v-if=\"messages.children == undefined\">\n    <IonCard>\n      <IonCardHeader>\n        <IonCardSubtitle>Start a conversation</IonCardSubtitle>\n        <IonCardTitle>Send a message to get started</IonCardTitle>\n      </IonCardHeader>\n    </IonCard>\n  </div>\n  <div v-else>\n  <div v-for=\"value in messages.children\" v-bind:key=\"value\">\n    <ChatItem :message=\"value\"/>\n  </div>\n</div>\n\n  <IonFab slot=\"fixed\" vertical=\"bottom\" horizontal=\"end\">\n    <IonFabButton color=\"dark\" @click=\"openModal\">\n      <IonIcon :icon=\"chatbox\"></IonIcon>\n    </IonFabButton>\n  </IonFab>\n\n</template>\n\n<script>\n/* eslint-disable vue/no-unused-components */\nimport {\n  IonCard,\n  IonCardHeader,\n  IonCardSubtitle,\n  IonCardTitle,\n  IonIcon,\n  IonCardContent,\n  IonList,\n  IonItem,\n  modalController,\n  IonModal,\n  IonHeader,\n  IonToolbar,\n  IonButtons,\n  IonButton,\n  IonSearchbar,\n  IonTitle,\n  IonContent,\n  IonInput,\n  IonLabel,\n  IonFab,\n  IonFabButton,\n  IonFabList,\n} from '@ionic/vue';\nimport {\n  arrowBack,\n  chevronUpCircle,\n  add,\n  menu,\n  close,\n  search,\n  personCircle,\n  addCircle,\n  bulb,\n  caretUp,\n  peopleCircle,\n  chatbox,\n  colorFilter,\n  colorFilterSharp,\n  clipboard,\n} from 'ionicons/icons';\nimport ChatItem from \"@/components/ChatItem.vue\";\nimport {defineComponent, reactive, ref} from 'vue';\nimport { useMatrixClient } from \"@/stores/MatrixClient\";\nimport {useCrossPage} from \"@/stores/CrossPageUpdates\";\nimport CreateChatModal from \"@/menus/CreateChatModal.vue\";\nimport ChatBubble from \"@/components/ChatBubble.vue\";\n\nlet client = useMatrixClient();\n\nlet content = ref({})\nlet chats = ref({})\n\nsetInterval(async () => {\n  try {\n    content = await client.getChatContent(this.groupId)\n    //content.value.creator = content.value.creator.replace(/:.*/, '')\n  } catch {\n    return\n  }\n}, 2000);\n\nexport default {\n  name: \"ChatSpace\",\n  data() {\n    return {\n      content,\n      chats,\n      addCircle,\n      add,\n      chatbox,\n      chatBubbleText: \"I just think that sometimes I just really wanna get to mars you know kind of or in a way that this room could be like this small spaceship and really take me away to mars\",\n    }\n  },\n  setup() {\n    return {}\n  },\n  components: {\n    ChatItem,\n    IonCard,\n    IonCardHeader,\n    IonCardSubtitle,\n    IonCardTitle,\n    IonIcon,\n    IonCardContent,\n    IonList,\n    IonItem,\n    modalController,\n    IonModal,\n    IonHeader,\n    IonToolbar,\n    IonButtons,\n    IonButton,\n    IonSearchbar,\n    IonTitle,\n    IonContent,\n    IonInput,\n    IonLabel,\n    IonFab,\n    IonFabButton,\n    IonFabList,\n    ChatBubble,\n  },\n  props: {\n    groupId: String,\n    messages: Object,\n  },\n  methods: {\n\n    async fetchData() {\n      //content.value.creator = content.value.creator.replace(/:.*/, '')\n    },\n\n    async openModal() {\n      const modal = await modalController.create({\n        component: CreateChatModal,\n        componentProps: {\n          chatSpaceId: this.messages.id,\n        }\n      });\n      return await modal.present();\n    },\n  },\n\n  created() {\n    this.$watch(\n      () => this.$route.params,\n      () => {\n        this.fetchData()\n        setInterval(async () => {\n          try {\n            content = await client.getChatContent(this.groupId)\n            let areThereChats = Object.keys(content.value.children).length\n            console.log(areThereChats)\n            //content.value.creator = content.value.creator.replace(/:.*/, '')\n          } catch {\n            return\n          }\n        }, 2000);\n      },\n      // fetch the data when the view is created and the data is\n      // already being observed\n      { immediate: true }\n    )\n  },\n}\n\n</script>\n\n<style scoped>\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { defineStore } from 'pinia';\nimport sdk, { EventType } from 'matrix-js-sdk';\nimport { convertCompilerOptionsFromJson } from 'typescript';\nconst loginCreds = {\n  accessToken: process.env.VUE_APP_TOKEN,\n  userId: process.env.VUE_APP_NAME,\n  baseUrl: 'http://localhost:8008'\n};\nconst client = sdk.createClient({\n  baseUrl: loginCreds.baseUrl,\n  accessToken: loginCreds.accessToken,\n  userId: loginCreds.userId\n});\nconst localClient = sdk.createClient({\n  baseUrl: loginCreds.baseUrl\n});\nclient.startClient();\nfunction createUser(username, password) {\n  // TODO: Add a room for the user that handles additional user\n  //       information, such as hashtags, description, images,\n  // TODO: friends lists, following, memberships, etc.\n}\n\n// Takes the user's name on the server and removes the domain\nfunction getHandleFromUserId() {\n  return loginCreds.userId.replace(/:.*/, '');\n}\nfunction getHandleFromRoomId(id) {\n  return id.replace(/:.*/, '');\n}\nfunction login() {\n  client.loginWithPassword(process.env.VUE_APP_ID, process.env.VUE_APP_PASS).then(() => {\n    console.log('Logged in!');\n  });\n}\nasync function getAllUsers() {\n  let users = client.getUsers();\n  return users;\n}\n\n// GETTERS\n\nfunction getRoomTopicFromRoomObject(room) {\n  let topic = room.currentState.getStateEvents('m.room.topic', '');\n  try {\n    return JSON.parse(topic.event.content.topic);\n  } catch (error) {\n    console.log(error);\n    if (topic == String) return topic;\n    return \"We do nothing!\";\n  }\n}\nfunction getRoomType(roomId) {\n  let room = client.getRoom(roomId);\n  let type = room.currentState.getStateEvents('m.room.create', '');\n  try {\n    return type.event.content.type;\n  } catch (error) {\n    return 'no type for you!!';\n  }\n}\nfunction getRoomName(room) {\n  let roomName = room.name;\n  return roomName;\n}\nfunction returnRoomNamesFromRoomObject(rooms) {\n  const roomNames = rooms.map(room => room.name);\n  return roomNames;\n}\nfunction returnRoomIdsFromRoomObject(rooms) {\n  const roomIds = rooms.map(room => room.roomId);\n  return roomIds;\n}\nfunction returnRoomTypeFromRoomObject(rooms) {\n  const roomTypes = rooms.map(room => getRoomType(room.id));\n}\nfunction getPublicRooms() {\n  const rooms = fetch('http://localhost:8008/_matrix/client/r0/publicRooms', {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + process.env.VUE_APP_TOKEN\n    }\n  }).then(response => {\n    return response.json();\n  });\n  console.log(rooms);\n  return rooms;\n}\nfunction getRoomFromRoomArray(roomId) {\n  const rooms = getPublicRooms();\n  const room = rooms.find(room => room.room_id == roomId);\n  return room;\n}\nasync function getRoomById(roomId) {\n  try {\n    let room = await client.getRoom(roomId);\n    const name = room.name;\n    const topic = getRoomTopicFromRoomObject(room);\n    const group = {\n      name: name,\n      topic: topic\n    };\n    return group;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\nfunction updateChat(roomId) {\n  let room = client.getRoom(roomId);\n  let creator = room.currentState.getStateEvents('m.room.create', '');\n  let idAndTopicObject = {\n    id: roomId,\n    creator: creator.event.content.creator.replace(/:.*/, ''),\n    topic: getRoomTopicFromRoomObject(room),\n    content: getRoomTimeline(roomId)\n  };\n  return idAndTopicObject;\n}\nexport async function getOwnProfile() {\n  let responseFromServer = await client.getProfileInfo(loginCreds.userId);\n  responseFromServer.handle = getHandleFromUserId();\n  responseFromServer.displayname = JSON.parse(responseFromServer.displayname);\n  return responseFromServer;\n}\nasync function getTimeline(roomId) {\n  return client.roomInitialSync(roomId, 1000);\n}\nfunction getRoomTimeline(roomId) {\n  let room = client.getRoom(roomId);\n  let messageArray = [];\n  room.timeline.forEach(t => {\n    messageArray.push(t.event);\n  });\n  return messageArray;\n}\nfunction getChildrenIds(spaceId) {\n  const space = client.getRoom(spaceId);\n  let childrenMap;\n  try {\n    childrenMap = space.currentState.events.get('m.space.child');\n  } catch (error) {\n    console.log(error);\n    return [];\n  }\n  let childrenIdArray = Array.from(childrenMap.keys());\n  console.log(childrenIdArray);\n  return childrenIdArray;\n}\nfunction getChildren(spaceId) {\n  let ids = getChildrenIds(spaceId);\n  let roomObjects = [];\n  ids.forEach(id => {\n    roomObjects.push(client.getRoom(id));\n  });\n  joinRooms(roomObjects);\n  console.log(roomObjects);\n  return roomObjects;\n}\nfunction getGroupContent(groupId) {\n  let content = {};\n  let groups = getChildren(groupId);\n  let name;\n  let id;\n  let children;\n  let idAndTopicObject = {};\n  groups.forEach(child => {\n    if (child != null) {\n      name = child.name;\n      id = child.roomId;\n      console.log(name);\n      try {\n        children = getChildren(id);\n      } catch (error) {\n        return;\n      }\n      idAndTopicObject = {};\n      content[name] = {};\n      children.forEach(item => {\n        try {\n          let creator = item.currentState.getStateEvents('m.room.create', '');\n          idAndTopicObject[item.roomId] = {\n            id: item.roomId,\n            creator: creator.event.content.creator.replace(/:.*/, ''),\n            topic: getRoomTopicFromRoomObject(item),\n            content: getRoomTimeline(item.roomId)\n          };\n        } catch (error) {\n          return;\n        }\n      });\n      content[name] = {\n        id: id,\n        children: idAndTopicObject\n      };\n    }\n  });\n  return content;\n}\nfunction getChatContent(groupId) {\n  let content = getGroupContent(groupId);\n  return content.chat;\n}\nfunction getSubgroupContent(groupId) {\n  let content = getGroupContent(groupId);\n  return content.groups;\n}\nfunction getBoardContent(groupId) {\n  let content = getGroupContent(groupId);\n  return content.board;\n}\nfunction produceHrefAddressesForGroups(rooms) {\n  const roomIds = rooms.map(room => {\n    let id = room.roomId.replace(/:.*/, '');\n    id = id.replace(/!/, '');\n    id = \"/tabs/group/\" + id;\n    return id;\n  });\n  // roomIds.forEach(roomId => console.log(roomId))\n  return roomIds;\n}\nfunction getGroups() {\n  let rooms = client.getRooms();\n  let roomNamesAndIdsAsObject = {};\n  let roomNames = returnRoomNamesFromRoomObject(rooms);\n  let roomIds = returnRoomIdsFromRoomObject(rooms);\n  let hrefs = produceHrefAddressesForGroups(rooms);\n  let roomHandles = roomIds.map(roomId => getHandleFromRoomId(roomId));\n  let roomTopics = rooms.map(room => getRoomTopicFromRoomObject(room));\n  let roomTypes = roomIds.map(roomId => getRoomType(roomId));\n  let roomProduct = [];\n  for (let i = 0; i < roomNames.length; i++) {\n    roomProduct.push({\n      name: roomNames[i],\n      id: roomIds[i],\n      topic: roomTopics[i],\n      type: roomTypes[i],\n      handle: roomHandles[i],\n      href: hrefs[i]\n    });\n  }\n  Object.assign(roomNamesAndIdsAsObject, roomProduct);\n  return roomNamesAndIdsAsObject;\n}\n\n// SETTERS\n\nfunction createSubSpace(parentSpaceId, subSpaceName, subSpaceTopic, roomId) {\n  client.sendStateEvent(roomId, 'm.space.parent', {\n    via: ['home.parecon.work'],\n    state_key: parentSpaceId,\n    canonical: true\n  });\n  return;\n}\nasync function createSpace(groupName, topic) {\n  let returnValue = await client.createRoom({\n    name: groupName,\n    visibility: 'public',\n    topic: topic,\n    creation_content: {\n      type: 'm.space'\n    },\n    power_lever_content: {\n      \"users\": {\n        creator_id: 100\n      },\n      \"users_default\": 100\n    }\n  }).then(response => {\n    console.log(`Room created: ${response.room_id}`);\n    return response.room_id;\n  }).catch(error => {\n    console.error(`Error creating room: ${error}`);\n  });\n  return returnValue;\n}\nasync function createRoom(roomName, topic) {\n  let returnValue = await client.createRoom({\n    name: roomName,\n    visibility: 'public',\n    topic: topic,\n    power_level_content: {\n      \"users\": {\n        creator_id: 100\n      },\n      \"users_default\": 100\n    }\n  }).then(response => {\n    console.log(`Room created: ${response.room_id}`);\n    return response.room_id;\n  }).catch(error => {\n    console.error(`Error creating room: ${error}`);\n  });\n  return returnValue;\n}\nasync function createPost(chatSpaceId, topic) {\n  let newRoom = await createRoom(\"post\", topic);\n  assignChild(chatSpaceId, newRoom);\n  assignParent(newRoom, chatSpaceId);\n  return;\n}\nfunction assignChild(parentSpaceId, childSpaceId) {\n  client.sendStateEvent(parentSpaceId, 'm.space.child', {\n    via: ['home.parecon.work']\n  }, childSpaceId).then(error => {\n    console.log(error);\n  });\n  console.log(\"assigned child\");\n}\nfunction assignParent(childSpaceId, parentSpaceId) {\n  client.sendStateEvent(childSpaceId, 'm.space.parent', {\n    canonical: true,\n    via: ['home.parecon.work']\n  }, parentSpaceId);\n  console.log(\"assigned parent\");\n}\nasync function assignParentAndChild(parentSpaceId, childSpaceId) {\n  assignChild(parentSpaceId, childSpaceId);\n  assignParent(childSpaceId, parentSpaceId);\n  return true;\n}\nfunction joinRooms(roomIdArray) {\n  roomIdArray.forEach(roomId => {\n    setTimeout(() => {\n      console.log(\"timeouting\");\n    }, 1000);\n    if (typeof roomId == String) {\n      client.joinRoom(roomId);\n      console.log('joined ' + roomId);\n    } else if (typeof roomId == Object) {\n      client.joinRoom(roomId.roomId);\n      console.log('joined ' + roomId.roomId);\n    }\n  });\n}\nasync function createRealGroup(groupName, topic) {\n  let mainSpaceId = await createSpace(groupName, '{\"text\": \"' + topic + '\", \"banner\": \"group\"}');\n  let chatSpaceId = await createSpace(\"chat\", '{\"text\": \"chat\", \"banner\": \"group\"}');\n  let boardSpaceId = await createSpace(\"board\", '{\"text\": \"board\", \"banner\": \"group\"}');\n  let calendarSpaceId = await createSpace(\"groups\", '{\"text\": \"groups\", \"banner\": \"group\"}');\n  assignParentAndChild(mainSpaceId, chatSpaceId).then(() => {\n    assignParentAndChild(mainSpaceId, boardSpaceId).then(() => {\n      assignParentAndChild(mainSpaceId, calendarSpaceId);\n    });\n  });\n  return mainSpaceId;\n}\nasync function createSubGroup(groupName, topic, parentGroupSpaceId) {\n  let mainSpaceId = await createRealGroup(groupName, topic);\n  assignParentAndChild(parentGroupSpaceId, mainSpaceId);\n  return;\n}\nfunction joinGroup(groupId) {\n  client.joinRoom(groupId).then(response => {\n    // meh\n  }).catch(error => {\n    // meh\n  });\n}\nasync function getRoomState() {\n  let shortlist = [];\n  let shortlistObject = {};\n  let response = await client.roomState(\"!OGEhHVWSdvArJzumhm:matrix.org\").then(response => {\n    for (let i = 0; i < 100; i++) {\n      shortlist.push(response[i]);\n      Object.assign(shortlistObject, shortlist);\n    }\n    return shortlistObject;\n  });\n  return response;\n}\nasync function getMessages(roomId) {\n  client.initialSync(roomId).then(response => {\n    const timeline = response.timeline;\n    // Do something with the timeline, such as render it in a chat interface\n  }).catch(error => {\n    console.error(`Error fetching initial sync for room ${roomId}: ${error}`);\n  });\n}\nfunction sendMessage(roomId, message) {\n  const content = {\n    body: \"A hobbit trying to scale mount everest\",\n    msgtype: \"m.text\"\n  };\n  client.sendEvent(\"roomId\", \"m.room.message\", content, \"\", (err, res) => {\n    console.log(err);\n  });\n}\nfunction updateTimeline(roomId) {\n  client.on(\"Room.timeline\", function (event, room, toStartOfTimeline) {\n    if (event.getType() !== \"m.room.message\") {\n      return; // only use messages\n    }\n  });\n}\n\nasync function getMembersOfRoom(roomId) {\n  let room = await client.getRoom(roomId);\n  let members = room.getMembers();\n  return members;\n}\nfunction sendText(roomId, text) {\n  client.sendTextMessage(roomId, text);\n}\nfunction accountData() {\n  return client.getAccountData();\n}\n\n// TODO - Add a getter to get a room's timeline\n// TODO - Get a filter to get a group's associated groups\n// TODO -\n// TODO: Ranking functionality of group membership to curate what appears on top\n// TODO - of the list on group profile. Use the \"suggested\" value of space children\n// TODO - to determine whether the rooms are considered important. Canonical parent\n// TODO - is also useful\n\nexport const useMatrixClient = defineStore('matrix-client', {\n  state: () => {\n    return {\n      client,\n      getGroups,\n      getOwnProfile,\n      getMembersOfRoom,\n      getChildrenIds,\n      getChildren,\n      getRoomById,\n      getRoomTimeline,\n      getGroupContent,\n      getChatContent,\n      getSubgroupContent,\n      getMessages,\n      login,\n      sendText,\n      accountData,\n      assignParent,\n      assignChild,\n      createRealGroup,\n      updateChat,\n      getTimeline,\n      createPost,\n      createSubGroup,\n      getAllUsers,\n      getPublicRooms,\n      getRoomFromRoomArray,\n      joinRooms\n    };\n  },\n  getters: {\n    getRooms: state => () => {\n      return state.getRooms();\n    },\n    updateTimeline: state => () => {\n      return updateTimeline();\n    },\n    getRoomState: state => () => {\n      return getRoomState();\n    }\n  },\n  setters: {\n    login: state => () => {\n      return state.login();\n    }\n  }\n});","map":{"version":3,"names":["defineStore","sdk","EventType","convertCompilerOptionsFromJson","loginCreds","accessToken","process","env","VUE_APP_TOKEN","userId","VUE_APP_NAME","baseUrl","client","createClient","localClient","startClient","createUser","username","password","getHandleFromUserId","replace","getHandleFromRoomId","id","login","loginWithPassword","VUE_APP_ID","VUE_APP_PASS","then","console","log","getAllUsers","users","getUsers","getRoomTopicFromRoomObject","room","topic","currentState","getStateEvents","JSON","parse","event","content","error","String","getRoomType","roomId","getRoom","type","getRoomName","roomName","name","returnRoomNamesFromRoomObject","rooms","roomNames","map","returnRoomIdsFromRoomObject","roomIds","returnRoomTypeFromRoomObject","roomTypes","getPublicRooms","fetch","method","headers","Authorization","response","json","getRoomFromRoomArray","find","room_id","getRoomById","group","updateChat","creator","idAndTopicObject","getRoomTimeline","getOwnProfile","responseFromServer","getProfileInfo","handle","displayname","getTimeline","roomInitialSync","messageArray","timeline","forEach","t","push","getChildrenIds","spaceId","space","childrenMap","events","get","childrenIdArray","Array","from","keys","getChildren","ids","roomObjects","joinRooms","getGroupContent","groupId","groups","children","child","item","getChatContent","chat","getSubgroupContent","getBoardContent","board","produceHrefAddressesForGroups","getGroups","getRooms","roomNamesAndIdsAsObject","hrefs","roomHandles","roomTopics","roomProduct","i","length","href","Object","assign","createSubSpace","parentSpaceId","subSpaceName","subSpaceTopic","sendStateEvent","via","state_key","canonical","createSpace","groupName","returnValue","createRoom","visibility","creation_content","power_lever_content","creator_id","catch","power_level_content","createPost","chatSpaceId","newRoom","assignChild","assignParent","childSpaceId","assignParentAndChild","roomIdArray","setTimeout","joinRoom","createRealGroup","mainSpaceId","boardSpaceId","calendarSpaceId","createSubGroup","parentGroupSpaceId","joinGroup","getRoomState","shortlist","shortlistObject","roomState","getMessages","initialSync","sendMessage","message","body","msgtype","sendEvent","err","res","updateTimeline","on","toStartOfTimeline","getType","getMembersOfRoom","members","getMembers","sendText","text","sendTextMessage","accountData","getAccountData","useMatrixClient","state","getters","setters"],"sources":["/Users/observerzero/Project/Dev/icoo/src/stores/MatrixClient.js"],"sourcesContent":["import {defineStore} from 'pinia'\nimport sdk, {EventType} from 'matrix-js-sdk'\nimport { convertCompilerOptionsFromJson } from 'typescript'\n\nconst loginCreds = {\n  accessToken: process.env.VUE_APP_TOKEN,\n  userId: process.env.VUE_APP_NAME,\n  baseUrl: 'http://localhost:8008'\n}\n\nconst client = sdk.createClient({\n  baseUrl: loginCreds.baseUrl,\n  accessToken: loginCreds.accessToken,\n  userId: loginCreds.userId,\n})\n\nconst localClient = sdk.createClient({\n  baseUrl: loginCreds.baseUrl,\n})\n\nclient.startClient()\n\nfunction createUser(username, password) {\n  // TODO: Add a room for the user that handles additional user\n  //       information, such as hashtags, description, images,\n  // TODO: friends lists, following, memberships, etc.\n}\n\n// Takes the user's name on the server and removes the domain\nfunction getHandleFromUserId() {\n  return loginCreds.userId.replace(/:.*/, '')\n}\n\nfunction getHandleFromRoomId(id) {\n  return id.replace(/:.*/, '')\n}\n\nfunction login() {\n  client.loginWithPassword(\n    process.env.VUE_APP_ID, \n    process.env.VUE_APP_PASS)\n  .then(() => {\n    console.log('Logged in!')\n  })\n}\n\nasync function getAllUsers() {\n  let users = client.getUsers()\n  return users\n}\n\n// GETTERS\n\nfunction getRoomTopicFromRoomObject(room) {\n  let topic = room.currentState.getStateEvents('m.room.topic', '')\n  try {\n    return JSON.parse(topic.event.content.topic)\n  } catch (error) {\n    console.log(error)\n    if (topic == String)\n      return topic\n    return \"We do nothing!\"\n  }\n}\n\nfunction getRoomType(roomId) {\n  let room = client.getRoom(roomId)\n  let type = room.currentState.getStateEvents('m.room.create', '')\n  try {\n    return type.event.content.type\n  } catch (error) {\n    return 'no type for you!!'\n  }\n}\n\nfunction getRoomName(room) {\n  let roomName = room.name\n  return roomName\n}\n\nfunction returnRoomNamesFromRoomObject(rooms) {\n  const roomNames = rooms.map(room => room.name)\n  return roomNames\n}\n\nfunction returnRoomIdsFromRoomObject(rooms) {\n  const roomIds = rooms.map(room => room.roomId)\n  return roomIds\n}\n\nfunction returnRoomTypeFromRoomObject(rooms) {\n  const roomTypes = rooms.map(room => getRoomType(room.id))\n}\n\nfunction getPublicRooms() {\n  const rooms = fetch('http://localhost:8008/_matrix/client/r0/publicRooms', {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + process.env.VUE_APP_TOKEN\n    }\n  }).then(response => {\n    return response.json()\n  })\n  console.log(rooms)\n  return rooms\n}\n\nfunction getRoomFromRoomArray(roomId) {\n  const rooms = getPublicRooms()\n  const room = rooms.find(room => room.room_id == roomId)\n  return room\n}\n\nasync function getRoomById(roomId) {\n  try {\n    let room = await client.getRoom(roomId)\n    const name = room.name\n    const topic = getRoomTopicFromRoomObject(room)\n    const group = {\n      name: name,\n      topic: topic,\n    }\n    return group\n  } catch (error) {\n    console.log(error)\n    return null\n  }\n}\n\nfunction updateChat(roomId) {\n  let room = client.getRoom(roomId)\n  let creator = room.currentState.getStateEvents('m.room.create', '')\n  let idAndTopicObject = {\n    id: roomId,\n    creator: creator.event.content.creator.replace(/:.*/, ''),\n    topic: getRoomTopicFromRoomObject(room),\n    content: getRoomTimeline(roomId),\n  }\n  return idAndTopicObject\n}\n\nexport async function getOwnProfile() {\n  let responseFromServer = await client.getProfileInfo(loginCreds.userId)\n  responseFromServer.handle = getHandleFromUserId()\n  responseFromServer.displayname = JSON.parse(responseFromServer.displayname)\n  return responseFromServer\n}\n\nasync function getTimeline(roomId) {\n  return client.roomInitialSync(roomId, 1000)\n}\n\nfunction getRoomTimeline(roomId) {\n  let room = client.getRoom(roomId)\n  let messageArray = []\n  room.timeline.forEach(t => {\n    messageArray.push(t.event)\n  });\n  return messageArray\n}\n\nfunction getChildrenIds(spaceId) {\n  const space = client.getRoom(spaceId)\n  let childrenMap\n  try {\n    childrenMap = space.currentState.events.get('m.space.child')\n  } catch (error) {\n    console.log(error)\n    return []\n  }\n  let childrenIdArray = Array.from( childrenMap.keys() )\n  console.log(childrenIdArray)\n  return childrenIdArray\n}\n\nfunction getChildren(spaceId) {\n  let ids = getChildrenIds(spaceId)\n  let roomObjects = []\n  ids.forEach(id => {\n    roomObjects.push(client.getRoom(id))\n  })\n  joinRooms(roomObjects)\n  console.log(roomObjects)\n  return roomObjects\n}\n\nfunction getGroupContent(groupId) {\n  let content = {}\n  let groups = getChildren(groupId)\n  let name\n  let id\n  let children\n  let idAndTopicObject = {}\n  groups.forEach(child => {\n    if (child != null) {\n      name = child.name\n      id = child.roomId\n      console.log(name)\n      try {\n        children = getChildren(id)\n      } catch (error) {\n        return\n      }\n      idAndTopicObject = {}\n      content[name] = {}\n      children.forEach(item => {\n        try {\n          let creator = item.currentState.getStateEvents('m.room.create', '')\n          idAndTopicObject[item.roomId] = {\n            id: item.roomId,\n            creator: creator.event.content.creator.replace(/:.*/, ''),\n            topic: getRoomTopicFromRoomObject(item),\n            content: getRoomTimeline(item.roomId),\n          }\n        } catch (error) {\n          return\n        }\n      })\n      content[name] = {\n        id: id,\n        children: idAndTopicObject,\n      }\n    }\n  })\n  return content\n}\n\nfunction getChatContent(groupId) {\n  let content = getGroupContent(groupId)\n  return content.chat\n}\n\nfunction getSubgroupContent(groupId) {\n  let content = getGroupContent(groupId)\n  return content.groups\n}\n\nfunction getBoardContent(groupId) {\n  let content = getGroupContent(groupId)\n  return content.board\n}\n\nfunction produceHrefAddressesForGroups(rooms) {\n  const roomIds = rooms.map(room => {\n    let id = room.roomId.replace(/:.*/, '')\n    id = id.replace(/!/, '')\n    id = \"/tabs/group/\" + id\n    return id\n  })\n  // roomIds.forEach(roomId => console.log(roomId))\n  return roomIds\n}\n\nfunction getGroups() {\n  let rooms = client.getRooms()\n  let roomNamesAndIdsAsObject = {}\n  let roomNames = returnRoomNamesFromRoomObject(rooms)\n  let roomIds = returnRoomIdsFromRoomObject(rooms)\n  let hrefs = produceHrefAddressesForGroups(rooms)\n  let roomHandles = roomIds.map(roomId => getHandleFromRoomId(roomId))\n  let roomTopics = rooms.map(room => getRoomTopicFromRoomObject(room))\n  let roomTypes = roomIds.map(roomId => getRoomType(roomId))\n  let roomProduct = []\n  for (let i = 0; i < roomNames.length; i++) {\n    roomProduct.push({\n      name: roomNames[i],\n      id: roomIds[i],\n      topic: roomTopics[i],\n      type: roomTypes[i],\n      handle: roomHandles[i],\n      href: hrefs[i],\n    })\n  }\n  Object.assign(roomNamesAndIdsAsObject, roomProduct)\n  return roomNamesAndIdsAsObject\n}\n\n// SETTERS\n\nfunction createSubSpace(\n  parentSpaceId, \n  subSpaceName, \n  subSpaceTopic, \n  roomId) {\n  client.sendStateEvent(roomId, 'm.space.parent', {\n    via: ['home.parecon.work'],\n    state_key: parentSpaceId,\n    canonical: true,\n  })\n  return\n}\n\nasync function createSpace(groupName, topic, ) {\n  let returnValue = await client.createRoom({\n    name: groupName,\n    visibility: 'public',\n    topic: topic,\n    creation_content: {\n      type: 'm.space',\n    },\n    power_lever_content: {\n      \"users\": {creator_id: 100},\n      \"users_default\": 100,\n    }\n  }).then((response) => {\n    console.log(`Room created: ${response.room_id}`)\n    return response.room_id\n  }).catch((error) => {\n    console.error(`Error creating room: ${error}`)\n  })\n  return returnValue\n}\n\nasync function createRoom(roomName, topic) {\n  let returnValue = await client.createRoom({\n    name: roomName,\n    visibility: 'public',\n    topic: topic,\n    power_level_content: {\n      \"users\": {creator_id: 100},\n      \"users_default\": 100,\n    }\n  }).then((response) => {\n    console.log(`Room created: ${response.room_id}`)\n    return response.room_id\n  }).catch((error) => {\n    console.error(`Error creating room: ${error}`)\n  })\n  return returnValue\n}\n\nasync function createPost(chatSpaceId, topic) {\n  let newRoom = await createRoom(\"post\", topic)\n  assignChild(chatSpaceId, newRoom)\n  assignParent(newRoom, chatSpaceId)\n  return\n}\n\nfunction assignChild(parentSpaceId, childSpaceId) {\n  client.sendStateEvent(parentSpaceId, 'm.space.child', {\n    via: ['home.parecon.work'],\n  }, childSpaceId).then((error) => {\n    console.log(error)})\n  console.log(\"assigned child\")\n}\n\nfunction assignParent(childSpaceId, parentSpaceId) {\n  client.sendStateEvent(childSpaceId, 'm.space.parent', {\n    canonical: true,\n    via: ['home.parecon.work'],\n  }, parentSpaceId)\n  console.log(\"assigned parent\")\n}\n\nasync function assignParentAndChild(parentSpaceId, childSpaceId) {\n  assignChild(parentSpaceId, childSpaceId)\n  assignParent(childSpaceId, parentSpaceId)\n  return true\n}\n\nfunction joinRooms(roomIdArray) {\n  roomIdArray.forEach(roomId => {\n    setTimeout(() => {\n      console.log(\"timeouting\")\n    }, 1000)\n    if (typeof roomId == String) {\n      client.joinRoom(roomId)\n      console.log('joined ' + roomId)\n    } else if (typeof roomId == Object) {\n      client.joinRoom(roomId.roomId)\n      console.log('joined ' + roomId.roomId)\n    }\n  })\n}\n\nasync function createRealGroup(groupName, topic) {\n  let mainSpaceId = await createSpace(\n    groupName, '{\"text\": \"' + topic + '\", \"banner\": \"group\"}')\n  let chatSpaceId = await createSpace(\n    \"chat\", '{\"text\": \"chat\", \"banner\": \"group\"}')\n  let boardSpaceId = await createSpace(\n    \"board\", '{\"text\": \"board\", \"banner\": \"group\"}')\n  let calendarSpaceId = await createSpace(\n    \"groups\", '{\"text\": \"groups\", \"banner\": \"group\"}')\n  assignParentAndChild(mainSpaceId, chatSpaceId).then(() => {\n    assignParentAndChild(mainSpaceId, boardSpaceId).then(() => {\n      assignParentAndChild(mainSpaceId, calendarSpaceId)\n    })\n  })\n  return mainSpaceId\n}\n\nasync function createSubGroup(groupName, topic, parentGroupSpaceId) {\n  let mainSpaceId = await createRealGroup(groupName, topic)\n  assignParentAndChild(parentGroupSpaceId, mainSpaceId)\n  return\n}\n\nfunction joinGroup(groupId) {\n  client.joinRoom(groupId).then((response) => {\n    // meh\n  }).catch((error) => {\n    // meh\n  })\n}\n\nasync function getRoomState() {\n  let shortlist = []\n  let shortlistObject = {}\n  let response = await client.roomState(\"!OGEhHVWSdvArJzumhm:matrix.org\")\n    .then((response) => {\n      for (let i = 0; i < 100; i++) {\n        shortlist.push(response[i])\n        Object.assign(shortlistObject, shortlist)\n      }\n      return shortlistObject\n    })\n  return response\n}\n\nasync function getMessages(roomId) {\n  client.initialSync(roomId).then((response) => {\n    const timeline = response.timeline;\n    // Do something with the timeline, such as render it in a chat interface\n  }).catch((error) => {\n    console.error(`Error fetching initial sync for room ${roomId}: ${error}`);\n  })\n}\n\nfunction sendMessage(roomId, message) {\n  const content = {\n    body: \"A hobbit trying to scale mount everest\",\n    msgtype: \"m.text\",\n  }\n  client.sendEvent(\"roomId\", \"m.room.message\", content, \"\", (err, res) => {\n    console.log(err)\n  })\n}\n\nfunction updateTimeline(roomId) {\n  client.on(\"Room.timeline\", function (event, room, toStartOfTimeline) {\n    if (event.getType() !== \"m.room.message\") {\n      return; // only use messages\n    }\n})\n}\n\nasync function getMembersOfRoom(roomId) {\n  let room = await client.getRoom(roomId)\n  let members = room.getMembers()\n  return members\n}\n\nfunction sendText(roomId, text) {\n  client.sendTextMessage(roomId, text)\n}\n\nfunction accountData() {\n  return client.getAccountData()\n}\n\n// TODO - Add a getter to get a room's timeline\n// TODO - Get a filter to get a group's associated groups\n// TODO -\n// TODO: Ranking functionality of group membership to curate what appears on top\n// TODO - of the list on group profile. Use the \"suggested\" value of space children\n// TODO - to determine whether the rooms are considered important. Canonical parent\n// TODO - is also useful\n\nexport const useMatrixClient = defineStore('matrix-client', {\n  state: () => {\n    return ({\n      client,\n      getGroups,\n      getOwnProfile,\n      getMembersOfRoom,\n      getChildrenIds,\n      getChildren,\n      getRoomById,\n      getRoomTimeline,\n      getGroupContent,\n      getChatContent,\n      getSubgroupContent,\n      getMessages,\n      login,\n      sendText,\n      accountData,\n      assignParent,\n      assignChild,\n      createRealGroup,\n      updateChat,\n      getTimeline,\n      createPost,\n      createSubGroup,\n      getAllUsers,\n      getPublicRooms,\n      getRoomFromRoomArray,\n      joinRooms,\n    })\n  },\n  getters: {\n    getRooms: (state) => () => {\n      return state.getRooms()\n    },\n    updateTimeline: (state) => () => {\n      return updateTimeline()\n    },\n    getRoomState: (state) => () => {\n      return getRoomState()\n    },\n  },\n  setters: {\n    login: (state) => () => {\n      return state.login()\n    }\n  }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
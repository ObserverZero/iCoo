{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { defineStore } from 'pinia';\nimport sdk, { EventType } from 'matrix-js-sdk';\nconst loginCreds = {\n  accessToken: \"syt_b2JzZXJ2ZXJ6ZXJv_qbsSNMdGRZpXMsNvXJeX_3OODDh\",\n  userId: \"@observerzero:matrix.org\",\n  baseUrl: 'https://matrix.org'\n};\nconst client = sdk.createClient({\n  baseUrl: loginCreds.baseUrl,\n  accessToken: loginCreds.accessToken,\n  userId: loginCreds.userId\n});\nfunction createUser(username, password) {\n  // TODO: Add a room for the user that handles additional user information, such as hashtags, description, images,\n  // TODO - friends lists, following, memberships, etc.\n}\nfunction getHandleFromUserId() {\n  return loginCreds.userId.replace(/:.*/, '');\n}\nfunction getHandleFromRoomId(id) {\n  return id.replace(/:.*/, '');\n}\nclient.startClient();\nfunction login() {\n  client.loginWithPassword('username', 'password').then(function () {\n    console.log('Logged in!');\n  });\n}\n\n// GETTERS\n\nfunction getRoomTopic(roomId) {\n  let room = client.getRoom(roomId);\n  let topic = room.currentState.getStateEvents('m.room.topic', '');\n  try {\n    return topic.event.content.topic;\n  } catch (error) {\n    return 'We do nothing!';\n  }\n}\nfunction getRoomType(roomId) {\n  let room = client.getRoom(roomId);\n  let type = room.currentState.getStateEvents('m.room.create', '');\n  try {\n    return type.event.content.type;\n  } catch (error) {\n    return 'no type for you!!';\n  }\n}\nfunction returnRoomNamesFromRoomObject(rooms) {\n  const roomNames = rooms.map(room => room.name);\n  return roomNames;\n}\nfunction returnRoomIdsFromRoomObject(rooms) {\n  const roomIds = rooms.map(room => room.roomId);\n  return roomIds;\n}\nfunction returnRoomTypeFromRoomObject(rooms) {\n  const roomTypes = rooms.map(room => getRoomType(room.id));\n}\nfunction getRoomById(roomId) {\n  return client.getRoom(roomId);\n}\nfunction isParent() {\n  return;\n}\nasync function getOwnProfile() {\n  let responseFromServer = await client.getProfileInfo(loginCreds.userId);\n  responseFromServer.handle = getHandleFromUserId();\n  return responseFromServer;\n}\nfunction returnChildrenOfSpaceIds(spaceId) {\n  let space = client.getRoom(spaceId);\n  let childrenMap = space.relations.room.currentState.events;\n  let arrayOfRelations = Array.from(space.relations.room.currentState.events);\n  let arrayOfChildren = Array.from(arrayOfRelations[8][1]);\n  let arrayOfChildrenIds = arrayOfChildren.map(child => child[0]);\n  try {\n    console.log(arrayOfChildrenIds);\n  } catch (error) {\n    console.log(error);\n  }\n  return arrayOfChildrenIds;\n}\nfunction getGroups() {\n  let rooms = client.getRooms();\n  let roomNamesAndIdsAsObject = {};\n  let roomNames = returnRoomNamesFromRoomObject(rooms);\n  let roomIds = returnRoomIdsFromRoomObject(rooms);\n  let roomHandles = roomIds.map(roomId => getHandleFromRoomId(roomId));\n  let roomTopics = roomIds.map(roomId => getRoomTopic(roomId));\n  let roomTypes = roomIds.map(roomId => getRoomType(roomId));\n  let roomProduct = [];\n  for (let i = 0; i < roomNames.length; i++) {\n    roomProduct.push({\n      name: roomNames[i],\n      id: roomIds[i],\n      topic: roomTopics[i],\n      type: roomTypes[i],\n      handle: roomHandles[i]\n    });\n  }\n  Object.assign(roomNamesAndIdsAsObject, roomProduct);\n  console.log(rooms);\n  return roomNamesAndIdsAsObject;\n}\n\n// SETTERS\n\n// TODO: add type for space or room\nfunction createGroup(groupName, topic, type) {\n  client.createRoom({\n    name: groupName,\n    visibility: 'private',\n    topic: topic,\n    creation_content: {\n      type: 'm.space'\n    }\n  }).then(response => {\n    console.log(type);\n    console.log(`Room created: ${response.room_id}`);\n    //client.sendStateEvent(response.room_id, 'm.room.create', {room_type: 'm.space'})\n  }).catch(error => {\n    console.error(`Error creating room: ${error}`);\n  });\n}\nfunction createRealGroup(groupName, topic, type) {\n  // TODO: add rooms that identify group as parent and canonical parent, and add child identifier on the space.\n  // TODO - power levels will hopefully isolate the rooms as necessary to the space.\n}\nfunction joinGroup(groupId) {\n  client.joinRoom(groupId).then(response => {\n    console.log(`Joined room: ${response.room_id}`);\n  }).catch(error => {\n    console.error(`Error joining room: ${error}`);\n  });\n}\nasync function getRoomState() {\n  let shortlist = [];\n  let shortlistObject = {};\n  let response = await client.roomState(\"!OGEhHVWSdvArJzumhm:matrix.org\").then(response => {\n    for (let i = 0; i < 100; i++) {\n      shortlist.push(response[i].sender);\n      Object.assign(shortlistObject, shortlist);\n    }\n    return shortlistObject;\n  });\n  // console.log(response)\n  return response;\n}\nfunction sendMessage(roomId, message) {\n  const content = {\n    body: \"A hobbit trying to scale mount everest\",\n    msgtype: \"m.text\"\n  };\n  client.sendEvent(\"roomId\", \"m.room.message\", content, \"\", (err, res) => {\n    console.log(err);\n  });\n}\nfunction updateTimeline(roomId) {\n  client.on(\"Room.timeline\", function (event, room, toStartOfTimeline) {\n    if (toStartOfTimeline) {\n      var messageToAppend = room.timeline[room.timeline.length - 1];\n      console.log(messageToAppend);\n      console.log(\"wow\");\n    }\n  });\n}\nasync function getMembersOfRoom(roomId) {\n  let room = await client.getRoom(roomId);\n  let members = room.getMembers();\n  console.log(members);\n  return members;\n}\n\n//TODO - Add a getter to get a room's timeline\n//TODO - Get a filter to get a group's associated groups\n//TODO -\n// TODO: Ranking functionality of group membership to curate what appears on top\n// TODO - of the list on group profile. Use the \"suggested\" value of space children\n// TODO - to determine whether the rooms are considered important. Canonical parent\n// TODO - is also useful\n\nexport const useMatrixClient = defineStore('matrix-client', {\n  state: () => {\n    return {\n      client,\n      getGroups,\n      getOwnProfile,\n      createGroup,\n      getMembersOfRoom,\n      returnChildrenOfSpaceIds,\n      login\n    };\n  },\n  getters: {\n    getRoomById: getRoomById,\n    getRooms: state => () => {\n      return state.getRooms();\n    },\n    updateTimeline: state => () => {\n      return updateTimeline();\n    },\n    getRoomState: state => () => {\n      return getRoomState();\n    }\n  },\n  setters: {\n    createGroup: state => groupName => {\n      return state.createGroup(groupName);\n    },\n    login: state => () => {\n      return state.login();\n    }\n  }\n});","map":{"version":3,"names":["defineStore","sdk","EventType","loginCreds","accessToken","userId","baseUrl","client","createClient","createUser","username","password","getHandleFromUserId","replace","getHandleFromRoomId","id","startClient","login","loginWithPassword","then","console","log","getRoomTopic","roomId","room","getRoom","topic","currentState","getStateEvents","event","content","error","getRoomType","type","returnRoomNamesFromRoomObject","rooms","roomNames","map","name","returnRoomIdsFromRoomObject","roomIds","returnRoomTypeFromRoomObject","roomTypes","getRoomById","isParent","getOwnProfile","responseFromServer","getProfileInfo","handle","returnChildrenOfSpaceIds","spaceId","space","childrenMap","relations","events","arrayOfRelations","Array","from","arrayOfChildren","arrayOfChildrenIds","child","getGroups","getRooms","roomNamesAndIdsAsObject","roomHandles","roomTopics","roomProduct","i","length","push","Object","assign","createGroup","groupName","createRoom","visibility","creation_content","response","room_id","catch","createRealGroup","joinGroup","groupId","joinRoom","getRoomState","shortlist","shortlistObject","roomState","sender","sendMessage","message","body","msgtype","sendEvent","err","res","updateTimeline","on","toStartOfTimeline","messageToAppend","timeline","getMembersOfRoom","members","getMembers","useMatrixClient","state","getters","setters"],"sources":["/Users/observerzero/Project/Dev/icoo/src/stores/MatrixClient.js"],"sourcesContent":["import {defineStore} from 'pinia'\nimport sdk, {EventType} from 'matrix-js-sdk'\n\nconst loginCreds = {\n  accessToken: \"syt_b2JzZXJ2ZXJ6ZXJv_qbsSNMdGRZpXMsNvXJeX_3OODDh\",\n  userId: \"@observerzero:matrix.org\",\n  baseUrl: 'https://matrix.org'\n}\nconst client = sdk.createClient({\n  baseUrl: loginCreds.baseUrl,\n  accessToken: loginCreds.accessToken,\n  userId: loginCreds.userId,\n})\n\nfunction createUser(username, password) {\n  // TODO: Add a room for the user that handles additional user information, such as hashtags, description, images,\n  // TODO - friends lists, following, memberships, etc.\n}\n\nfunction getHandleFromUserId() {\n  return loginCreds.userId.replace(/:.*/, '')\n}\n\nfunction getHandleFromRoomId(id) {\n  return id.replace(/:.*/, '')\n}\n\nclient.startClient()\n\nfunction login() {\n  client.loginWithPassword('username', 'password').then(function () {\n    console.log('Logged in!')\n  })\n}\n\n// GETTERS\n\nfunction getRoomTopic(roomId) {\n  let room = client.getRoom(roomId)\n  let topic = room.currentState.getStateEvents('m.room.topic', '')\n  try {\n    return topic.event.content.topic\n  } catch (error) {\n    return 'We do nothing!'\n  }\n}\n\nfunction getRoomType(roomId) {\n  let room = client.getRoom(roomId)\n  let type = room.currentState.getStateEvents('m.room.create', '')\n  try {\n    return type.event.content.type\n  } catch (error) {\n    return 'no type for you!!'\n  }\n}\n\nfunction returnRoomNamesFromRoomObject(rooms) {\n  const roomNames = rooms.map(room => room.name)\n  return roomNames\n}\n\nfunction returnRoomIdsFromRoomObject(rooms) {\n  const roomIds = rooms.map(room => room.roomId)\n  return roomIds\n}\n\nfunction returnRoomTypeFromRoomObject(rooms) {\n  const roomTypes = rooms.map(room => getRoomType(room.id))\n}\n\nfunction getRoomById(roomId) {\n  return client.getRoom(roomId)\n}\n\nfunction isParent() {\n  return\n}\n\nasync function getOwnProfile() {\n  let responseFromServer = await client.getProfileInfo(loginCreds.userId)\n  responseFromServer.handle = getHandleFromUserId()\n  return responseFromServer\n}\n\nfunction returnChildrenOfSpaceIds(spaceId) {\n  let space = client.getRoom(spaceId)\n  let childrenMap = space.relations.room.currentState.events\n  let arrayOfRelations = Array.from(space.relations.room.currentState.events)\n  let arrayOfChildren = Array.from(arrayOfRelations[8][1])\n  let arrayOfChildrenIds = arrayOfChildren.map(child => child[0])\n  try {\n    console.log(arrayOfChildrenIds)\n  } catch (error) {\n    console.log(error)\n  }\n  return arrayOfChildrenIds\n}\n\nfunction getGroups() {\n  let rooms = client.getRooms()\n  let roomNamesAndIdsAsObject = {}\n  let roomNames = returnRoomNamesFromRoomObject(rooms)\n  let roomIds = returnRoomIdsFromRoomObject(rooms)\n  let roomHandles = roomIds.map(roomId => getHandleFromRoomId(roomId))\n  let roomTopics = roomIds.map(roomId => getRoomTopic(roomId))\n  let roomTypes = roomIds.map(roomId => getRoomType(roomId))\n  let roomProduct = []\n  for (let i = 0; i < roomNames.length; i++) {\n    roomProduct.push({\n      name: roomNames[i],\n      id: roomIds[i],\n      topic: roomTopics[i],\n      type: roomTypes[i],\n      handle: roomHandles[i]\n    })\n  }\n  Object.assign(roomNamesAndIdsAsObject, roomProduct)\n  console.log(rooms)\n  return roomNamesAndIdsAsObject\n}\n\n// SETTERS\n\n// TODO: add type for space or room\nfunction createGroup(groupName, topic, type) {\n  client.createRoom({\n    name: groupName,\n    visibility: 'private',\n    topic: topic,\n    creation_content: {\n      type: 'm.space',\n    }\n  }).then((response) => {\n    console.log(type)\n    console.log(`Room created: ${response.room_id}`)\n    //client.sendStateEvent(response.room_id, 'm.room.create', {room_type: 'm.space'})\n  }).catch((error) => {\n    console.error(`Error creating room: ${error}`)\n  })\n}\n\nfunction createRealGroup(groupName, topic, type) {\n  // TODO: add rooms that identify group as parent and canonical parent, and add child identifier on the space.\n  // TODO - power levels will hopefully isolate the rooms as necessary to the space.\n}\n\nfunction joinGroup(groupId) {\n  client.joinRoom(groupId).then((response) => {\n    console.log(`Joined room: ${response.room_id}`)\n  }).catch((error) => {\n    console.error(`Error joining room: ${error}`)\n  })\n}\n\nasync function getRoomState() {\n  let shortlist = []\n  let shortlistObject = {}\n  let response = await client.roomState(\"!OGEhHVWSdvArJzumhm:matrix.org\").then((response) => {\n    for (let i = 0; i < 100; i++) {\n      shortlist.push(response[i].sender)\n      Object.assign(shortlistObject, shortlist)\n    }\n    return shortlistObject\n  })\n  // console.log(response)\n  return response\n}\n\nfunction sendMessage(roomId, message) {\n  const content = {\n    body: \"A hobbit trying to scale mount everest\",\n    msgtype: \"m.text\",\n  }\n  client.sendEvent(\"roomId\", \"m.room.message\", content, \"\", (err, res) => {\n    console.log(err)\n  })\n}\n\nfunction updateTimeline(roomId) {\n  client.on(\"Room.timeline\", function (event, room, toStartOfTimeline) {\n    if (toStartOfTimeline) {\n      var messageToAppend = room.timeline[room.timeline.length - 1]\n      console.log(messageToAppend)\n      console.log(\"wow\")\n    }\n  })\n}\n\nasync function getMembersOfRoom(roomId) {\n  let room = await client.getRoom(roomId)\n  let members = room.getMembers()\n  console.log(members)\n  return members\n}\n\n//TODO - Add a getter to get a room's timeline\n//TODO - Get a filter to get a group's associated groups\n//TODO -\n// TODO: Ranking functionality of group membership to curate what appears on top\n// TODO - of the list on group profile. Use the \"suggested\" value of space children\n// TODO - to determine whether the rooms are considered important. Canonical parent\n// TODO - is also useful\n\nexport const useMatrixClient = defineStore('matrix-client', {\n  state: () => {\n    return ({\n      client,\n      getGroups,\n      getOwnProfile,\n      createGroup,\n      getMembersOfRoom,\n      returnChildrenOfSpaceIds,\n      login,\n    })\n  },\n  getters: {\n    getRoomById: getRoomById,\n    getRooms: (state) => () => {\n      return state.getRooms()\n    },\n    updateTimeline: (state) => () => {\n      return updateTimeline()\n    },\n    getRoomState: (state) => () => {\n      return getRoomState()\n    },\n  },\n  setters: {\n    createGroup: (state) => (groupName) => {\n      return state.createGroup(groupName)\n    },\n    login: (state) => () => {\n      return state.login()\n    }\n  }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
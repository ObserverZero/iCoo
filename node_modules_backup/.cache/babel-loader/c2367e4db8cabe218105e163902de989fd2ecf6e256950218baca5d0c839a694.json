{"ast":null,"code":"/* eslint-disable vue/no-unused-components */\nimport { IonCard, IonCardHeader, IonCardSubtitle, IonCardTitle, IonIcon, IonCardContent, IonList, IonItem, modalController, IonModal, IonHeader, IonToolbar, IonButtons, IonButton, IonSearchbar } from '@ionic/vue';\nimport ChatItem from \"@/components/ChatItem.vue\";\nexport default {\n  name: \"ChatSpace\",\n  setup() {\n    return {\n      groupId: 'yoyoyo'\n    };\n  },\n  components: {\n    ChatItem,\n    IonCard,\n    IonCardHeader,\n    IonCardSubtitle,\n    IonCardTitle,\n    IonIcon,\n    IonCardContent,\n    IonList,\n    IonItem,\n    modalController,\n    IonModal,\n    IonHeader,\n    IonToolbar,\n    IonButtons,\n    IonButton,\n    IonSearchbar\n  },\n  props: {},\n  methods: {\n    async openModal() {\n      const modal = await modalController.create({\n        component: IonModal,\n        componentProps: {\n          groupId: this.groupId\n        }\n      });\n      return await modal.present();\n    }\n  }\n};","map":{"version":3,"mappings":"AA4BA;AACA,SACEA,OAAO,EACPC,aAAa,EACbC,eAAe,EACfC,YAAY,EACZC,OAAO,EACPC,cAAc,EACdC,OAAO,EACPC,OAAO,EACPC,eAAe,EACfC,QAAQ,EACRC,SAAS,EACTC,UAAU,EACVC,UAAU,EACVC,SAAS,EACTC,YAAY,QACP,YAAY;AACnB,OAAOC,QAAO,MAAO,2BAA2B;AAEhD,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,KAAK,GAAG;IACN,OAAO;MACLC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,UAAU,EAAE;IACVJ,QAAQ;IACRf,OAAO;IACPC,aAAa;IACbC,eAAe;IACfC,YAAY;IACZC,OAAO;IACPC,cAAc;IACdC,OAAO;IACPC,OAAO;IACPC,eAAe;IACfC,QAAQ;IACRC,SAAS;IACTC,UAAU;IACVC,UAAU;IACVC,SAAS;IACTC;EACF,CAAC;EACDM,KAAK,EAAE,CAAC,CAAC;EACTC,OAAO,EAAE;IACP,MAAMC,SAAS,GAAG;MAChB,MAAMC,KAAI,GAAI,MAAMf,eAAe,CAACgB,MAAM,CAAC;QACzCC,SAAS,EAAEhB,QAAQ;QACnBiB,cAAc,EAAE;UACdR,OAAO,EAAE,IAAI,CAACA;QAChB;MACF,CAAC,CAAC;MACF,OAAO,MAAMK,KAAK,CAACI,OAAO,EAAE;IAC9B;EACF;AACF","names":["IonCard","IonCardHeader","IonCardSubtitle","IonCardTitle","IonIcon","IonCardContent","IonList","IonItem","modalController","IonModal","IonHeader","IonToolbar","IonButtons","IonButton","IonSearchbar","ChatItem","name","setup","groupId","components","props","methods","openModal","modal","create","component","componentProps","present"],"sourceRoot":"","sources":["/Users/observerzero/Project/Dev/icoo/src/components/Group/ChatSpace.vue"],"sourcesContent":["<template ref=\"chatSpace\">\n  <IonList>\n    <ChatItem @click=\"openModal\"/>\n    <ChatItem @click=\"openModal\"/>\n    <ChatItem @click=\"openModal\"/>\n  </IonList>\n  <ion-modal ref=\"modal\" trigger=\"open-modal\" @willDismiss=\"onWillDismiss\">\n    <ion-header>\n      <ion-toolbar>\n        <ion-buttons slot=\"start\">\n          <ion-button @click=\"cancel()\">Cancel</ion-button>\n        </ion-buttons>\n        <ion-title>Welcome</ion-title>\n        <ion-buttons slot=\"end\">\n          <ion-button :strong=\"true\" @click=\"confirm()\">Confirm</ion-button>\n        </ion-buttons>\n      </ion-toolbar>\n    </ion-header>\n    <ion-content class=\"ion-padding\">\n      <ion-item>\n        <ion-label position=\"stacked\">Enter your name</ion-label>\n        <ion-input ref=\"input\" type=\"text\" placeholder=\"Your name\"></ion-input>\n      </ion-item>\n    </ion-content>\n  </ion-modal>\n</template>\n\n<script>\n/* eslint-disable vue/no-unused-components */\nimport {\n  IonCard,\n  IonCardHeader,\n  IonCardSubtitle,\n  IonCardTitle,\n  IonIcon,\n  IonCardContent,\n  IonList,\n  IonItem,\n  modalController,\n  IonModal,\n  IonHeader,\n  IonToolbar,\n  IonButtons,\n  IonButton,\n  IonSearchbar,\n} from '@ionic/vue';\nimport ChatItem from \"@/components/ChatItem.vue\";\n\nexport default {\n  name: \"ChatSpace\",\n  setup() {\n    return {\n      groupId: 'yoyoyo'\n    }\n  },\n  components: {\n    ChatItem,\n    IonCard,\n    IonCardHeader,\n    IonCardSubtitle,\n    IonCardTitle,\n    IonIcon,\n    IonCardContent,\n    IonList,\n    IonItem,\n    modalController,\n    IonModal,\n    IonHeader,\n    IonToolbar,\n    IonButtons,\n    IonButton,\n    IonSearchbar,\n  },\n  props: {},\n  methods: {\n    async openModal() {\n      const modal = await modalController.create({\n        component: IonModal,\n        componentProps: {\n          groupId: this.groupId,\n        }\n      });\n      return await modal.present();\n    },\n  }\n}\n\n</script>\n\n<style scoped>\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
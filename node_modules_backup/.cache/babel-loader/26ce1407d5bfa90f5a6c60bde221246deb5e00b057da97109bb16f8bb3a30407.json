{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { defineStore } from 'pinia';\nimport sdk, { EventType } from 'matrix-js-sdk';\nconst loginCreds = {\n  accessToken: \"syt_b2JzZXJ2ZXJ6ZXJv_qbsSNMdGRZpXMsNvXJeX_3OODDh\",\n  userId: \"@observerzero:matrix.org\",\n  baseUrl: 'https://matrix.org'\n};\nconst client = sdk.createClient({\n  baseUrl: loginCreds.baseUrl,\n  accessToken: loginCreds.accessToken,\n  userId: loginCreds.userId\n});\nfunction getHandleFromUserId() {\n  return loginCreds.userId.replace(/:.*/, '');\n}\nclient.startClient();\nfunction login() {\n  client.loginWithPassword('username', 'password').then(function () {\n    console.log('Logged in!');\n  });\n}\n\n// GETTERS\n\nfunction getRoomTopic(roomId) {\n  let room = client.getRoom(roomId);\n  let topic = room.currentState.getStateEvents('m.room.topic', '');\n  try {\n    return topic.event.content.topic;\n  } catch (error) {\n    return 'We do nothing!';\n  }\n}\nfunction getRoomType(roomId) {\n  let room = client.getRoom(roomId);\n  let type = room.currentState.getStateEvents('m.room.create', '');\n  try {\n    return type.event.content.type;\n  } catch (error) {\n    return 'no type for you!!';\n  }\n}\nfunction returnRoomNamesFromRoomObject(rooms) {\n  const roomNames = rooms.map(room => room.name);\n  return roomNames;\n}\nfunction returnRoomIdsFromRoomObject(rooms) {\n  const roomIds = rooms.map(room => room.roomId);\n  return roomIds;\n}\nfunction returnRoomTypeFromRoomObject(rooms) {\n  const roomTypes = rooms.map(room => getRoomType(room.id));\n}\nfunction getRoomById(roomId) {\n  return client.getRoom(roomId);\n}\nfunction getOwnProfile() {\n  let responseFromServer = client.getProfileInfo(loginCreds.userId);\n  let profile = responseFromServer.then(response => {\n    console.log(response);\n    return response;\n  });\n  profile.handle = getHandleFromUserId();\n  console.log(profile);\n  return profile;\n}\nfunction getGroups() {\n  let rooms = client.getRooms();\n  let roomNamesAndIdsAsObject = {};\n  let roomNames = returnRoomNamesFromRoomObject(rooms);\n  let roomIds = returnRoomIdsFromRoomObject(rooms);\n  let roomTopics = roomIds.map(roomId => getRoomTopic(roomId));\n  let roomTypes = roomIds.map(roomId => getRoomType(roomId));\n  let roomProduct = [];\n  for (let i = 0; i < roomNames.length; i++) {\n    roomProduct.push({\n      name: roomNames[i],\n      id: roomIds[i],\n      topic: roomTopics[i],\n      type: roomTypes[i]\n    });\n  }\n  Object.assign(roomNamesAndIdsAsObject, roomProduct);\n  console.log(roomNamesAndIdsAsObject);\n  return roomNamesAndIdsAsObject;\n}\n\n// SETTERS\n\n// TODO: add type for space or room\nfunction createGroup(groupName, topic, type) {\n  client.createRoom({\n    name: groupName,\n    visibility: 'private',\n    topic: topic,\n    creation_content: {\n      type: 'm.space'\n    }\n  }).then(response => {\n    console.log(type);\n    console.log(`Room created: ${response.room_id}`);\n    //client.sendStateEvent(response.room_id, 'm.room.create', {room_type: 'm.space'})\n  }).catch(error => {\n    console.error(`Error creating room: ${error}`);\n  });\n}\nfunction joinGroup(groupId) {\n  client.joinRoom(groupId).then(response => {\n    console.log(`Joined room: ${response.room_id}`);\n  }).catch(error => {\n    console.error(`Error joining room: ${error}`);\n  });\n}\n\n//TODO - Add a getter to get a room's timeline\n//TODO - Add a getter to get a room's type\n//TODO - Get a filter to get a group's associated groups\n//TODO -\n\nexport const useMatrixClient = defineStore('matrix-client', {\n  state: () => {\n    return {\n      client: client,\n      getGroups: getGroups,\n      getOwnProfile: getOwnProfile,\n      createGroup: createGroup,\n      login: login\n    };\n  },\n  getters: {\n    getRoomById: getRoomById,\n    getRooms: state => () => {\n      return state.getRooms();\n    },\n    getRoomNamesAndIds: state => () => {\n      return state.getGroups();\n    },\n    ownProfile: state => () => {\n      return state.getOwnProfile();\n    }\n  },\n  setters: {\n    createGroup: state => groupName => {\n      return state.createGroup(groupName);\n    },\n    login: state => () => {\n      return state.login();\n    }\n  }\n});","map":{"version":3,"names":["defineStore","sdk","EventType","loginCreds","accessToken","userId","baseUrl","client","createClient","getHandleFromUserId","replace","startClient","login","loginWithPassword","then","console","log","getRoomTopic","roomId","room","getRoom","topic","currentState","getStateEvents","event","content","error","getRoomType","type","returnRoomNamesFromRoomObject","rooms","roomNames","map","name","returnRoomIdsFromRoomObject","roomIds","returnRoomTypeFromRoomObject","roomTypes","id","getRoomById","getOwnProfile","responseFromServer","getProfileInfo","profile","response","handle","getGroups","getRooms","roomNamesAndIdsAsObject","roomTopics","roomProduct","i","length","push","Object","assign","createGroup","groupName","createRoom","visibility","creation_content","room_id","catch","joinGroup","groupId","joinRoom","useMatrixClient","state","getters","getRoomNamesAndIds","ownProfile","setters"],"sources":["/Users/observerzero/Project/Dev/icoo/src/stores/MatrixClient.js"],"sourcesContent":["import {defineStore} from 'pinia';\nimport sdk, {EventType} from 'matrix-js-sdk';\n\nconst loginCreds = {\n  accessToken: \"syt_b2JzZXJ2ZXJ6ZXJv_qbsSNMdGRZpXMsNvXJeX_3OODDh\",\n  userId: \"@observerzero:matrix.org\",\n  baseUrl: 'https://matrix.org'\n}\nconst client = sdk.createClient({\n  baseUrl: loginCreds.baseUrl,\n  accessToken: loginCreds.accessToken,\n  userId: loginCreds.userId,\n});\n\nfunction getHandleFromUserId() {\n  return loginCreds.userId.replace(/:.*/, '')\n}\n\nclient.startClient();\n\nfunction login() {\n  client.loginWithPassword('username', 'password').then(function () {\n    console.log('Logged in!')\n  })\n}\n\n// GETTERS\n\nfunction getRoomTopic(roomId) {\n  let room = client.getRoom(roomId);\n  let topic = room.currentState.getStateEvents('m.room.topic', '');\n  try {\n    return topic.event.content.topic;\n  } catch (error) {\n    return 'We do nothing!';\n  }\n}\n\nfunction getRoomType(roomId) {\n  let room = client.getRoom(roomId);\n  let type = room.currentState.getStateEvents('m.room.create', '');\n  try {\n    return type.event.content.type;\n  } catch (error) {\n    return 'no type for you!!';\n  }\n}\n\nfunction returnRoomNamesFromRoomObject(rooms) {\n  const roomNames = rooms.map(room => room.name);\n  return roomNames;\n}\n\nfunction returnRoomIdsFromRoomObject(rooms) {\n  const roomIds = rooms.map(room => room.roomId);\n  return roomIds;\n}\n\nfunction returnRoomTypeFromRoomObject(rooms) {\n  const roomTypes = rooms.map(room => getRoomType(room.id));\n}\n\nfunction getRoomById(roomId) {\n  return client.getRoom(roomId);\n}\n\nfunction getOwnProfile() {\n  let responseFromServer = client.getProfileInfo(loginCreds.userId)\n  let profile = responseFromServer.then((response) => {\n    console.log(response);\n    return response;\n  })\n  profile.handle = getHandleFromUserId();\n  console.log(profile);\n  return profile;\n}\n\nfunction getGroups() {\n  let rooms = client.getRooms()\n  let roomNamesAndIdsAsObject = {};\n  let roomNames = returnRoomNamesFromRoomObject(rooms)\n  let roomIds = returnRoomIdsFromRoomObject(rooms);\n  let roomTopics = roomIds.map(roomId => getRoomTopic(roomId));\n  let roomTypes = roomIds.map(roomId => getRoomType(roomId));\n  let roomProduct = [];\n  for (let i = 0; i < roomNames.length; i++) {\n    roomProduct.push({\n      name: roomNames[i],\n      id: roomIds[i],\n      topic: roomTopics[i],\n      type: roomTypes[i],\n    })\n  }\n  Object.assign(roomNamesAndIdsAsObject, roomProduct)\n  console.log(roomNamesAndIdsAsObject)\n  return roomNamesAndIdsAsObject;\n}\n\n// SETTERS\n\n// TODO: add type for space or room\nfunction createGroup(groupName, topic, type) {\n  client.createRoom({\n    name: groupName,\n    visibility: 'private',\n    topic: topic,\n    creation_content: {\n      type: 'm.space',\n    }\n  }).then((response) => {\n    console.log(type);\n    console.log(`Room created: ${response.room_id}`);\n    //client.sendStateEvent(response.room_id, 'm.room.create', {room_type: 'm.space'})\n  }).catch((error) => {\n    console.error(`Error creating room: ${error}`);\n  });\n}\n\nfunction joinGroup(groupId) {\n  client.joinRoom(groupId).then((response) => {\n    console.log(`Joined room: ${response.room_id}`);\n  }).catch((error) => {\n    console.error(`Error joining room: ${error}`);\n  });\n}\n\n//TODO - Add a getter to get a room's timeline\n//TODO - Add a getter to get a room's type\n//TODO - Get a filter to get a group's associated groups\n//TODO -\n\nexport const useMatrixClient = defineStore('matrix-client', {\n  state: () => {\n    return ({\n      client: client,\n      getGroups: getGroups,\n      getOwnProfile: getOwnProfile,\n      createGroup: createGroup,\n      login: login,\n    });\n  },\n  getters: {\n    getRoomById: getRoomById,\n    getRooms: (state) => () => {\n      return state.getRooms();\n    },\n    getRoomNamesAndIds: (state) => () => {\n      return state.getGroups();\n    },\n    ownProfile: (state) => () => {\n      return state.getOwnProfile();\n    }\n  },\n  setters: {\n    createGroup: (state) => (groupName) => {\n      return state.createGroup(groupName);\n    },\n    login: (state) => () => {\n      return state.login();\n    }\n  }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"/* eslint-disable vue/no-unused-components */\nimport { IonContent, IonHeader, IonTitle, IonToolbar, IonFooter, IonButtons, IonButton, IonItem, IonLabel, IonInput, modalController, IonCheckbox, IonIcon, IonBadge, IonSearchbar, IonModal, IonCard, IonCardHeader, IonCardSubtitle, IonCardTitle, IonCardContent, IonTextArea } from '@ionic/vue';\nimport { send } from 'ionicons/icons';\nimport { notifications } from \"ionicons/icons\";\nimport { defineComponent, ref } from 'vue';\nimport { useMatrixClient } from '@/stores/MatrixClient.js';\nconst client = useMatrixClient();\nlet content = ref({});\nlet groupId = ref('');\nsetInterval(() => {\n  try {\n    content = client.getChatContent(Object.keys(this.$props.message));\n  } catch (_unused) {\n    return;\n  }\n  console.log('wow');\n}, 2000);\nexport default defineComponent({\n  name: 'ChatModal',\n  components: {\n    IonContent,\n    IonHeader,\n    IonTitle,\n    IonToolbar,\n    IonButtons,\n    IonButton,\n    IonItem,\n    IonLabel,\n    IonInput,\n    IonFooter,\n    modalController,\n    IonCheckbox,\n    IonIcon,\n    IonBadge,\n    IonSearchbar,\n    IonModal,\n    IonCard,\n    IonCardHeader,\n    IonCardSubtitle,\n    IonCardTitle,\n    IonCardContent,\n    IonTextArea\n  },\n  setup() {\n    return {\n      notifications\n    };\n  },\n  data() {\n    return {\n      text: '',\n      content: this.$props.message,\n      send\n    };\n  },\n  props: {\n    message: Object\n  },\n  methods: {\n    close() {\n      return modalController.dismiss(null, 'cancel');\n    },\n    async sendText() {\n      console.log(this.$props.message);\n      client.sendText(this.content.id, this.text);\n      content = await client.getChatContent(Object.keys(this.$props.message));\n      return;\n    },\n    async fetchData() {\n      content = await client.getChatContent(Object.keys(this.$props.message));\n      console.log(content);\n    },\n    sendAndFetch() {\n      this.sendText();\n      this.fetchData();\n    }\n  }\n});","map":{"version":3,"mappings":"AAiDA;AACA,SACEA,UAAU,EACVC,SAAS,EACTC,QAAQ,EACRC,UAAU,EACVC,SAAS,EACTC,UAAU,EACVC,SAAS,EACTC,OAAO,EACPC,QAAQ,EACRC,QAAQ,EACRC,eAAe,EACfC,WAAW,EACXC,OAAO,EACPC,QAAQ,EACRC,YAAY,EACZC,QAAQ,EACRC,OAAO,EACPC,aAAa,EACbC,eAAe,EACfC,YAAY,EACZC,cAAc,EACdC,WAAW,QACN,YAAY;AACnB,SACEC,IAAI,QACC,gBAAgB;AACvB,SAAQC,aAAa,QAAO,gBAAgB;AAC5C,SAAQC,eAAe,EAAEC,GAAG,QAAO,KAAK;AACxC,SAAQC,eAAe,QAAO,0BAA0B;AAExD,MAAMC,MAAK,GAAID,eAAe,EAAC;AAE/B,IAAIE,OAAM,GAAIH,GAAG,CAAC,CAAC,CAAC;AACpB,IAAII,OAAM,GAAIJ,GAAG,CAAC,EAAE;AAGpBK,WAAW,CAAC,MAAM;EAChB,IAAI;IACFF,OAAM,GAAID,MAAM,CAACI,cAAc,CAACC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC;EAClE,EAAE,gBAAM;IACN;EACF;EACAC,OAAO,CAACC,GAAG,CAAC,KAAK;AACnB,CAAC,EAAE,IAAI;AAEP,eAAeb,eAAe,CAAC;EAC7Bc,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE;IACVvC,UAAU;IACVC,SAAS;IACTC,QAAQ;IACRC,UAAU;IACVE,UAAU;IACVC,SAAS;IACTC,OAAO;IACPC,QAAQ;IACRC,QAAQ;IACRL,SAAS;IACTM,eAAe;IACfC,WAAW;IACXC,OAAO;IACPC,QAAQ;IACRC,YAAY;IACZC,QAAQ;IACRC,OAAO;IACPC,aAAa;IACbC,eAAe;IACfC,YAAY;IACZC,cAAc;IACdC;EACF,CAAC;EACDmB,KAAK,GAAG;IACN,OAAO;MACLjB;IACF;EACF,CAAC;EACDkB,IAAI,GAAG;IACL,OAAO;MACLC,IAAI,EAAE,EAAE;MACRd,OAAO,EAAE,IAAI,CAACM,MAAM,CAACC,OAAO;MAC5Bb;IACF,CAAC;EACH,CAAC;EACDqB,KAAK,EAAE;IACLR,OAAO,EAAEH;EACX,CAAC;EACDY,OAAO,EAAE;IACPC,KAAK,GAAG;MACN,OAAOnC,eAAe,CAACoC,OAAO,CAAC,IAAI,EAAE,QAAQ,CAAC;IAChD,CAAC;IACD,MAAMC,QAAQ,GAAG;MACfX,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,MAAM,CAACC,OAAO;MAC/BR,MAAM,CAACoB,QAAQ,CAAC,IAAI,CAACnB,OAAO,CAACoB,EAAE,EAAE,IAAI,CAACN,IAAI;MAC1Cd,OAAM,GAAI,MAAMD,MAAM,CAACI,cAAc,CAACC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC;MACtE;IACF,CAAC;IACD,MAAMc,SAAS,GAAG;MACdrB,OAAM,GAAI,MAAMD,MAAM,CAACI,cAAc,CAACC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC;MACtEC,OAAO,CAACC,GAAG,CAACT,OAAO;IACrB,CAAC;IACHsB,YAAY,GAAG;MACb,IAAI,CAACH,QAAQ,EAAC;MACd,IAAI,CAACE,SAAS,EAAC;IACjB;EACF;AACF,CAAC,CAAC","names":["IonContent","IonHeader","IonTitle","IonToolbar","IonFooter","IonButtons","IonButton","IonItem","IonLabel","IonInput","modalController","IonCheckbox","IonIcon","IonBadge","IonSearchbar","IonModal","IonCard","IonCardHeader","IonCardSubtitle","IonCardTitle","IonCardContent","IonTextArea","send","notifications","defineComponent","ref","useMatrixClient","client","content","groupId","setInterval","getChatContent","Object","keys","$props","message","console","log","name","components","setup","data","text","props","methods","close","dismiss","sendText","id","fetchData","sendAndFetch"],"sourceRoot":"","sources":["/Users/observerzero/Project/Dev/icoo/src/menus/ChatModal.vue"],"sourcesContent":["<template>\n  <IonHeader>\n    <IonToolbar>\n      <IonButtons slot=\"start\">\n        <IonButton @click=\"close\">close</IonButton>\n      </IonButtons>\n      <IonSearchbar></IonSearchbar>\n      <IonButtons slot=\"end\">\n        <IonButton>\n          <IonIcon :icon=\"notifications\" color=\"tertiary\"/>\n          <IonBadge slot=\"end\" color=\"danger\">2</IonBadge>\n        </IonButton>\n      </IonButtons>\n    </IonToolbar>\n  </IonHeader>\n  <IonFooter>\n    <IonToolbar>\n      <IonInput \n        v-model=\"text\" \n        placeholder=\"wtf?\"\n        :clear-on-edit=\"true\"></IonInput>\n      <IonButtons slot=\"end\">\n        <IonButton @click=\"sendAndFetch\">\n          <IonIcon :icon=\"send\" color=\"primary\"/>\n        </IonButton>\n      </IonButtons>\n    </IonToolbar>\n  </IonFooter>\n  <IonContent>\n      <IonCard>\n        <IonCardHeader>\n          {{ content.topic.text }}\n        </IonCardHeader>\n      </IonCard>\n    <div v-for=\"entry in content.content\" v-bind:key=\"entry\">\n      <div v-if=\"entry.type === 'm.room.message'\">\n      <IonCard>\n        <IonCardHeader>\n          {{ entry.sender }}\n        </IonCardHeader>\n\n        <IonCardContent>{{ entry.content.body }}</IonCardContent>\n      </IonCard>\n    </div>\n    </div>\n  </IonContent>\n</template>\n\n<script>\n/* eslint-disable vue/no-unused-components */\nimport {\n  IonContent,\n  IonHeader,\n  IonTitle,\n  IonToolbar,\n  IonFooter,\n  IonButtons,\n  IonButton,\n  IonItem,\n  IonLabel,\n  IonInput,\n  modalController,\n  IonCheckbox,\n  IonIcon,\n  IonBadge,\n  IonSearchbar,\n  IonModal,\n  IonCard,\n  IonCardHeader,\n  IonCardSubtitle,\n  IonCardTitle,\n  IonCardContent,\n  IonTextArea,\n} from '@ionic/vue';\nimport {\n  send,\n} from 'ionicons/icons';\nimport {notifications} from \"ionicons/icons\";\nimport {defineComponent, ref} from 'vue';\nimport {useMatrixClient} from '@/stores/MatrixClient.js';\n\nconst client = useMatrixClient()\n\nlet content = ref({})\nlet groupId = ref('')\n\n\nsetInterval(() => {\n  try {\n    content = client.getChatContent(Object.keys(this.$props.message))\n  } catch {\n    return\n  }\n  console.log('wow')\n}, 2000)\n\nexport default defineComponent({\n  name: 'ChatModal',\n  components: {\n    IonContent,\n    IonHeader,\n    IonTitle,\n    IonToolbar,\n    IonButtons,\n    IonButton,\n    IonItem,\n    IonLabel,\n    IonInput,\n    IonFooter,\n    modalController,\n    IonCheckbox,\n    IonIcon,\n    IonBadge,\n    IonSearchbar,\n    IonModal,\n    IonCard,\n    IonCardHeader,\n    IonCardSubtitle,\n    IonCardTitle,\n    IonCardContent,\n    IonTextArea,\n  },\n  setup() {\n    return {\n      notifications,\n    }\n  },\n  data() {\n    return {\n      text: '',\n      content: this.$props.message,\n      send,\n    };\n  },\n  props: {\n    message: Object,\n  },\n  methods: {\n    close() {\n      return modalController.dismiss(null, 'cancel');\n    },\n    async sendText() {\n      console.log(this.$props.message)\n      client.sendText(this.content.id, this.text)\n      content = await client.getChatContent(Object.keys(this.$props.message))\n      return\n    },\n    async fetchData() {\n        content = await client.getChatContent(Object.keys(this.$props.message))\n        console.log(content)\n      },\n    sendAndFetch() {\n      this.sendText()\n      this.fetchData()\n    }\n  },\n});\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
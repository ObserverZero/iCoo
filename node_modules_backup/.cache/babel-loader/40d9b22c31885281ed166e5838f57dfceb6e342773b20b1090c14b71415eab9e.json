{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ChatItem = _resolveComponent(\"ChatItem\");\n  const _component_IonList = _resolveComponent(\"IonList\");\n  return _openBlock(), _createBlock(_component_IonList, null, {\n    default: _withCtx(() => [_createVNode(_component_ChatItem, {\n      onClick: $options.openModal\n    }, null, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_ChatItem, {\n      onClick: $options.openModal\n    }, null, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_ChatItem, {\n      onClick: $options.openModal\n    }, null, 8 /* PROPS */, [\"onClick\"])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"mappings":";;;;uBACEA,aAIUC;sBAHR,MAA8B,CAA9BC,aAA8BC;MAAnBC,OAAK,EAAEC;IAAS,sCAC3BH,aAA8BC;MAAnBC,OAAK,EAAEC;IAAS,sCAC3BH,aAA8BC;MAAnBC,OAAK,EAAEC;IAAS","names":["_createBlock","_component_IonList","_createVNode","_component_ChatItem","onClick","$options"],"sourceRoot":"","sources":["/Users/observerzero/Project/Dev/icoo/src/components/Group/ChatSpace.vue"],"sourcesContent":["<template>\n  <IonList>\n    <ChatItem @click=\"openModal\"/>\n    <ChatItem @click=\"openModal\"/>\n    <ChatItem @click=\"openModal\"/>\n  </IonList>\n</template>\n\n<script>\n/* eslint-disable vue/no-unused-components */\nimport {\n  IonCard,\n  IonCardHeader,\n  IonCardSubtitle,\n  IonCardTitle,\n  IonIcon,\n  IonCardContent,\n  IonList,\n  IonItem,\n  modalController,\n} from '@ionic/vue';\nimport ChatItem from \"@/components/ChatItem.vue\";\nimport ChatModal from '@/menus/ChatModal.vue';\n\nexport default {\n  name: \"ChatSpace\",\n  setup() {\n    return {}\n  },\n  components: {\n    IonCardSubtitle,\n    IonIcon,\n    IonCard,\n    IonCardHeader,\n    IonCardTitle,\n    IonCardContent,\n    IonItem,\n    IonList,\n    ChatItem\n  },\n  props: {},\n  methods: {\n    async openModal() {\n      const modal = await modalController.create({\n        component: ChatModal,\n        componentProps: {\n          groupId: this.groupId,\n        }\n      });\n      return await modal.present();\n    },\n  }\n}\n\n</script>\n\n<style scoped>\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineStore } from 'pinia';\nimport sdk, { EventType } from 'matrix-js-sdk';\nlet roomNamesAndIdsAsObject = {};\nconst client = sdk.createClient({\n  baseUrl: \"https://matrix.org\",\n  accessToken: \"syt_b2JzZXJ2ZXJ6ZXJv_qbsSNMdGRZpXMsNvXJeX_3OODDh\",\n  userId: \"@observerzero:matrix.org\"\n});\nclient.startClient();\nfunction login() {\n  client.loginWithPassword('username', 'password').then(function () {\n    console.log('Logged in!');\n  });\n}\nfunction getRooms() {\n  const rooms = client.getRooms();\n  console.log(rooms);\n  return rooms;\n}\nfunction getAllRoomNames() {\n  const rooms = getRooms();\n  const roomNames = rooms.map(room => room.name);\n  return roomNames;\n}\nfunction getAllRoomIds() {\n  const rooms = getRooms();\n  const roomIds = rooms.map(room => room.roomId);\n  return roomIds;\n}\nfunction getAllRoomNamesAndIds() {\n  let roomNames = getAllRoomNames();\n  let roomIds = getAllRoomIds();\n  let roomNamesAndIds = [];\n  for (let i = 0; i < roomNames.length; i++) {\n    roomNamesAndIds.push({\n      name: roomNames[i],\n      id: roomIds[i]\n    });\n  }\n  Object.assign(roomNamesAndIdsAsObject, roomNamesAndIds);\n  return roomNamesAndIdsAsObject;\n}\nfunction returnRoomNamesFromRoomObject(rooms) {\n  const roomNames = rooms.map(room => room.name);\n  return roomNames;\n}\nfunction returnRoomIdsFromRoomObject(rooms) {\n  const roomIds = rooms.map(room => room.roomId);\n  return roomIds;\n}\nfunction getGroups() {\n  let rooms = client.getRooms();\n  let roomNames = returnRoomNamesFromRoomObject(rooms);\n  let roomIds = returnRoomIdsFromRoomObject(rooms);\n  let roomNamesAndIds = [];\n  for (let i = 0; i < roomNames.length; i++) {\n    roomNamesAndIds.push({\n      name: roomNames[i],\n      id: roomIds[i]\n    });\n  }\n  Object.assign(roomNamesAndIdsAsObject, roomNamesAndIds);\n  console.log(roomNamesAndIdsAsObject);\n  return roomNamesAndIdsAsObject;\n}\nfunction getAllUsers() {\n  const users = client.getUsers();\n  return users;\n}\n\n//TODO - Add a setter for creating a room\n//TODO - Refactor for returning objects instead of arrays\n//TODO - Add a function to get a room's timeline\n//TODO - Add a function to get a room's type\n\nexport const useMatrixClient = defineStore('matrix-client', {\n  state: () => {\n    return {\n      client: client,\n      getRooms: getRooms,\n      getAllRoomNames: getAllRoomNames,\n      getAllRoomIds: getAllRoomIds,\n      getAllRoomNamesAndIds: getAllRoomNamesAndIds,\n      getGroups: getGroups\n    };\n  },\n  getters: {\n    getRooms: state => () => {\n      return state.getRooms();\n    },\n    getRoomNames: state => () => {\n      return state.getAllRoomNames();\n    },\n    getRoomIds: state => () => {\n      return state.getAllRoomIds();\n    },\n    getRoomNamesAndIds: state => () => {\n      return state.getAllRoomNamesAndIds();\n    },\n    getGroups: state => () => {\n      return state.getGroups();\n    }\n  }\n});","map":{"version":3,"names":["defineStore","sdk","EventType","roomNamesAndIdsAsObject","client","createClient","baseUrl","accessToken","userId","startClient","login","loginWithPassword","then","console","log","getRooms","rooms","getAllRoomNames","roomNames","map","room","name","getAllRoomIds","roomIds","roomId","getAllRoomNamesAndIds","roomNamesAndIds","i","length","push","id","Object","assign","returnRoomNamesFromRoomObject","returnRoomIdsFromRoomObject","getGroups","getAllUsers","users","getUsers","useMatrixClient","state","getters","getRoomNames","getRoomIds","getRoomNamesAndIds"],"sources":["/Users/observerzero/Project/Dev/icoo/src/stores/MatrixClient.js"],"sourcesContent":["import { defineStore } from 'pinia';\nimport sdk, {EventType} from 'matrix-js-sdk';\n\nlet roomNamesAndIdsAsObject = {};\n\nconst client = sdk.createClient({\n  baseUrl: \"https://matrix.org\",\n  accessToken: \"syt_b2JzZXJ2ZXJ6ZXJv_qbsSNMdGRZpXMsNvXJeX_3OODDh\",\n  userId: \"@observerzero:matrix.org\"\n});\n\nclient.startClient();\n\nfunction login() {\n  client.loginWithPassword('username', 'password').then(function() {\n    console.log('Logged in!')\n  })\n}\n\nfunction getRooms() {\n  const rooms = client.getRooms();\n  console.log(rooms);\n  return rooms;\n}\n\nfunction getAllRoomNames() {\n  const rooms = getRooms();\n  const roomNames = rooms.map(room => room.name);\n  return roomNames;\n}\n\nfunction getAllRoomIds() {\n  const rooms = getRooms();\n  const roomIds = rooms.map(room => room.roomId);\n  return roomIds;\n}\n\nfunction getAllRoomNamesAndIds() {\n  let roomNames = getAllRoomNames();\n  let roomIds = getAllRoomIds();\n  let roomNamesAndIds = [];\n  for (let i = 0; i < roomNames.length; i++) {\n    roomNamesAndIds.push({name: roomNames[i], id: roomIds[i]})\n  }\n  Object.assign(roomNamesAndIdsAsObject, roomNamesAndIds)\n  return roomNamesAndIdsAsObject;\n}\n\nfunction returnRoomNamesFromRoomObject(rooms) {\n  const roomNames = rooms.map(room => room.name);\n  return roomNames;\n}\n\nfunction returnRoomIdsFromRoomObject(rooms) {\n  const roomIds = rooms.map(room => room.roomId);\n  return roomIds;\n}\n\nfunction getGroups() {\n  let rooms = client.getRooms();\n  let roomNames = returnRoomNamesFromRoomObject(rooms);\n  let roomIds = returnRoomIdsFromRoomObject(rooms);\n  let roomNamesAndIds = [];\n  for (let i = 0; i < roomNames.length; i++) {\n    roomNamesAndIds.push({name: roomNames[i], id: roomIds[i]})\n  }\n  Object.assign(roomNamesAndIdsAsObject, roomNamesAndIds)\n  console.log(roomNamesAndIdsAsObject);\n  return roomNamesAndIdsAsObject;\n}\n\nfunction getAllUsers() {\n  const users = client.getUsers();\n  return users;\n}\n\n//TODO - Add a setter for creating a room\n//TODO - Refactor for returning objects instead of arrays\n//TODO - Add a function to get a room's timeline\n//TODO - Add a function to get a room's type\n\nexport const useMatrixClient = defineStore('matrix-client', {\n  state: () => {\n    return ({\n      client: client,\n      getRooms: getRooms,\n      getAllRoomNames: getAllRoomNames,\n      getAllRoomIds: getAllRoomIds,\n      getAllRoomNamesAndIds: getAllRoomNamesAndIds,\n      getGroups: getGroups,\n    });\n  },\n  getters: {\n    getRooms: (state) => () => {\n      return state.getRooms();\n    },\n    getRoomNames: (state) => () => {\n      return state.getAllRoomNames();\n    },\n    getRoomIds: (state) => () => {\n      return state.getAllRoomIds();\n    },\n    getRoomNamesAndIds: (state) => () => {\n      return state.getAllRoomNamesAndIds();\n    },\n    getGroups: (state) => () => {\n      return state.getGroups();\n    },\n  }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
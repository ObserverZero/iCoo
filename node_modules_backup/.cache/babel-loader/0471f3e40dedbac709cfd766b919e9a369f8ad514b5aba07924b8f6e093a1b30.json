{"ast":null,"code":"/* eslint-disable vue/no-unused-components */\nimport { defineComponent, ref, reactive } from 'vue';\nimport { IonPage, IonHeader, IonToolbar, IonTitle, IonContent, IonList, modalController, IonButton, IonMenu, IonMenuToggle, IonIcon, IonMenuButton, IonFabButton, IonFabList, IonFab, IonChip, IonItem, IonButtons, IonLabel, IonCard, IonCardHeader, IonSearchbar, IonRefresher, IonRefresherContent, IonSegment, IonSegmentButton } from '@ionic/vue';\nimport { arrowBack, chevronUpCircle, add, menu, close, search, personCircle, addCircle, bulb, caretUp, peopleCircle, chatbox, calendarClear, colorFilter, colorFilterSharp, clipboard } from 'ionicons/icons';\nimport { useMatrixClient } from '../stores/MatrixClient.js';\nimport GroupItem from \"@/components/GroupItem.vue\";\nimport KickstartItem from \"@/components/KickstartItem.vue\";\nimport CreateGroupModal from '@/menus/CreateGroupModal.vue';\nimport { useScroll } from '@vueuse/core';\n\n// TODO: get checkboxes/buttons to filter chats from tools etc\n// TODO: Groups need to be able to migrate members from one group to another\n// TODO: make a function that will resolve the whole address for a group, including all of /tabs/:id\n// TODO: if (document.body.scrollTop < 0) should solve displaying searchbar\n\nconst client = useMatrixClient();\nlet content = reactive({\n  content: 'joined'\n});\nlet view = reactive({\n  value: 'kickstart'\n});\nlet groups = reactive({});\nlet group = reactive({\n  name: '',\n  id: '',\n  topic: '',\n  type: ''\n});\nsetInterval(() => {\n  Object.assign(groups, client.getGroups());\n  console.log(groups);\n  if (Object.keys(groups).length !== 0 && content.content !== 'group') {\n    content.content = 'list';\n  }\n}, 5000);\nexport default defineComponent({\n  name: 'GroupsPage',\n  components: {\n    IonRefresher,\n    IonRefresherContent,\n    GroupItem,\n    IonContent,\n    IonPage,\n    IonList,\n    IonHeader,\n    IonToolbar,\n    IonFab,\n    IonFabButton,\n    IonButtons,\n    IonItem,\n    IonFabList,\n    IonIcon,\n    IonButton,\n    IonTitle,\n    IonSearchbar,\n    IonCard,\n    IonCardHeader,\n    IonSegment,\n    IonSegmentButton,\n    KickstartItem\n  },\n  setup() {\n    return {\n      menu,\n      close,\n      personCircle,\n      search,\n      addCircle,\n      add,\n      bulb,\n      chevronUpCircle,\n      arrowBack,\n      caretUp,\n      peopleCircle,\n      chatbox,\n      colorFilterSharp,\n      clipboard,\n      calendarClear\n    };\n  },\n  data() {\n    return {\n      group: group,\n      groups: groups,\n      content: content,\n      view: view\n    };\n  },\n  methods: {\n    async openModal() {\n      const modal = await modalController.create({\n        component: CreateGroupModal\n      });\n      await modal.present();\n      const {\n        data,\n        role\n      } = await modal.onWillDismiss();\n      if (role === 'confirm') {\n        console.log(\"sure thing\");\n      }\n    },\n    segmentChanged(event) {\n      view.value = event.detail.value;\n      console.log(view.value);\n    }\n  },\n  created() {\n    this.$watch(() => this.$route.params, () => {\n      window.scroll(0, 50);\n      Object.assign(groups, client.getGroups());\n      if (Object.keys(groups).length !== 0 && content.content !== 'group') {\n        content.content = 'list';\n      }\n    },\n    // fetch the data when the view is created and the data is\n    // already being observed\n    {\n      immediate: true\n    });\n  }\n});","map":{"version":3,"mappings":"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","names":["defineComponent","ref","reactive","IonPage","IonHeader","IonToolbar","IonTitle","IonContent","IonList","modalController","IonButton","IonMenu","IonMenuToggle","IonIcon","IonMenuButton","IonFabButton","IonFabList","IonFab","IonChip","IonItem","IonButtons","IonLabel","IonCard","IonCardHeader","IonSearchbar","IonRefresher","IonRefresherContent","IonSegment","IonSegmentButton","arrowBack","chevronUpCircle","add","menu","close","search","personCircle","addCircle","bulb","caretUp","peopleCircle","chatbox","calendarClear","colorFilter","colorFilterSharp","clipboard","useMatrixClient","GroupItem","KickstartItem","CreateGroupModal","useScroll","client","content","view","value","groups","group","name","id","topic","type","setInterval","Object","assign","getGroups","console","log","keys","length","components","setup","data","methods","openModal","modal","create","component","present","role","onWillDismiss","segmentChanged","event","detail","created","$watch","$route","params","window","scroll","immediate"],"sourceRoot":"","sources":["/Users/observerzero/Project/Dev/icoo/src/views/Groups.vue"],"sourcesContent":["<template>\n  <IonPage>\n    <IonHeader>\n      <p style=\"padding-top: 1.4em;\"/>\n    </IonHeader>\n    <IonContent\n      ref=\"stuff\"\n      :scroll-events=\"true\">\n      <IonItem>\n        <IonSegment\n            value=\"kickstart\"\n            @ionChange=\"segmentChanged($event)\"\n            v-model=\"view.value\">\n          <IonSegmentButton value=\"joined\">\n            Joined\n          </IonSegmentButton>\n          <IonSegmentButton value=\"invites\">\n            Invites\n          </IonSegmentButton>\n          <IonSegmentButton value=\"Discover\">\n            Discover\n          </IonSegmentButton>\n          <IonSegmentButton value=\"kickstart\">\n            Kickstart\n          </IonSegmentButton>\n        </IonSegment>\n      </IonItem>\n      <div v-if=\"view.value == 'joined'\">\n        <div v-for=\"(value, name) in groups\" :key=\"name\">\n          <div v-if=\"value.type === 'm.space'\n                  && value.name !== 'internal_groups'\n                  && value.name !== 'board'\n                  && value.name !== 'groups'\n                  && value.name !== 'chat'\n                  && value.name !== 'searchable'\">\n            <GroupItem\n                :name=\"value.name\"\n                :id=\"value.id\"\n                :topic=\"value.topic.text\"\n                :handle=\"value.handle\"\n                :href=\"value.href\"\n                :banner=\"value.topic.banner\"/>\n          </div>\n        </div>\n      </div>\n      <div v-else-if=\"view.value == 'kickstart'\">\n      <IonItem>\n        <IonIcon :icon=\"menu\"/>\n      </IonItem>\n        <KickstartItem\n          name=\"Permaculture Sognsvann\"\n          id=\"nope\"\n          topic=\"Starting a permaculture project at Sognsvann. \n                 Need people who know their shit.\"\n          handle=\"permakultursognsvann\"\n          href=\"something\"\n          banner=\"farm\"/>\n        <KickstartItem\n          name=\"Plastic Recycling Grünerløkka\"\n          id=\"yope\"\n          topic=\"Cutting up plastic and melting the shit. \n                 Need people who like the smell of burning ethylene.\"\n          handle=\"recyclegrunerlokka\"\n          href=\"something\"\n          banner=\"factory\"/>\n      </div>\n    </IonContent>\n    <IonFab slot=\"fixed\" vertical=\"bottom\" horizontal=\"end\">\n      <IonFabButton @click=\"openModal\" color=\"dark\">\n        <IonIcon :icon=\"add\"></IonIcon>\n      </IonFabButton>\n    </IonFab>\n  </IonPage>\n</template>\n\n<script>\n/* eslint-disable vue/no-unused-components */\nimport {defineComponent, ref, reactive} from 'vue';\nimport {\n  IonPage,\n  IonHeader,\n  IonToolbar,\n  IonTitle,\n  IonContent,\n  IonList,\n  modalController,\n  IonButton,\n  IonMenu,\n  IonMenuToggle,\n  IonIcon,\n  IonMenuButton,\n  IonFabButton,\n  IonFabList,\n  IonFab,\n  IonChip,\n  IonItem,\n  IonButtons,\n  IonLabel,\n  IonCard,\n  IonCardHeader,\n  IonSearchbar,\n  IonRefresher,\n  IonRefresherContent,\n  IonSegment,\n  IonSegmentButton,\n} from '@ionic/vue';\nimport {\n  arrowBack,\n  chevronUpCircle,\n  add,\n  menu,\n  close,\n  search,\n  personCircle,\n  addCircle,\n  bulb,\n  caretUp,\n  peopleCircle,\n  chatbox,\n  calendarClear,\n  colorFilter,\n  colorFilterSharp,\n  clipboard,\n} from 'ionicons/icons';\nimport {useMatrixClient} from '../stores/MatrixClient.js';\nimport GroupItem from \"@/components/GroupItem.vue\";\nimport KickstartItem from \"@/components/KickstartItem.vue\";\nimport CreateGroupModal from '@/menus/CreateGroupModal.vue';\nimport { useScroll } from '@vueuse/core'\n\n// TODO: get checkboxes/buttons to filter chats from tools etc\n// TODO: Groups need to be able to migrate members from one group to another\n// TODO: make a function that will resolve the whole address for a group, including all of /tabs/:id\n// TODO: if (document.body.scrollTop < 0) should solve displaying searchbar\n\nconst client = useMatrixClient()\n\nlet content = reactive({content: 'joined'})\nlet view = reactive({value: 'kickstart'})\nlet groups = reactive({})\nlet group = reactive({\n  name: '',\n  id: '',\n  topic: '',\n  type: '',\n})\n\nsetInterval(() => {\n  Object.assign(groups, client.getGroups())\n  console.log(groups)\n  if (Object.keys(groups).length !== 0 && content.content !== 'group') {\n    content.content = 'list'\n  }\n}, 5000)\n\nexport default defineComponent({\n  name: 'GroupsPage',\n  components: {\n    IonRefresher,\n    IonRefresherContent,\n    GroupItem,\n    IonContent,\n    IonPage,\n    IonList,\n    IonHeader,\n    IonToolbar,\n    IonFab,\n    IonFabButton,\n    IonButtons,\n    IonItem,\n    IonFabList,\n    IonIcon,\n    IonButton,\n    IonTitle,\n    IonSearchbar,\n    IonCard,\n    IonCardHeader,\n    IonSegment,\n    IonSegmentButton,\n    KickstartItem,\n  },\n  setup() {\n    return {\n      menu,\n      close,\n      personCircle,\n      search,\n      addCircle,\n      add,\n      bulb,\n      chevronUpCircle,\n      arrowBack,\n      caretUp,\n      peopleCircle,\n      chatbox,\n      colorFilterSharp,\n      clipboard,\n      calendarClear,\n    }\n  },\n  data() {\n    return {\n      group: group,\n      groups: groups,\n      content: content,\n      view: view,\n    }\n  },\n  methods: {\n    async openModal() {\n      const modal = await modalController.create({\n        component: CreateGroupModal,\n      });\n      await modal.present();\n\n      const {data, role} = await modal.onWillDismiss();\n\n      if (role === 'confirm') {\n        console.log(\"sure thing\")\n      }\n    },\n    segmentChanged(event) {\n      view.value = event.detail.value;\n      console.log(view.value)\n    },\n  },\n  created() {\n    this.$watch(\n      () => this.$route.params,\n      () => {\n        window.scroll(0, 50)\n        Object.assign(groups, client.getGroups())\n        if (Object.keys(groups).length !== 0 && content.content !== 'group') {\n          content.content = 'list'\n        }\n      },\n      // fetch the data when the view is created and the data is\n      // already being observed\n      { immediate: true }\n    )\n  },\n});\n</script>\n\n<style scoped>\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
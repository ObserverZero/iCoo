{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache) {\n  const _component_IonButton = _resolveComponent(\"IonButton\");\n  return _openBlock(), _createBlock(_component_IonButton, {\n    onClick: _ctx.openModal\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" wow \")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]);\n}","map":{"version":3,"mappings":";;;uBACEA,aAEYC;IAFAC,OAAK,EAAEC;EAAS;sBAAE,MAE9B,kBAF8B,OAE9B","names":["_createBlock","_component_IonButton","onClick","_ctx"],"sourceRoot":"","sources":["/Users/observerzero/Project/Dev/icoo/src/views/helpers/OpenModal.vue"],"sourcesContent":["<template>\n  <IonButton @click=\"openModal\">\n    wow\n  </IonButton>\n</template>\n\n<script>\nimport { IonButton} from \"@ionic/vue\";\nimport {modalController} from \"@ionic/vue\";\nimport Modal from \"@/menus/Modal.vue\";\n\nasync function openModal() {\n    const modal = await modalController.create({\n      component: Modal,\n    });\n    await modal.present();\n\n    const {data, role} = await modal.onWillDismiss();\n\n    if (role === 'confirm') {\n      console.log(\"sure thing\")\n    }\n  }\n}\n\nexport default {\n  name: \"OpenModal\"\n  data() {\n    return {\n      openModal\n    }\n  },\n  components: {\n    IonButton\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
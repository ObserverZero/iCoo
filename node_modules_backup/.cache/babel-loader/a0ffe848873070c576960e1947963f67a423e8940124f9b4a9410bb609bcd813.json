{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { defineStore } from 'pinia';\nimport sdk, { EventType } from 'matrix-js-sdk';\nimport { convertCompilerOptionsFromJson } from 'typescript';\nconst loginCreds = {\n  accessToken: process.env.VUE_APP_TOKEN,\n  userId: process.env.VUE_APP_NAME,\n  baseUrl: 'http://localhost:8008'\n};\nconst client = sdk.createClient({\n  baseUrl: loginCreds.baseUrl,\n  accessToken: loginCreds.accessToken,\n  userId: loginCreds.userId\n});\nconst localClient = sdk.createClient({\n  baseUrl: loginCreds.baseUrl\n});\nclient.startClient();\nfunction createUser(username, password) {\n  // TODO: Add a room for the user that handles additional user information, such as hashtags, description, images,\n  // TODO - friends lists, following, memberships, etc.\n}\nfunction getHandleFromUserId() {\n  return loginCreds.userId.replace(/:.*/, '');\n}\nfunction getHandleFromRoomId(id) {\n  return id.replace(/:.*/, '');\n}\nfunction login() {\n  client.loginWithPassword(process.env.VUE_APP_ID, process.env.VUE_APP_PASS).then(() => {\n    console.log('Logged in!');\n  });\n}\nfunction getIdentifiedListOfGroups(ids) {\n  Object.entries(ids => {\n    console.log(ids.id);\n  });\n}\nasync function getAllUsers() {\n  let users = client.getUsers();\n  return users;\n}\n\n// GETTERS\n\nfunction getRoomTopicFromRoomObject(room) {\n  let topic = room.currentState.getStateEvents('m.room.topic', '');\n  try {\n    return JSON.parse(topic.event.content.topic);\n  } catch (error) {\n    console.log(error);\n    if (topic == String) return topic;\n    return \"We do nothing!\";\n  }\n}\nfunction getRoomType(roomId) {\n  let room = client.getRoom(roomId);\n  let type = room.currentState.getStateEvents('m.room.create', '');\n  try {\n    return type.event.content.type;\n  } catch (error) {\n    return 'no type for you!!';\n  }\n}\nfunction getRoomName(room) {\n  let roomName = room.name;\n  return roomName;\n}\nfunction returnRoomNamesFromRoomObject(rooms) {\n  const roomNames = rooms.map(room => room.name);\n  return roomNames;\n}\nfunction returnRoomIdsFromRoomObject(rooms) {\n  const roomIds = rooms.map(room => room.roomId);\n  return roomIds;\n}\nfunction returnRoomTypeFromRoomObject(rooms) {\n  const roomTypes = rooms.map(room => getRoomType(room.id));\n}\nasync function getRoomById(roomId) {\n  try {\n    let room = await client.getRoom(roomId);\n    const name = room.name;\n    const topic = getRoomTopicFromRoomObject(room);\n    const group = {\n      name: name,\n      topic: topic\n    };\n    return group;\n  } catch (error) {\n    return;\n  }\n}\nfunction updateChat(roomId) {\n  let room = client.getRoom(roomId);\n  let creator = room.currentState.getStateEvents('m.room.create', '');\n  let idAndTopicObject = {\n    id: roomId,\n    creator: creator.event.content.creator.replace(/:.*/, ''),\n    topic: getRoomTopicFromRoomObject(room),\n    content: getRoomTimeline(roomId)\n  };\n  return idAndTopicObject;\n}\nexport async function getOwnProfile() {\n  let responseFromServer = await client.getProfileInfo(loginCreds.userId);\n  responseFromServer.handle = getHandleFromUserId();\n  responseFromServer.displayname = JSON.parse(responseFromServer.displayname);\n  console.log(responseFromServer);\n  return responseFromServer;\n}\nasync function getTimeline(roomId) {\n  return client.roomInitialSync(roomId, 1000);\n}\nfunction getRoomTimeline(roomId) {\n  let room = client.getRoom(roomId);\n  let messageArray = [];\n  room.timeline.forEach(t => {\n    messageArray.push(t.event);\n  });\n  return messageArray;\n}\nfunction getChildrenIds(spaceId) {\n  const space = client.getRoom(spaceId);\n  let childrenMap;\n  try {\n    childrenMap = space.currentState.events.get('m.space.child');\n  } catch (_unused) {\n    return [];\n  }\n  let childrenIdArray = Array.from(childrenMap.keys());\n  console.log(childrenIdArray);\n  return childrenIdArray;\n}\nfunction getChildren(spaceId) {\n  let ids = getChildrenIds(spaceId);\n  let roomObjects = [];\n  ids.forEach(id => {\n    roomObjects.push(client.getRoom(id));\n  });\n  console.log(roomObjects);\n  return roomObjects;\n}\nfunction getGroupContent(groupId) {\n  let content = {};\n  let groups = getChildren(groupId);\n  let name;\n  let id;\n  let children;\n  let idAndTopicObject = {};\n  console.log(groups.length);\n  groups.forEach(child => {\n    if (child != null) {\n      name = child.name;\n      id = child.roomId;\n      console.log(name);\n      try {\n        children = getChildren(id);\n        console.log(name);\n      } catch (_unused2) {\n        console.log('no children');\n        return;\n      }\n      idAndTopicObject = {};\n      content[name] = {};\n      console.log(children);\n      children.forEach(item => {\n        let creator = item.currentState.getStateEvents('m.room.create', '');\n        console.log(creator);\n        try {\n          idAndTopicObject[item.roomId] = {\n            id: item.roomId,\n            creator: creator.event.content.creator.replace(/:.*/, ''),\n            topic: getRoomTopicFromRoomObject(item),\n            content: getRoomTimeline(item.roomId)\n          };\n        } catch (_unused3) {\n          console.log('whatever');\n        }\n      });\n      content[name] = {\n        id: id,\n        children: idAndTopicObject\n      };\n    }\n  });\n  console.log(content);\n  return content;\n}\nfunction getChatContent(groupId) {\n  let content = getGroupContent(groupId);\n  return content.chat;\n}\nfunction getSubgroupContent(groupId) {\n  let content = getGroupContent(groupId);\n  return content.groups;\n}\nfunction getBoardContent(groupId) {\n  let content = getGroupContent(groupId);\n  return content.board;\n}\nfunction produceHrefAddressesForGroups(rooms) {\n  const roomIds = rooms.map(room => {\n    let id = room.roomId.replace(/:.*/, '');\n    id = id.replace(/!/, '');\n    id = \"/tabs/group/\" + id;\n    return id;\n  });\n  // roomIds.forEach(roomId => console.log(roomId))\n  return roomIds;\n}\nfunction getGroups() {\n  let rooms = client.getRooms();\n  let roomNamesAndIdsAsObject = {};\n  let roomNames = returnRoomNamesFromRoomObject(rooms);\n  let roomIds = returnRoomIdsFromRoomObject(rooms);\n  let hrefs = produceHrefAddressesForGroups(rooms);\n  let roomHandles = roomIds.map(roomId => getHandleFromRoomId(roomId));\n  let roomTopics = rooms.map(room => getRoomTopicFromRoomObject(room));\n  let roomTypes = roomIds.map(roomId => getRoomType(roomId));\n  let roomProduct = [];\n  for (let i = 0; i < roomNames.length; i++) {\n    roomProduct.push({\n      name: roomNames[i],\n      id: roomIds[i],\n      topic: roomTopics[i],\n      type: roomTypes[i],\n      handle: roomHandles[i],\n      href: hrefs[i]\n    });\n  }\n  Object.assign(roomNamesAndIdsAsObject, roomProduct);\n  return roomNamesAndIdsAsObject;\n}\n\n// SETTERS\n\nfunction createSubSpace(parentSpaceId, subSpaceName, subSpaceTopic, roomId) {\n  client.sendStateEvent(roomId, 'm.space.parent', {\n    via: ['home.parecon.work'],\n    state_key: parentSpaceId,\n    canonical: true\n  });\n  return;\n}\nasync function joinRoomSearchable() {\n  let room = await client.joinRoom('#searchable:home.parecon.work');\n  return room;\n}\nasync function createSpace(groupName, topic, publicorprivate) {\n  let returnValue = await client.createRoom({\n    name: groupName,\n    visibility: 'public',\n    topic: topic,\n    creation_content: {\n      type: 'm.space'\n    },\n    power_lever_content: {\n      \"users\": {\n        creator_id: 100\n      },\n      \"users_default\": 100\n    }\n  }).then(response => {\n    console.log(`Room created: ${response.room_id}`);\n    return response.room_id;\n  }).catch(error => {\n    console.error(`Error creating room: ${error}`);\n  });\n  return returnValue;\n}\nasync function createRoom(roomName, topic) {\n  let returnValue = await client.createRoom({\n    name: roomName,\n    visibility: 'public',\n    topic: topic,\n    power_lever_content: {\n      \"users\": {\n        creator_id: 100\n      },\n      \"users_default\": 100\n    }\n  }).then(response => {\n    console.log(`Room created: ${response.room_id}`);\n    return response.room_id;\n  }).catch(error => {\n    console.error(`Error creating room: ${error}`);\n  });\n  return returnValue;\n}\nasync function createPost(chatSpaceId, topic) {\n  let newRoom = await createRoom(\"post\", topic);\n  assignChild(chatSpaceId, newRoom);\n  assignParent(newRoom, chatSpaceId);\n  return;\n}\nfunction assignChild(parentSpaceId, childSpaceId) {\n  client.sendStateEvent(parentSpaceId, 'm.space.child', {\n    via: ['home.parecon.work']\n  }, childSpaceId).then(error => {\n    console.log(error);\n  });\n  console.log(\"assigned child\");\n}\nfunction assignParent(childSpaceId, parentSpaceId) {\n  client.sendStateEvent(childSpaceId, 'm.space.parent', {\n    canonical: true,\n    via: ['home.parecon.work']\n  }, parentSpaceId);\n  console.log(\"assigned parent\");\n}\nasync function assignParentAndChild(parentSpaceId, childSpaceId) {\n  assignChild(parentSpaceId, childSpaceId);\n  assignParent(childSpaceId, parentSpaceId);\n  return true;\n}\nasync function createRealGroup(groupName, topic) {\n  let mainSpaceId = await createSpace(groupName, '{\"text\": \"' + topic + '\", \"banner\": \"group\"}');\n  let chatSpaceId = await createSpace(\"chat\", '{\"text\": \"chat\", \"banner\": \"group\"}');\n  let boardSpaceId = await createSpace(\"board\", '{\"text\": \"board\", \"banner\": \"group\"}');\n  let calendarSpaceId = await createSpace(\"groups\", '{\"text\": \"groups\", \"banner\": \"group\"}');\n  assignParentAndChild(mainSpaceId, chatSpaceId).then(() => {\n    assignParentAndChild(mainSpaceId, boardSpaceId).then(() => {\n      assignParentAndChild(mainSpaceId, calendarSpaceId);\n    });\n  });\n  return mainSpaceId;\n}\nasync function createSubGroup(groupName, topic, parentGroupSpaceId) {\n  let mainSpaceId = await createRealGroup(groupName, topic);\n  assignParentAndChild(parentGroupSpaceId, mainSpaceId);\n  return;\n}\nfunction joinGroup(groupId) {\n  client.joinRoom(groupId).then(response => {\n    // meh\n  }).catch(error => {\n    // meh\n  });\n}\nasync function getRoomState() {\n  let shortlist = [];\n  let shortlistObject = {};\n  let response = await client.roomState(\"!OGEhHVWSdvArJzumhm:matrix.org\").then(response => {\n    for (let i = 0; i < 100; i++) {\n      shortlist.push(response[i]);\n      Object.assign(shortlistObject, shortlist);\n    }\n    return shortlistObject;\n  });\n  return response;\n}\nasync function checkIfSearchable() {\n  let room = await client.roomState('!ZTKcfJhyKdTvMbfPpD:home.parecon.work');\n  console.log(room);\n}\nasync function getMessages(roomId) {\n  client.initialSync(roomId).then(response => {\n    const timeline = response.timeline;\n    // Do something with the timeline, such as render it in a chat interface\n  }).catch(error => {\n    console.error(`Error fetching initial sync for room ${roomId}: ${error}`);\n  });\n}\nfunction sendMessage(roomId, message) {\n  const content = {\n    body: \"A hobbit trying to scale mount everest\",\n    msgtype: \"m.text\"\n  };\n  client.sendEvent(\"roomId\", \"m.room.message\", content, \"\", (err, res) => {\n    console.log(err);\n  });\n}\nfunction updateTimeline(roomId) {\n  //client.on(\"Room.timeline\", function (event, room, toStartOfTimeline) {\n  //  if (toStartOfTimeline) {\n  //    var messageToAppend = room.timeline[room.timeline.length - 1]\n  //    return messageToAppend\n  //  }\n  //})\n  client.on(\"Room.timeline\", function (event, room, toStartOfTimeline) {\n    if (event.getType() !== \"m.room.message\") {\n      return; // only use messages\n    }\n  });\n}\n\nasync function getMembersOfRoom(roomId) {\n  let room = await client.getRoom(roomId);\n  let members = room.getMembers();\n  return members;\n}\nfunction sendText(roomId, text) {\n  client.sendTextMessage(roomId, text);\n}\nfunction accountData() {\n  return client.getAccountData();\n}\n\n// TODO - Add a getter to get a room's timeline\n// TODO - Get a filter to get a group's associated groups\n// TODO -\n// TODO: Ranking functionality of group membership to curate what appears on top\n// TODO - of the list on group profile. Use the \"suggested\" value of space children\n// TODO - to determine whether the rooms are considered important. Canonical parent\n// TODO - is also useful\n\nexport const useMatrixClient = defineStore('matrix-client', {\n  state: () => {\n    return {\n      client,\n      getGroups,\n      getOwnProfile,\n      getMembersOfRoom,\n      getChildrenIds,\n      getChildren,\n      getRoomById,\n      getRoomTimeline,\n      getGroupContent,\n      getChatContent,\n      getSubgroupContent,\n      getMessages,\n      login,\n      sendText,\n      accountData,\n      assignParent,\n      assignChild,\n      createRealGroup,\n      updateChat,\n      getTimeline,\n      createPost,\n      createSubGroup,\n      joinRoomSearchable,\n      getAllUsers\n    };\n  },\n  getters: {\n    getRooms: state => () => {\n      return state.getRooms();\n    },\n    updateTimeline: state => () => {\n      return updateTimeline();\n    },\n    getRoomState: state => () => {\n      return getRoomState();\n    }\n  },\n  setters: {\n    login: state => () => {\n      return state.login();\n    }\n  }\n});","map":{"version":3,"names":["defineStore","sdk","EventType","convertCompilerOptionsFromJson","loginCreds","accessToken","process","env","VUE_APP_TOKEN","userId","VUE_APP_NAME","baseUrl","client","createClient","localClient","startClient","createUser","username","password","getHandleFromUserId","replace","getHandleFromRoomId","id","login","loginWithPassword","VUE_APP_ID","VUE_APP_PASS","then","console","log","getIdentifiedListOfGroups","ids","Object","entries","getAllUsers","users","getUsers","getRoomTopicFromRoomObject","room","topic","currentState","getStateEvents","JSON","parse","event","content","error","String","getRoomType","roomId","getRoom","type","getRoomName","roomName","name","returnRoomNamesFromRoomObject","rooms","roomNames","map","returnRoomIdsFromRoomObject","roomIds","returnRoomTypeFromRoomObject","roomTypes","getRoomById","group","updateChat","creator","idAndTopicObject","getRoomTimeline","getOwnProfile","responseFromServer","getProfileInfo","handle","displayname","getTimeline","roomInitialSync","messageArray","timeline","forEach","t","push","getChildrenIds","spaceId","space","childrenMap","events","get","childrenIdArray","Array","from","keys","getChildren","roomObjects","getGroupContent","groupId","groups","children","length","child","item","getChatContent","chat","getSubgroupContent","getBoardContent","board","produceHrefAddressesForGroups","getGroups","getRooms","roomNamesAndIdsAsObject","hrefs","roomHandles","roomTopics","roomProduct","i","href","assign","createSubSpace","parentSpaceId","subSpaceName","subSpaceTopic","sendStateEvent","via","state_key","canonical","joinRoomSearchable","joinRoom","createSpace","groupName","publicorprivate","returnValue","createRoom","visibility","creation_content","power_lever_content","creator_id","response","room_id","catch","createPost","chatSpaceId","newRoom","assignChild","assignParent","childSpaceId","assignParentAndChild","createRealGroup","mainSpaceId","boardSpaceId","calendarSpaceId","createSubGroup","parentGroupSpaceId","joinGroup","getRoomState","shortlist","shortlistObject","roomState","checkIfSearchable","getMessages","initialSync","sendMessage","message","body","msgtype","sendEvent","err","res","updateTimeline","on","toStartOfTimeline","getType","getMembersOfRoom","members","getMembers","sendText","text","sendTextMessage","accountData","getAccountData","useMatrixClient","state","getters","setters"],"sources":["/Users/observerzero/Project/Dev/icoo/src/stores/MatrixClient.js"],"sourcesContent":["import {defineStore} from 'pinia'\nimport sdk, {EventType} from 'matrix-js-sdk'\nimport { convertCompilerOptionsFromJson } from 'typescript'\n\nconst loginCreds = {\n  accessToken: process.env.VUE_APP_TOKEN,\n  userId: process.env.VUE_APP_NAME,\n  baseUrl: 'http://localhost:8008'\n}\n\nconst client = sdk.createClient({\n  baseUrl: loginCreds.baseUrl,\n  accessToken: loginCreds.accessToken,\n  userId: loginCreds.userId,\n})\n\nconst localClient = sdk.createClient({\n  baseUrl: loginCreds.baseUrl,\n})\n\nclient.startClient()\n\nfunction createUser(username, password) {\n  // TODO: Add a room for the user that handles additional user information, such as hashtags, description, images,\n  // TODO - friends lists, following, memberships, etc.\n}\n\nfunction getHandleFromUserId() {\n  return loginCreds.userId.replace(/:.*/, '')\n}\n\nfunction getHandleFromRoomId(id) {\n  return id.replace(/:.*/, '')\n}\n\nfunction login() {\n  client.loginWithPassword(process.env.VUE_APP_ID, process.env.VUE_APP_PASS).then(() => {\n    console.log('Logged in!')\n  })\n}\n\nfunction getIdentifiedListOfGroups(ids) {\n  Object.entries(ids => {\n    console.log(ids.id)\n  })\n}\n\nasync function getAllUsers() {\n  let users = client.getUsers()\n  return users\n}\n\n// GETTERS\n\nfunction getRoomTopicFromRoomObject(room) {\n  let topic = room.currentState.getStateEvents('m.room.topic', '')\n  try {\n    return JSON.parse(topic.event.content.topic)\n  } catch (error) {\n    console.log(error)\n    if (topic == String)\n      return topic\n    return \"We do nothing!\"\n  }\n}\n\nfunction getRoomType(roomId) {\n  let room = client.getRoom(roomId)\n  let type = room.currentState.getStateEvents('m.room.create', '')\n  try {\n    return type.event.content.type\n  } catch (error) {\n    return 'no type for you!!'\n  }\n}\n\nfunction getRoomName(room) {\n  let roomName = room.name\n  return roomName\n}\n\nfunction returnRoomNamesFromRoomObject(rooms) {\n  const roomNames = rooms.map(room => room.name)\n  return roomNames\n}\n\nfunction returnRoomIdsFromRoomObject(rooms) {\n  const roomIds = rooms.map(room => room.roomId)\n  return roomIds\n}\n\nfunction returnRoomTypeFromRoomObject(rooms) {\n  const roomTypes = rooms.map(room => getRoomType(room.id))\n}\n\nasync function getRoomById(roomId) {\n  try {\n    let room = await client.getRoom(roomId)\n    const name = room.name\n    const topic = getRoomTopicFromRoomObject(room)\n    const group = {\n      name: name,\n      topic: topic,\n    }\n    return group\n  } catch (error) {\n    return\n  }\n}\n\nfunction updateChat(roomId) {\n  let room = client.getRoom(roomId)\n  let creator = room.currentState.getStateEvents('m.room.create', '')\n  let idAndTopicObject = {\n    id: roomId,\n    creator: creator.event.content.creator.replace(/:.*/, ''),\n    topic: getRoomTopicFromRoomObject(room),\n    content: getRoomTimeline(roomId),\n  }\n  return idAndTopicObject\n}\n\nexport async function getOwnProfile() {\n  let responseFromServer = await client.getProfileInfo(loginCreds.userId)\n  responseFromServer.handle = getHandleFromUserId()\n  responseFromServer.displayname = JSON.parse(responseFromServer.displayname)\n  console.log(responseFromServer)\n  return responseFromServer\n}\n\nasync function getTimeline(roomId) {\n  return client.roomInitialSync(roomId, 1000)\n}\n\nfunction getRoomTimeline(roomId) {\n  let room = client.getRoom(roomId)\n  let messageArray = []\n  room.timeline.forEach(t => {\n    messageArray.push(t.event)\n  });\n  return messageArray\n}\n\nfunction getChildrenIds(spaceId) {\n  const space = client.getRoom(spaceId)\n  let childrenMap\n  try {\n    childrenMap = space.currentState.events.get('m.space.child')\n  } catch {\n    return []\n  }\n  let childrenIdArray = Array.from( childrenMap.keys() )\n  console.log(childrenIdArray)\n  return childrenIdArray\n}\n\nfunction getChildren(spaceId) {\n  let ids = getChildrenIds(spaceId)\n  let roomObjects = []\n  ids.forEach(id => {\n    roomObjects.push(client.getRoom(id))\n  })\n  console.log(roomObjects)\n  return roomObjects\n}\n\nfunction getGroupContent(groupId) {\n  let content = {}\n  let groups = getChildren(groupId)\n  let name\n  let id\n  let children\n  let idAndTopicObject = {}\n  console.log(groups.length)\n  groups.forEach(child => {\n    if (child != null) {\n      name = child.name\n      id = child.roomId\n      console.log(name)\n      try {\n        children = getChildren(id)\n        console.log(name)\n      } catch {\n        console.log('no children')\n        return\n      }\n      idAndTopicObject = {}\n      content[name] = {}\n      console.log(children)\n      children.forEach(item => {\n        let creator = item.currentState.getStateEvents('m.room.create', '')\n        console.log(creator)\n        try {\n          idAndTopicObject[item.roomId] = {\n            id: item.roomId,\n            creator: creator.event.content.creator.replace(/:.*/, ''),\n            topic: getRoomTopicFromRoomObject(item),\n            content: getRoomTimeline(item.roomId),\n          }\n        } catch {\n          console.log('whatever')\n        }\n      })\n      content[name] = {\n        id: id,\n        children: idAndTopicObject,\n      }\n    }\n  })\n  console.log(content)\n  return content\n}\n\nfunction getChatContent(groupId) {\n  let content = getGroupContent(groupId)\n  return content.chat\n}\n\nfunction getSubgroupContent(groupId) {\n  let content = getGroupContent(groupId)\n  return content.groups\n}\n\nfunction getBoardContent(groupId) {\n  let content = getGroupContent(groupId)\n  return content.board\n}\n\nfunction produceHrefAddressesForGroups(rooms) {\n  const roomIds = rooms.map(room => {\n    let id = room.roomId.replace(/:.*/, '')\n    id = id.replace(/!/, '')\n    id = \"/tabs/group/\" + id\n    return id\n  })\n  // roomIds.forEach(roomId => console.log(roomId))\n  return roomIds\n}\n\nfunction getGroups() {\n  let rooms = client.getRooms()\n  let roomNamesAndIdsAsObject = {}\n  let roomNames = returnRoomNamesFromRoomObject(rooms)\n  let roomIds = returnRoomIdsFromRoomObject(rooms)\n  let hrefs = produceHrefAddressesForGroups(rooms)\n  let roomHandles = roomIds.map(roomId => getHandleFromRoomId(roomId))\n  let roomTopics = rooms.map(room => getRoomTopicFromRoomObject(room))\n  let roomTypes = roomIds.map(roomId => getRoomType(roomId))\n  let roomProduct = []\n  for (let i = 0; i < roomNames.length; i++) {\n    roomProduct.push({\n      name: roomNames[i],\n      id: roomIds[i],\n      topic: roomTopics[i],\n      type: roomTypes[i],\n      handle: roomHandles[i],\n      href: hrefs[i],\n    })\n  }\n  Object.assign(roomNamesAndIdsAsObject, roomProduct)\n  return roomNamesAndIdsAsObject\n}\n\n// SETTERS\n\nfunction createSubSpace(parentSpaceId, subSpaceName, subSpaceTopic, roomId) {\n  client.sendStateEvent(roomId, 'm.space.parent', {\n    via: ['home.parecon.work'],\n    state_key: parentSpaceId,\n    canonical: true,\n  })\n  return\n}\n\nasync function joinRoomSearchable() {\n  let room = await client.joinRoom('#searchable:home.parecon.work')\n  return room\n}\n\nasync function createSpace(groupName, topic, publicorprivate) {\n  let returnValue = await client.createRoom({\n    name: groupName,\n    visibility: 'public',\n    topic: topic,\n    creation_content: {\n      type: 'm.space',\n    },\n    power_lever_content: {\n      \"users\": {creator_id: 100},\n      \"users_default\": 100,\n    }\n  }).then((response) => {\n    console.log(`Room created: ${response.room_id}`)\n    return response.room_id\n  }).catch((error) => {\n    console.error(`Error creating room: ${error}`)\n  })\n  return returnValue\n}\n\nasync function createRoom(roomName, topic) {\n  let returnValue = await client.createRoom({\n    name: roomName,\n    visibility: 'public',\n    topic: topic,\n    power_lever_content: {\n      \"users\": {creator_id: 100},\n      \"users_default\": 100,\n    }\n  }).then((response) => {\n    console.log(`Room created: ${response.room_id}`)\n    return response.room_id\n  }).catch((error) => {\n    console.error(`Error creating room: ${error}`)\n  })\n  return returnValue\n}\n\nasync function createPost(chatSpaceId, topic) {\n  let newRoom = await createRoom(\"post\", topic)\n  assignChild(chatSpaceId, newRoom)\n  assignParent(newRoom, chatSpaceId)\n  return\n}\n\nfunction assignChild(parentSpaceId, childSpaceId) {\n  client.sendStateEvent(parentSpaceId, 'm.space.child', {\n    via: ['home.parecon.work'],\n  }, childSpaceId).then((error) => {\n    console.log(error)})\n  console.log(\"assigned child\")\n}\n\nfunction assignParent(childSpaceId, parentSpaceId) {\n  client.sendStateEvent(childSpaceId, 'm.space.parent', {\n    canonical: true,\n    via: ['home.parecon.work'],\n  }, parentSpaceId)\n  console.log(\"assigned parent\")\n}\n\nasync function assignParentAndChild(parentSpaceId, childSpaceId) {\n  assignChild(parentSpaceId, childSpaceId)\n  assignParent(childSpaceId, parentSpaceId)\n  return true\n}\n\nasync function createRealGroup(groupName, topic) {\n  let mainSpaceId = await createSpace(groupName, '{\"text\": \"' + topic + '\", \"banner\": \"group\"}')\n  let chatSpaceId = await createSpace(\"chat\", '{\"text\": \"chat\", \"banner\": \"group\"}')\n  let boardSpaceId = await createSpace(\"board\", '{\"text\": \"board\", \"banner\": \"group\"}')\n  let calendarSpaceId = await createSpace(\"groups\", '{\"text\": \"groups\", \"banner\": \"group\"}')\n  assignParentAndChild(mainSpaceId, chatSpaceId).then(() => {\n    assignParentAndChild(mainSpaceId, boardSpaceId).then(() => {\n      assignParentAndChild(mainSpaceId, calendarSpaceId)\n    })\n  })\n  return mainSpaceId\n}\n\nasync function createSubGroup(groupName, topic, parentGroupSpaceId) {\n  let mainSpaceId = await createRealGroup(groupName, topic)\n  assignParentAndChild(parentGroupSpaceId, mainSpaceId)\n  return\n}\n\nfunction joinGroup(groupId) {\n  client.joinRoom(groupId).then((response) => {\n    // meh\n  }).catch((error) => {\n    // meh\n  })\n}\n\nasync function getRoomState() {\n  let shortlist = []\n  let shortlistObject = {}\n  let response = await client.roomState(\"!OGEhHVWSdvArJzumhm:matrix.org\")\n    .then((response) => {\n      for (let i = 0; i < 100; i++) {\n        shortlist.push(response[i])\n        Object.assign(shortlistObject, shortlist)\n      }\n      return shortlistObject\n    })\n  return response\n}\n\nasync function checkIfSearchable() {\n  let room = await client.roomState('!ZTKcfJhyKdTvMbfPpD:home.parecon.work')\n  console.log(room)\n}\n\nasync function getMessages(roomId) {\n  client.initialSync(roomId).then((response) => {\n    const timeline = response.timeline;\n    // Do something with the timeline, such as render it in a chat interface\n  }).catch((error) => {\n    console.error(`Error fetching initial sync for room ${roomId}: ${error}`);\n  })\n}\n\nfunction sendMessage(roomId, message) {\n  const content = {\n    body: \"A hobbit trying to scale mount everest\",\n    msgtype: \"m.text\",\n  }\n  client.sendEvent(\"roomId\", \"m.room.message\", content, \"\", (err, res) => {\n    console.log(err)\n  })\n}\n\nfunction updateTimeline(roomId) {\n  //client.on(\"Room.timeline\", function (event, room, toStartOfTimeline) {\n  //  if (toStartOfTimeline) {\n  //    var messageToAppend = room.timeline[room.timeline.length - 1]\n  //    return messageToAppend\n  //  }\n  //})\n  client.on(\"Room.timeline\", function (event, room, toStartOfTimeline) {\n    if (event.getType() !== \"m.room.message\") {\n      return; // only use messages\n    }\n})\n}\n\nasync function getMembersOfRoom(roomId) {\n  let room = await client.getRoom(roomId)\n  let members = room.getMembers()\n  return members\n}\n\nfunction sendText(roomId, text) {\n  client.sendTextMessage(roomId, text)\n}\n\nfunction accountData() {\n  return client.getAccountData()\n}\n\n// TODO - Add a getter to get a room's timeline\n// TODO - Get a filter to get a group's associated groups\n// TODO -\n// TODO: Ranking functionality of group membership to curate what appears on top\n// TODO - of the list on group profile. Use the \"suggested\" value of space children\n// TODO - to determine whether the rooms are considered important. Canonical parent\n// TODO - is also useful\n\nexport const useMatrixClient = defineStore('matrix-client', {\n  state: () => {\n    return ({\n      client,\n      getGroups,\n      getOwnProfile,\n      getMembersOfRoom,\n      getChildrenIds,\n      getChildren,\n      getRoomById,\n      getRoomTimeline,\n      getGroupContent,\n      getChatContent,\n      getSubgroupContent,\n      getMessages,\n      login,\n      sendText,\n      accountData,\n      assignParent,\n      assignChild,\n      createRealGroup,\n      updateChat,\n      getTimeline,\n      createPost,\n      createSubGroup,\n      joinRoomSearchable,\n      getAllUsers,\n    })\n  },\n  getters: {\n    getRooms: (state) => () => {\n      return state.getRooms()\n    },\n    updateTimeline: (state) => () => {\n      return updateTimeline()\n    },\n    getRoomState: (state) => () => {\n      return getRoomState()\n    },\n  },\n  setters: {\n    login: (state) => () => {\n      return state.login()\n    }\n  }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
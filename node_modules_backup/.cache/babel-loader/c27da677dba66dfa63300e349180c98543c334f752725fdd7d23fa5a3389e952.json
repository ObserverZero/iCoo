{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_IonCardTitle = _resolveComponent(\"IonCardTitle\");\n  const _component_IonCardSubtitle = _resolveComponent(\"IonCardSubtitle\");\n  const _component_IonCardContent = _resolveComponent(\"IonCardContent\");\n  const _component_IonCardHeader = _resolveComponent(\"IonCardHeader\");\n  const _component_IonCard = _resolveComponent(\"IonCard\");\n  return _openBlock(), _createBlock(_component_IonCard, null, {\n    default: _withCtx(() => [$props.topic.banner != Object ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"img\", {\n      alt: \"hacker factory\",\n      src: $options.getImgUrl($props.banner)\n    }, null, 8 /* PROPS */, _hoisted_2)])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_IonCardHeader, null, {\n      default: _withCtx(() => [_createVNode(_component_IonCardTitle, null, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($props.name), 1 /* TEXT */)]),\n\n        _: 1 /* STABLE */\n      }), _createVNode(_component_IonCardSubtitle, null, {\n        default: _withCtx(() => [_createTextVNode(\"&\" + _toDisplayString($props.handle), 1 /* TEXT */)]),\n\n        _: 1 /* STABLE */\n      }), _createVNode(_component_IonCardContent, null, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($props.topic), 1 /* TEXT */)]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"mappings":";;;;;;;;;;;uBACEA,aASUC;sBARR,MAEM,CAFKC,YAAK,CAACC,MAAM,IAAIC,MAAM,kBAAjCC,oBAEM,oBADJC,oBAAoD;MAA/CC,GAAG,EAAC,gBAAgB;MAAEC,GAAG,EAAEC,kBAAS,CAACP,aAAM;gFAElDQ,aAIgBC;wBAHd,MAAuC,CAAvCD,aAAuCE;0BAAzB,MAAU,mCAAPV,WAAI;;;UACrBQ,aAAgDG;0BAA/B,MAAC,kBAAD,GAAC,oBAAGX,aAAM;;;UAC3BQ,aAA4CI;0BAA5B,MAAW,mCAARZ,YAAK","names":["_createBlock","_component_IonCard","$props","banner","Object","_createElementBlock","_createElementVNode","alt","src","$options","_createVNode","_component_IonCardHeader","_component_IonCardTitle","_component_IonCardSubtitle","_component_IonCardContent"],"sourceRoot":"","sources":["/Users/observerzero/Project/Dev/icoo/src/components/GroupItem.vue"],"sourcesContent":["<template @click=\"onClick\">\n  <IonCard>\n    <div v-if=\"topic.banner != Object\">\n      <img alt=\"hacker factory\" :src=\"getImgUrl(banner)\"/>\n    </div>\n    <IonCardHeader>\n      <IonCardTitle>{{ name }}</IonCardTitle>\n      <IonCardSubtitle>&{{ handle }}</IonCardSubtitle>\n      <IonCardContent>{{ topic }}</IonCardContent>\n    </IonCardHeader>\n  </IonCard>\n</template>\n\n<script>\n/* eslint-disable vue/no-unused-components */\nimport {\n  IonCard,\n  IonCardHeader,\n  IonCardSubtitle,\n  IonCardTitle,\n  IonIcon,\n  IonCardContent,\n} from '@ionic/vue';\nimport {defineComponent, ref} from 'vue'\nimport {planet} from 'ionicons/icons';\n\nlet content = ref('')\n\n\nexport default {\n  name: \"GroupItem\",\n  setup() {\n    return {\n      planet,\n    }\n  },\n  data() {\n    return {\n      banner: \"../../public/assets/banners/\" + this.topic.banner + \".png\"\n    }\n  },\n  components: {IonCardSubtitle, IonIcon, IonCard, IonCardHeader, IonCardTitle, IonCardContent},\n  props: {\n    name: String,\n    id: String,\n    topic: String,\n    handle: String,\n    banner: String,\n  },\n  methods: {\n    onClick() {\n      this.$emit('wow!!!!!', this.id)\n    },\n    showContents() {\n      setInterval(() => {\n        console.log(this.topic)\n        console.log(\"wut\")\n      }, 1000)\n    },\n    getImgUrl(bannerName) {\n      var images = require.context('../../public/assets/banners', false, /\\.png$/)\n      return images('./' + bannerName + \".png\")\n    },\n  }\n}\n\n</script>\n\n<style scoped>\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
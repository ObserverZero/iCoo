{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nimport _imports_0 from '../../public/assets/banners/hacker_soft_colors.png';\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"img\", {\n  alt: \"Person\",\n  src: _imports_0\n}, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_IonAvatar = _resolveComponent(\"IonAvatar\");\n  const _component_IonLabel = _resolveComponent(\"IonLabel\");\n  const _component_IonItem = _resolveComponent(\"IonItem\");\n  const _component_IonCardHeader = _resolveComponent(\"IonCardHeader\");\n  const _component_IonCardContent = _resolveComponent(\"IonCardContent\");\n  const _component_IonCard = _resolveComponent(\"IonCard\");\n  return _openBlock(), _createBlock(_component_IonCard, null, {\n    default: _withCtx(() => [_createVNode(_component_IonCardHeader, null, {\n      default: _withCtx(() => [_createVNode(_component_IonItem, {\n        href: \"/tabs/profile\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_IonAvatar, null, {\n          default: _withCtx(() => [_hoisted_1]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_IonLabel, {\n          style: {\n            \"margin-left\": \"1em\"\n          }\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString($props.message.creator), 1 /* TEXT */)]),\n\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_IonCardContent, {\n      onClick: _cache[0] || (_cache[0] = $event => $options.openModal($props.message))\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($props.message.topic.text), 1 /* TEXT */)]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"mappings":";OAK4BA,UAAwD;gCAA1EC,oBAA4E;EAAvEC,GAAG,EAAC,QAAQ;EAACC,GAAwD,EAAxDH;;;;;;;;;;uBAJ1BI,aAaUC;sBAZR,MASgB,CAThBC,aASgBC;wBARd,MAOU,CAPVD,aAOUE;QAPDC,IAAI,EAAC;MAAe;0BAC3B,MAEY,CAFZH,aAEYI;4BADV,MAA4E,CAA5EC,UAA4E;;YAE9EL,aAEWM;UAFDC,KAAyB,EAAzB;YAAA;UAAA;QAAyB;4BACjC,MAAqB,mCAAlBC,cAAO,CAACC,OAAO;;;;;;;;;QAIxBT,aAAqFU;MAApEC,OAAK,sCAAEC,kBAAS,CAACJ,cAAO;;wBAAG,MAAwB,mCAArBA,cAAO,CAACK,KAAK,CAACC,IAAI","names":["_imports_0","_createElementVNode","alt","src","_createBlock","_component_IonCard","_createVNode","_component_IonCardHeader","_component_IonItem","href","_component_IonAvatar","_hoisted_1","_component_IonLabel","style","$props","creator","_component_IonCardContent","onClick","$options","topic","text"],"sourceRoot":"","sources":["/Users/observerzero/Project/Dev/icoo/src/components/ChatItem.vue"],"sourcesContent":["<template>\n  <IonCard>\n    <IonCardHeader>\n      <IonItem href=\"/tabs/profile\">\n        <IonAvatar>\n          <img alt=\"Person\" src=\"../../public/assets/banners/hacker_soft_colors.png\"/>\n        </IonAvatar>\n        <IonLabel style=\"margin-left: 1em;\">\n          {{ message.creator }}\n        </IonLabel>\n      </IonItem>\n    </IonCardHeader>\n    <IonCardContent @click=\"openModal(message)\">{{ message.topic.text }}</IonCardContent>\n    \n  </IonCard>\n</template>\n\n<script>\n/* eslint-disable vue/no-unused-components */\nimport {\n  IonItem,\n  IonCardHeader,\n  IonCardContent,\n  IonList,\n  IonButton,\n  IonButtons,\n  IonCardTitle,\n  IonChip,\n  IonAvatar, \n  IonCard, \n  IonLabel,\n  modalController,\n  IonModal,\n} from '@ionic/vue';\n\nimport {defineComponent, reactive, ref} from 'vue';\nimport { useMatrixClient } from \"@/stores/MatrixClient\";\nimport {useCrossPage} from \"@/stores/CrossPageUpdates\";\nimport Modal from \"@/menus/Modal.vue\";\nimport ChatModal from \"@/menus/ChatModal.vue\";\n\nlet client = useMatrixClient();\nlet crossPage = useCrossPage();\n\nlet content = ref({})\nlet chats = ref({})\nlet timeline = ref({})\n\nexport default {\n  name: \"ChatItem\",\n  data() {\n    return {\n    }\n  },\n  props: {\n    message: Object,\n  },\n  components: {\n    IonCardContent,\n    IonAvatar,\n    IonItem,\n    IonCard,\n    IonLabel,\n    IonCardHeader,\n    modalController,\n    IonChip,\n  },\n  methods: {\n    cancel() {\n      this.$refs.modal.$el.dismiss(null, 'cancel');\n    },\n    confirm() {\n      const name = this.$refs.input.$el.value;\n      this.$refs.modal.$el.dismiss(name, 'confirm');\n    },\n    onWillDismiss(ev) {\n      if (ev.detail.role === 'confirm') {\n        return\n      }\n    },\n\n    async openModal(topic) {\n      let thaTopic = topic;\n      thaTopic.creator = topic.creator.replace(/:.*/, '');\n      const modal = await modalController.create({\n        component: ChatModal,\n        componentProps: {\n          message: thaTopic,\n        }\n      });\n      await modal.present();\n\n      const {data, role} = await modal.onWillDismiss();\n\n      if (role === 'confirm') {\n        console.log(\"sure thing\")\n      }\n    },\n\n    async fetchData() {\n      const id = \"!\" + this.$route.params.id + \":matrix.org\";\n      setInterval(async () => {\n        try {\n          content = await client.getChatContent(Object.keys(this.thaTopic))\n        } catch {\n          return\n        }\n      }, 2000);\n    },\n  },\n  created() {\n    this.$watch(\n      () => this.$route.params,\n      () => {\n        const id = \"!\" + this.$route.params.id + \":matrix.org\";\n        this.fetchData()\n      },\n      // fetch the data when the view is created and the data is\n      // already being observed\n      { immediate: true }\n    )\n  },\n}\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
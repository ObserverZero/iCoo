{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_IonCardTitle = _resolveComponent(\"IonCardTitle\");\n  const _component_IonCardContent = _resolveComponent(\"IonCardContent\");\n  const _component_IonCardHeader = _resolveComponent(\"IonCardHeader\");\n  const _component_IonCard = _resolveComponent(\"IonCard\");\n  return _openBlock(), _createBlock(_component_IonCard, null, {\n    default: _withCtx(() => [_createVNode(_component_IonCardHeader, null, {\n      default: _withCtx(() => [_createVNode(_component_IonCardTitle, null, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($props.profile.displayName), 1 /* TEXT */)]),\n\n        _: 1 /* STABLE */\n      }), _createVNode(_component_IonCardContent)]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"mappings":";;;;;;uBACEA,aAKUC;sBAJR,MAGgB,CAHhBC,aAGgBC;wBAFd,MAAsD,CAAtDD,aAAsDE;0BAAxC,MAAyB,mCAAtBC,cAAO,CAACC,WAAW;;;UACpCJ,aAAiCK","names":["_createBlock","_component_IonCard","_createVNode","_component_IonCardHeader","_component_IonCardTitle","$props","displayName","_component_IonCardContent"],"sourceRoot":"","sources":["/Users/observerzero/Project/Dev/icoo/src/components/ProfileItem.vue"],"sourcesContent":["<template>\n  <IonCard>\n    <IonCardHeader>\n      <IonCardTitle>{{ profile.displayName }}</IonCardTitle>\n      <IonCardContent></IonCardContent>\n    </IonCardHeader>\n  </IonCard>\n</template>\n\n<script>\nimport {\n  IonCard,\n  IonCardHeader,\n  IonCardSubtitle,\n  IonCardTitle,\n} from '@ionic/vue';\n\nexport default {\n  name: \"GroupItem\",\n  components: {IonCard, IonCardHeader, IonCardTitle,},\n  props: {\n    profile: Object,\n  },\n  methods: {\n    showMeTheProfileName() {\n      console.log(this.$props.profile.displayName)\n    }\n  },\n  created() {\n    this.$watch(\n      () => {\n        setInterval(() => {\n          this.showMeTheProfileName()\n        }, 5000)\n      },\n      // fetch the data when the view is created and the data is\n      // already being observed\n      { immediate: true }\n    )\n  },\n}\n</script>\n\n<style scoped>\n\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
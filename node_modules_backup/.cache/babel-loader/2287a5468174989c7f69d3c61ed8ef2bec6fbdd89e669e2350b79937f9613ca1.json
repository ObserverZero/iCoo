{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { defineStore } from 'pinia';\nimport sdk, { EventType } from 'matrix-js-sdk';\nconst loginCreds = {\n  accessToken: \"syt_b2JzZXJ2ZXJ6ZXJv_qbsSNMdGRZpXMsNvXJeX_3OODDh\",\n  userId: \"@observerzero:matrix.org\",\n  baseUrl: 'https://matrix.org'\n};\nconst client = sdk.createClient({\n  baseUrl: loginCreds.baseUrl,\n  accessToken: loginCreds.accessToken,\n  userId: loginCreds.userId\n});\nfunction createUser(username, password) {\n  // TODO: Add a room for the user that handles additional user information, such as hashtags, description, images,\n  // TODO - friends lists, following, memberships, etc.\n}\nfunction getHandleFromUserId() {\n  return loginCreds.userId.replace(/:.*/, '');\n}\nfunction getHandleFromRoomId(id) {\n  return id.replace(/:.*/, '');\n}\nclient.startClient();\nfunction login() {\n  client.loginWithPassword('username', 'password').then(function () {\n    console.log('Logged in!');\n  });\n}\nfunction getIdentifiedListOfGroups(ids) {\n  Object.entries(ids => {\n    console.log(ids.id);\n  });\n}\n\n// GETTERS\n\nfunction getRoomTopic(roomId) {\n  let room = client.getRoom(roomId);\n  let topic = room.currentState.getStateEvents('m.room.topic', '');\n  try {\n    return topic.event.content.topic;\n  } catch (error) {\n    return 'We do nothing!';\n  }\n}\nfunction getRoomType(roomId) {\n  let room = client.getRoom(roomId);\n  let type = room.currentState.getStateEvents('m.room.create', '');\n  try {\n    return type.event.content.type;\n  } catch (error) {\n    return 'no type for you!!';\n  }\n}\nfunction returnRoomNamesFromRoomObject(rooms) {\n  const roomNames = rooms.map(room => room.name);\n  return roomNames;\n}\nfunction returnRoomIdsFromRoomObject(rooms) {\n  const roomIds = rooms.map(room => room.roomId);\n  return roomIds;\n}\nfunction returnRoomTypeFromRoomObject(rooms) {\n  const roomTypes = rooms.map(room => getRoomType(room.id));\n}\nfunction getRoomById(roomId) {\n  const room = client.getRoom(roomId);\n  const name = room.name;\n  const topic = getRoomTopic(roomId);\n  const group = {\n    name: name,\n    topic: topic\n  };\n  return group;\n}\nfunction isParent() {\n  return;\n}\nfunction isChild() {\n  return;\n}\nasync function getOwnProfile() {\n  let responseFromServer = await client.getProfileInfo(loginCreds.userId);\n  responseFromServer.handle = getHandleFromUserId();\n  return responseFromServer;\n}\nfunction returnIdOfChildrenInSpace(spaceId) {\n  let space = client.getRoom(spaceId);\n  let childrenMap = space.relations.room.currentState.events;\n  let arrayOfChildrenIds = [];\n  let arrayOfChildrenIdsAsObject = {};\n  for (let [key, value] of childrenMap) {\n    if (key === 'm.space.child') {\n      value.forEach((item, yep) => {\n        arrayOfChildrenIds.push(yep);\n      });\n    }\n  }\n  Object.assign(arrayOfChildrenIdsAsObject, arrayOfChildrenIds);\n  // console.log(JSON.stringify(arrayOfChildrenIdsAsObject) + 'is the list')\n  console.log(getIdentifiedListOfGroups(arrayOfChildrenIdsAsObject));\n  return arrayOfChildrenIdsAsObject;\n}\nfunction produceHrefAddressesForGroups(rooms) {\n  const roomIds = rooms.map(room => {\n    let id = room.roomId.replace(/:.*/, '');\n    id = id.replace(/!/, '');\n    id = \"/tabs/group/\" + id;\n    return id;\n  });\n  roomIds.forEach(roomId => console.log(roomId));\n  return roomIds;\n}\nfunction getGroups() {\n  let rooms = client.getRooms();\n  let roomNamesAndIdsAsObject = {};\n  let roomNames = returnRoomNamesFromRoomObject(rooms);\n  let roomIds = returnRoomIdsFromRoomObject(rooms);\n  let hrefs = produceHrefAddressesForGroups(rooms);\n  let roomHandles = roomIds.map(roomId => getHandleFromRoomId(roomId));\n  let roomTopics = roomIds.map(roomId => getRoomTopic(roomId));\n  let roomTypes = roomIds.map(roomId => getRoomType(roomId));\n  let roomProduct = [];\n  for (let i = 0; i < roomNames.length; i++) {\n    roomProduct.push({\n      name: roomNames[i],\n      id: roomIds[i],\n      topic: roomTopics[i],\n      type: roomTypes[i],\n      handle: roomHandles[i],\n      href: hrefs[i]\n    });\n  }\n  Object.assign(roomNamesAndIdsAsObject, roomProduct);\n  console.log(rooms);\n  return roomNamesAndIdsAsObject;\n}\n\n// SETTERS\n\n// TODO: add type for space or room\nfunction createGroup(groupName, topic, type) {\n  client.createRoom({\n    name: groupName,\n    visibility: 'private',\n    topic: topic,\n    creation_content: {\n      type: 'm.space'\n    }\n  }).then(response => {\n    console.log(type);\n    console.log(`Room created: ${response.room_id}`);\n    //client.sendStateEvent(response.room_id, 'm.room.create', {room_type: 'm.space'})\n  }).catch(error => {\n    console.error(`Error creating room: ${error}`);\n  });\n}\nfunction createRealGroup(groupName, topic, type) {\n  // TODO: add rooms that identify group as parent and canonical parent, and add child identifier on the space.\n  // TODO - power levels will hopefully isolate the rooms as necessary to the space.\n}\nfunction joinGroup(groupId) {\n  client.joinRoom(groupId).then(response => {\n    console.log(`Joined room: ${response.room_id}`);\n  }).catch(error => {\n    console.error(`Error joining room: ${error}`);\n  });\n}\nasync function getRoomState() {\n  let shortlist = [];\n  let shortlistObject = {};\n  let response = await client.roomState(\"!OGEhHVWSdvArJzumhm:matrix.org\").then(response => {\n    for (let i = 0; i < 100; i++) {\n      shortlist.push(response[i].sender);\n      Object.assign(shortlistObject, shortlist);\n    }\n    return shortlistObject;\n  });\n  // console.log(response)\n  return response;\n}\nfunction sendMessage(roomId, message) {\n  const content = {\n    body: \"A hobbit trying to scale mount everest\",\n    msgtype: \"m.text\"\n  };\n  client.sendEvent(\"roomId\", \"m.room.message\", content, \"\", (err, res) => {\n    console.log(err);\n  });\n}\nfunction updateTimeline(roomId) {\n  client.on(\"Room.timeline\", function (event, room, toStartOfTimeline) {\n    if (toStartOfTimeline) {\n      var messageToAppend = room.timeline[room.timeline.length - 1];\n      console.log(messageToAppend);\n      console.log(\"wow\");\n    }\n  });\n}\nasync function getMembersOfRoom(roomId) {\n  let room = await client.getRoom(roomId);\n  let members = room.getMembers();\n  console.log(members);\n  return members;\n}\n\n// TODO - Add a getter to get a room's timeline\n// TODO - Get a filter to get a group's associated groups\n// TODO -\n// TODO: Ranking functionality of group membership to curate what appears on top\n// TODO - of the list on group profile. Use the \"suggested\" value of space children\n// TODO - to determine whether the rooms are considered important. Canonical parent\n// TODO - is also useful\n\nexport const useMatrixClient = defineStore('matrix-client', {\n  state: () => {\n    return {\n      client,\n      getGroups,\n      getOwnProfile,\n      createGroup,\n      getMembersOfRoom,\n      returnIdOfChildrenInSpace,\n      getRoomById,\n      login\n    };\n  },\n  getters: {\n    getRooms: state => () => {\n      return state.getRooms();\n    },\n    updateTimeline: state => () => {\n      return updateTimeline();\n    },\n    getRoomState: state => () => {\n      return getRoomState();\n    }\n  },\n  setters: {\n    createGroup: state => groupName => {\n      return state.createGroup(groupName);\n    },\n    login: state => () => {\n      return state.login();\n    }\n  }\n});","map":{"version":3,"names":["defineStore","sdk","EventType","loginCreds","accessToken","userId","baseUrl","client","createClient","createUser","username","password","getHandleFromUserId","replace","getHandleFromRoomId","id","startClient","login","loginWithPassword","then","console","log","getIdentifiedListOfGroups","ids","Object","entries","getRoomTopic","roomId","room","getRoom","topic","currentState","getStateEvents","event","content","error","getRoomType","type","returnRoomNamesFromRoomObject","rooms","roomNames","map","name","returnRoomIdsFromRoomObject","roomIds","returnRoomTypeFromRoomObject","roomTypes","getRoomById","group","isParent","isChild","getOwnProfile","responseFromServer","getProfileInfo","handle","returnIdOfChildrenInSpace","spaceId","space","childrenMap","relations","events","arrayOfChildrenIds","arrayOfChildrenIdsAsObject","key","value","forEach","item","yep","push","assign","produceHrefAddressesForGroups","getGroups","getRooms","roomNamesAndIdsAsObject","hrefs","roomHandles","roomTopics","roomProduct","i","length","href","createGroup","groupName","createRoom","visibility","creation_content","response","room_id","catch","createRealGroup","joinGroup","groupId","joinRoom","getRoomState","shortlist","shortlistObject","roomState","sender","sendMessage","message","body","msgtype","sendEvent","err","res","updateTimeline","on","toStartOfTimeline","messageToAppend","timeline","getMembersOfRoom","members","getMembers","useMatrixClient","state","getters","setters"],"sources":["/Users/observerzero/Project/Dev/icoo/src/stores/MatrixClient.js"],"sourcesContent":["import {defineStore} from 'pinia'\nimport sdk, {EventType} from 'matrix-js-sdk'\n\nconst loginCreds = {\n  accessToken: \"syt_b2JzZXJ2ZXJ6ZXJv_qbsSNMdGRZpXMsNvXJeX_3OODDh\",\n  userId: \"@observerzero:matrix.org\",\n  baseUrl: 'https://matrix.org'\n}\nconst client = sdk.createClient({\n  baseUrl: loginCreds.baseUrl,\n  accessToken: loginCreds.accessToken,\n  userId: loginCreds.userId,\n})\n\nfunction createUser(username, password) {\n  // TODO: Add a room for the user that handles additional user information, such as hashtags, description, images,\n  // TODO - friends lists, following, memberships, etc.\n}\n\nfunction getHandleFromUserId() {\n  return loginCreds.userId.replace(/:.*/, '')\n}\n\nfunction getHandleFromRoomId(id) {\n  return id.replace(/:.*/, '')\n}\n\nclient.startClient()\n\nfunction login() {\n  client.loginWithPassword('username', 'password').then(function () {\n    console.log('Logged in!')\n  })\n}\n\nfunction getIdentifiedListOfGroups(ids) {\n  Object.entries(ids => {\n    console.log(ids.id)\n  })\n}\n\n// GETTERS\n\nfunction getRoomTopic(roomId) {\n  let room = client.getRoom(roomId)\n  let topic = room.currentState.getStateEvents('m.room.topic', '')\n  try {\n    return topic.event.content.topic\n  } catch (error) {\n    return 'We do nothing!'\n  }\n}\n\nfunction getRoomType(roomId) {\n  let room = client.getRoom(roomId)\n  let type = room.currentState.getStateEvents('m.room.create', '')\n  try {\n    return type.event.content.type\n  } catch (error) {\n    return 'no type for you!!'\n  }\n}\n\nfunction returnRoomNamesFromRoomObject(rooms) {\n  const roomNames = rooms.map(room => room.name)\n  return roomNames\n}\n\nfunction returnRoomIdsFromRoomObject(rooms) {\n  const roomIds = rooms.map(room => room.roomId)\n  return roomIds\n}\n\nfunction returnRoomTypeFromRoomObject(rooms) {\n  const roomTypes = rooms.map(room => getRoomType(room.id))\n}\n\nfunction getRoomById(roomId) {\n  const room = client.getRoom(roomId)\n  const name = room.name\n  const topic = getRoomTopic(roomId)\n  const group = {\n    name: name,\n    topic: topic,\n  }\n  return group\n}\n\nfunction isParent() {\n  return\n}\n\nfunction isChild() {\n  return\n}\n\nasync function getOwnProfile() {\n  let responseFromServer = await client.getProfileInfo(loginCreds.userId)\n  responseFromServer.handle = getHandleFromUserId()\n  return responseFromServer\n}\n\nfunction returnIdOfChildrenInSpace(spaceId) {\n  let space = client.getRoom(spaceId)\n  let childrenMap = space.relations.room.currentState.events\n  let arrayOfChildrenIds = []\n  let arrayOfChildrenIdsAsObject = {}\n  for (let [key, value] of childrenMap) {\n    if (key === 'm.space.child') {\n      value.forEach((item, yep) => {\n        arrayOfChildrenIds.push(yep)\n      })\n    }\n  }\n  Object.assign(arrayOfChildrenIdsAsObject, arrayOfChildrenIds)\n  // console.log(JSON.stringify(arrayOfChildrenIdsAsObject) + 'is the list')\n  console.log(getIdentifiedListOfGroups(arrayOfChildrenIdsAsObject))\n  return arrayOfChildrenIdsAsObject\n}\n\nfunction produceHrefAddressesForGroups(rooms) {\n  const roomIds = rooms.map(room => {\n    let id = room.roomId.replace(/:.*/, '')\n    id = id.replace(/!/, '')\n    id = \"/tabs/group/\" + id\n    return id\n  })\n  roomIds.forEach(roomId => console.log(roomId))\n  return roomIds\n}\n\nfunction getGroups() {\n  let rooms = client.getRooms()\n  let roomNamesAndIdsAsObject = {}\n  let roomNames = returnRoomNamesFromRoomObject(rooms)\n  let roomIds = returnRoomIdsFromRoomObject(rooms)\n  let hrefs = produceHrefAddressesForGroups(rooms)\n  let roomHandles = roomIds.map(roomId => getHandleFromRoomId(roomId))\n  let roomTopics = roomIds.map(roomId => getRoomTopic(roomId))\n  let roomTypes = roomIds.map(roomId => getRoomType(roomId))\n  let roomProduct = []\n  for (let i = 0; i < roomNames.length; i++) {\n    roomProduct.push({\n      name: roomNames[i],\n      id: roomIds[i],\n      topic: roomTopics[i],\n      type: roomTypes[i],\n      handle: roomHandles[i],\n      href: hrefs[i],\n    })\n  }\n  Object.assign(roomNamesAndIdsAsObject, roomProduct)\n  console.log(rooms)\n  return roomNamesAndIdsAsObject\n}\n\n// SETTERS\n\n// TODO: add type for space or room\nfunction createGroup(groupName, topic, type) {\n  client.createRoom({\n    name: groupName,\n    visibility: 'private',\n    topic: topic,\n    creation_content: {\n      type: 'm.space',\n    }\n  }).then((response) => {\n    console.log(type)\n    console.log(`Room created: ${response.room_id}`)\n    //client.sendStateEvent(response.room_id, 'm.room.create', {room_type: 'm.space'})\n  }).catch((error) => {\n    console.error(`Error creating room: ${error}`)\n  })\n}\n\nfunction createRealGroup(groupName, topic, type) {\n  // TODO: add rooms that identify group as parent and canonical parent, and add child identifier on the space.\n  // TODO - power levels will hopefully isolate the rooms as necessary to the space.\n}\n\nfunction joinGroup(groupId) {\n  client.joinRoom(groupId).then((response) => {\n    console.log(`Joined room: ${response.room_id}`)\n  }).catch((error) => {\n    console.error(`Error joining room: ${error}`)\n  })\n}\n\nasync function getRoomState() {\n  let shortlist = []\n  let shortlistObject = {}\n  let response = await client.roomState(\"!OGEhHVWSdvArJzumhm:matrix.org\").then((response) => {\n    for (let i = 0; i < 100; i++) {\n      shortlist.push(response[i].sender)\n      Object.assign(shortlistObject, shortlist)\n    }\n    return shortlistObject\n  })\n  // console.log(response)\n  return response\n}\n\nfunction sendMessage(roomId, message) {\n  const content = {\n    body: \"A hobbit trying to scale mount everest\",\n    msgtype: \"m.text\",\n  }\n  client.sendEvent(\"roomId\", \"m.room.message\", content, \"\", (err, res) => {\n    console.log(err)\n  })\n}\n\nfunction updateTimeline(roomId) {\n  client.on(\"Room.timeline\", function (event, room, toStartOfTimeline) {\n    if (toStartOfTimeline) {\n      var messageToAppend = room.timeline[room.timeline.length - 1]\n      console.log(messageToAppend)\n      console.log(\"wow\")\n    }\n  })\n}\n\nasync function getMembersOfRoom(roomId) {\n  let room = await client.getRoom(roomId)\n  let members = room.getMembers()\n  console.log(members)\n  return members\n}\n\n// TODO - Add a getter to get a room's timeline\n// TODO - Get a filter to get a group's associated groups\n// TODO -\n// TODO: Ranking functionality of group membership to curate what appears on top\n// TODO - of the list on group profile. Use the \"suggested\" value of space children\n// TODO - to determine whether the rooms are considered important. Canonical parent\n// TODO - is also useful\n\nexport const useMatrixClient = defineStore('matrix-client', {\n  state: () => {\n    return ({\n      client,\n      getGroups,\n      getOwnProfile,\n      createGroup,\n      getMembersOfRoom,\n      returnIdOfChildrenInSpace,\n      getRoomById,\n      login,\n    })\n  },\n  getters: {\n    getRooms: (state) => () => {\n      return state.getRooms()\n    },\n    updateTimeline: (state) => () => {\n      return updateTimeline()\n    },\n    getRoomState: (state) => () => {\n      return getRoomState()\n    },\n  },\n  setters: {\n    createGroup: (state) => (groupName) => {\n      return state.createGroup(groupName)\n    },\n    login: (state) => () => {\n      return state.login()\n    }\n  }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}